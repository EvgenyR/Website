@model Recipes.ViewModels.BlogViewModel
<link href="@Url.Content("~/Content/blog.css")" rel="stylesheet" type="text/css" />

@* Read the current page and total pages *@
 
@{
  var currentPage = ViewContext.RequestContext.HttpContext.Request["p"] != null 
    ? int.Parse(ViewContext.RequestContext.HttpContext.Request["p"]) 
    : 1;
     
  var totalPages = Math.Ceiling((double)Model.TotalPosts / 10);  
}
 
@* Check do we need to display pagination links *@
 
@if (currentPage > 1 || currentPage < totalPages)
{
  var p = string.Format("p={0}", currentPage - 1);
  var n = string.Format("p={0}", currentPage + 1);
 
  @* If the view is rendered for "search" action append the pagination value with "&" *@
   
  p = String.Concat("?", p);
  n = String.Concat("?", n);
   
  <!--pagination links-->
  <div class="pager">
   
    <a href="@p" title="Previous" class="previous"
        style="visibility:@(currentPage > 1 ? "visible" : "collapse")"><< previous</a>
         
    <a href="@n" title="Next" class="next"
        style="visibility:@(currentPage < totalPages ? "visible" : "collapse")">next >></a>
         
  </div>
}

@foreach(Recipes.Models.Post post in Model.Posts)
{
    <div id="middlecolumn">
        <div class="blogcontainer">
            <h3 class="title">@Html.ActionLink(post.Title, "../Post/Display", new { id = post.PostID, seofriendly = post.Title.ToSeoUrl() }) </h3>
            <div class="info"><span class="submitted">Submitted on @post.DateCreated</span></div>
            @MvcHtmlString.Create(post.BriefContent)
        </div>
    </div>
}