
namespace Recipes.Models.BlogContents
{
    public static class BlogPosts
    {
        public const string content_07092012_b =
            "<p>You will need:<ul><li><a href=\"http://htmlagilitypack.codeplex.com/\">HtmlAgilityPack</a> HTML Parser</li><li>Development environment</li><li>Internet connection</li></ul></p><p>Create a Visual Studio project, for example C# Windows Forms application. Drop a <b>TextBox</b>, a <b>Button</b> and a <b>ListView</b> on the form. Creat a class for the methods to be used, let's say <b>Helper.cs</b>. First, I'm using the <b>System.Net.Webclient</b> to call Google and get a page of search results.</p><pre class=\"brush: csharp\">" +

            @"public static WebClient webClient = new WebClient();

            public static string GetSearchResultHtlm(string keywords)
            {
                StringBuilder sb = new StringBuilder(""http://www.google.com/search?q="");
                sb.Append(keywords);
                return webClient.DownloadString(sb.ToString());
            }" +

            "</pre>";

        public const string content_07092012_r = "<p>The string that is returned is the html of the first page of the Google search for the string that is passed to the method. Opened in the web browser, it will look something like this</p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://1.bp.blogspot.com/-zxDpRcouMs0/UEbx0fDzesI/AAAAAAAABFQ/tCO-XaW9PpA/s1600/1.png\" imageanchor=\"1\" style=\"margin-left:1em; margin-right:1em\"><img border=\"0\" height=\"320\" width=\"297\" src=\"http://1.bp.blogspot.com/-zxDpRcouMs0/UEbx0fDzesI/AAAAAAAABFQ/tCO-XaW9PpA/s320/1.png\" /></a></div><p align=\"center\">Google search result page</p><p>What I want to extract is the actual links, which are marked in red on the screenshot above. Here I'm going to use <b>HtmlAgilityPack</b> to load the string into the <b>HtmlDocument</b> object. After the string is loaded, I will use a simple LINQ query to extract the nodes that match certain conditions: They are html links (a href), and the URL of the link contains either <b>\"/url?\"</b> or <b>\"?url=\"</b>. By this point, I get quite and unreadable list of values.</p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://1.bp.blogspot.com/-j6lEU61m_AQ/UEbx09VZE7I/AAAAAAAABFc/YPdWzf3c1XQ/s1600/2.png\" imageanchor=\"1\" style=\"margin-left:1em; margin-right:1em\"><img border=\"0\" height=\"61\" width=\"320\" src=\"http://1.bp.blogspot.com/-j6lEU61m_AQ/UEbx09VZE7I/AAAAAAAABFc/YPdWzf3c1XQ/s320/2.png\" /></a></div><p align=\"center\">Raw URLs</p><p>To bring it into readable form, I'll match it to a regular expression and then load the results into the <b>ListView</b>. Here is the code:</p><pre class=\"brush: csharp\">" +

            @"public static Regex extractUrl = new Regex(@""[&?](?:q|url)=([^&]+)"", RegexOptions.Compiled);

            public static List&lt;String&gt; ParseSearchResultHtml(string html)
            {
                List&lt;String&gt; searchResults = new List&lt;string&gt;();

                var doc = new HtmlAgilityPack.HtmlDocument();
                doc.LoadHtml(html);

                var nodes = (from node in doc.DocumentNode.SelectNodes(""//a"")
                             let href = node.Attributes[""href""]
                             where null != href
                             where href.Value.Contains(""/url?"") || href.Value.Contains(""?url="")
                             select href.Value).ToList();

                foreach (var node in nodes)
                {
                    var match = extractUrl.Match(node);
                    string test = HttpUtility.UrlDecode(match.Groups[1].Value);
                    searchResults.Add(test);
                }

                return searchResults;
            }" +

            "</pre><p>Here is the result:</p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://3.bp.blogspot.com/-QVsWrmIXGj8/UEbx1eIxZNI/AAAAAAAABFo/C0XmdtYVLJw/s1600/3.png\" imageanchor=\"1\" style=\"margin-left:1em; margin-right:1em\"><img border=\"0\" height=\"221\" width=\"320\" src=\"http://3.bp.blogspot.com/-QVsWrmIXGj8/UEbx1eIxZNI/AAAAAAAABFo/C0XmdtYVLJw/s320/3.png\" /></a></div><p align=\"center\">Final Results</p><p>I'm not quite sure why this may be useful, but as an exercise it is possible to add an option to parse through a certain number of pages, rather than just the first page. But if you try to run those queries in an automated mode, Google will soon start serving 503 errors to you.</p>";


        public const string content_03102012_b =
            "<p>When I have a long list on a web page, I would like to give the user an option to hide it. Turns out that is simple to do with a little bit of <b>jQuery</b>. All the contents that I would like to hide or show would go into a div element. Next to it, I will add a link to toggle the hide/show behaviour. Here's how it looks in my code:</p><pre class=\"brush: xml\">" +

            @"&lt;div class=""buttonlink""&gt;
             &lt;a href=""#"" class=""show_hide""&gt;Show/Hide List&lt;/a&gt;
             &lt;/div&gt;
            &lt;div class=""slidingDiv""&gt;
            @foreach (var item in Model.Recipes)
            {
              &lt;ol&gt;
                &lt;li class=""styled""&gt;
                &lt;div class=""display-button""&gt;@Html.ActionLink(""Edit"", ""Edit"", new { id = item.RecipeID })
                &lt;/div&gt;
                &lt;div class=""display-button""&gt;@Html.ActionLink(""Details"", ""Details"", new { id = item.RecipeID })&lt;/div&gt;
                &lt;div class=""display-button""&gt;@Html.ActionLink(""Delete"", ""Delete"", new { id = item.RecipeID })&lt;/div&gt;
                &lt;div class=""display-info""&gt;@item.RecipeName&lt;/div&gt;
                &lt;/li&gt;<br/>
                &lt;/ol&gt;<br/>
            }<br/>
            &lt;a href=""#"" cla<br/>ss=""show_hide""&gt;Hide&lt;/a&gt;
            &lt;/div&gt;<br/>" +
            "</pre>";

            public const string content_03102012_r = "<p>Here is the jQuery function that is called when the link is clicked</p><pre class=\"brush: jscript\">" +

            @"$(document).ready(function () {<br/>
                $("".slidingDiv"").hide();<br/>
                $("".show_hide"").show();<br/>
                $('.show_hide').click(function () {<br/>
                $("".slidingDiv"").slideToggle();<br/>
                });<br/>
            });<br/>" +

            "</pre><p>And the styles for the classes that I've just introduced above.</p><pre class=\"brush: css\">" +
            
            @".slidingDiv {<br/>
                height:300px;<br/>
                padding:20px;<br/>
                margin-top:35px;<br/>
                margin-bottom:10px;<br/>
            }<br/>
            .show_hide {<br/>
                display:none;<br/>
            }<br/>" + 
            
            "</pre><p>That's it.</p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://4.bp.blogspot.com/-q9MqGc1LXhI/UG02_CqIJVI/AAAAAAAABLg/REfr0SMG1BI/s1600/1.png\" imageanchor=\"1\" style=\"margin-left:1em; margin-right:1em\"><img border=\"0\" height=\"207\" width=\"320\" src=\"http://4.bp.blogspot.com/-q9MqGc1LXhI/UG02_CqIJVI/AAAAAAAABLg/REfr0SMG1BI/s320/1.png\" /></a></div><p align=\"center\">Shown</p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://3.bp.blogspot.com/-lBgp-Wh5xzg/UG02_iwB16I/AAAAAAAABLs/7S2ItkNT6Z0/s1600/2.png\" imageanchor=\"1\" style=\"margin-left:1em; margin-right:1em\"><img border=\"0\" height=\"189\" width=\"320\" src=\"http://3.bp.blogspot.com/-lBgp-Wh5xzg/UG02_iwB16I/AAAAAAAABLs/7S2ItkNT6Z0/s320/2.png\" /></a></div><p align=\"center\">Hidden</p>" +
            "<p><b>References</b></p><a href=\"http://stackoverflow.com/questions/3394996/jquery-show-hide-div\">jquery show/hide div</a><br/><a href=\"http://papermashup.com/simple-jquery-showhide-div/\">Simple jQuery Show/Hide Div</a><br/><a href=\"http://jsfiddle.net/mattball/rPYLK/\">Fiddle</a><br/>";

        public const string content_12082012_b =
            "<p>Today I had to perform a fairly specific task: restrict access to a Windows 7 folder to a single user. I think I found the way to do it properly, and it is not a straightforward task. Before I forget, I might keep a record of all actions required because I did not find a clear sequence anywhere on the net. It will only take 10 easy steps.</p>";

        public const string content_12082012_r = "<p>Let's assume there is a folder called <b>Bob's Documents</b> where only Bob, and not even the <b>Admin</b>, should have access.</p><ol><li>Right-click on <b>Bob's Documents</b> and select <b>Properties</b></li><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://2.bp.blogspot.com/-dMe0CEBvxZ8/UCg9SSny_nI/AAAAAAAABDA/ZZwUhdEKM98/s1600/Untitled00.png\" imageanchor=\"1\" style=\"margin-left:1em; margin-right:1em\"><img border=\"0\" height=\"209\" width=\"320\" src=\"http://2.bp.blogspot.com/-dMe0CEBvxZ8/UCg9SSny_nI/AAAAAAAABDA/ZZwUhdEKM98/s320/Untitled00.png\" /></a></div><p align=\"center\">Select Bob's Documents <b>Properties</b></p><li><b>Bob's Documents Properties</b> window will open. Switch to <b>Security</b> tab and click <b>Advanced</b> button.</li><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://4.bp.blogspot.com/-QaH7Te4GvpY/UCg9SgWLRVI/AAAAAAAABDM/OrazYUy6bkY/s1600/Untitled01.png\" imageanchor=\"1\" style=\"margin-left:1em; margin-right:1em\"><img border=\"0\" height=\"320\" width=\"246\" src=\"http://4.bp.blogspot.com/-QaH7Te4GvpY/UCg9SgWLRVI/AAAAAAAABDM/OrazYUy6bkY/s320/Untitled01.png\" /></a></div>"
        +
        "<p align=\"center\">Bob's Documents Properties</p><li><b>Advanced Security Settings for Bob's Documents</b> will open. On the <b>Permissions</b> tab, Click <b>Change Permissions</b> button.</li><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://3.bp.blogspot.com/-a7ZbFEu57Vw/UCg9S1fND3I/AAAAAAAABDY/mqKCELLvFZQ/s1600/Untitled02.png\" imageanchor=\"1\" style=\"margin-left:1em; margin-right:1em\"><img border=\"0\" height=\"206\" width=\"320\" src=\"http://3.bp.blogspot.com/-a7ZbFEu57Vw/UCg9S1fND3I/AAAAAAAABDY/mqKCELLvFZQ/s320/Untitled02.png\" /></a></div>"
        +
        "<p align=\"center\">Advanced Security Settings for Bob's Documents</p><li>Another window will open. Unfortunately, it's too called <b>Advanced Security Settings for Bob's Documents</b>, adding to confusion. In this new window, untick <b>Include inheritable permissions from this object's parent</b> - that will simplify things a lot, because we only care about permissions to this folder, not its parent folder.</li><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://4.bp.blogspot.com/-wWFN3mJr5o0/UCg9TC6lgPI/AAAAAAAABDk/9bRtE7yoG7w/s1600/Untitled03.png\" imageanchor=\"1\" style=\"margin-left:1em; margin-right:1em\"><img border=\"0\" height=\"218\" width=\"320\" src=\"http://4.bp.blogspot.com/-wWFN3mJr5o0/UCg9TC6lgPI/AAAAAAAABDk/9bRtE7yoG7w/s320/Untitled03.png\" /></a></div>"
        +
        "<p align=\"center\">Advanced Security Settings for Bob's Documents - but not the same one!</p><li>As soon as the chechbox is unticked, a warning called <b>Windows Security</b> will pop up. Since we're getting rid of parent permissions, click <b>Remove</b>.</li><div class=\"separator\" style=\"clear: both; text-align: center;\">"
        +
        "<a href=\"http://2.bp.blogspot.com/-kYY21szUGvs/UCg8E6fEfcI/AAAAAAAABC0/1YTnoumTHb0/s1600/Untitled04.png\" imageanchor=\"1\" style=\"margin-left:1em; margin-right:1em\"><img border=\"0\" height=\"146\" width=\"320\" src=\"http://2.bp.blogspot.com/-kYY21szUGvs/UCg8E6fEfcI/AAAAAAAABC0/1YTnoumTHb0/s320/Untitled04.png\" /></a></div><p align=\"center\"> "
        +
        "<b>Windows Security</b> warning</p><li>All permissions should have disappeared from the <b>Permission entries</b>. Now click <b>Add</b>.</li><li><b>Select User or Group</b> window will open. In <b>Enter the object name to select</b>, type Bob and click <b>Check Names</b> to make sure there is no typo. "
        +
        "Bob's name should resolve to PCName\\Bob.</li><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://1.bp.blogspot.com/-zrsGWl30oDw/UCg8Eh58kbI/AAAAAAAABCo/AZl4DUFqe6w/s1600/Untitled05.png\" imageanchor=\"1\" style=\"margin-left:1em; margin-right:1em\"><img border=\"0\" height=\"170\" "
        +
        "width=\"320\" src=\"http://1.bp.blogspot.com/-zrsGWl30oDw/UCg8Eh58kbI/AAAAAAAABCo/AZl4DUFqe6w/s320/Untitled05.png\" /></a></div><p align=\"center\">Select User or Group</p><li>Click <b>OK</b>. Now the <b>Permissions Entry for Bob's Documents</b> window will pop up. Let's give Bob full control - click the checkbox across from <b>Full Control</b> under <b>Allow</b>. All other checkboxes under <b>Allow</b> will select automatically. Click <b>OK</b> to close this window.</li><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://1.bp.blogspot.com/-KjhuD2ebT1k/UCg8EW-5UdI/AAAAAAAABCc/4ta4-IT-Zg4/s1600/Untitled06.png\" imageanchor=\"1\" style=\"margin-left:1em; margin-right:1em\"><img border=\"0\" height=\"320\" width=\"250\" src=\"http://1.bp.blogspot.com/-KjhuD2ebT1k/UCg8EW-5UdI/AAAAAAAABCc/4ta4-IT-Zg4/s320/Untitled06.png\" /></a></div><p align=\"center\">Permissions Entry for Bob's Documents</p><li>About done. Click <b>OK</b> in <b>Advanced Security Settings for Bob's Documents</b> to close it, and in another <b>Advanced Security Settings for Bob's Documents</b> to close it too, and <b>OK</b> in <b>Bob's Documents Properties</b>.</li><li>Try to browse to <b>Bob's Documents</b>. Even if you're on <b>Administrator</b> account, you should not be able to, but you should if you are logged in as Bob.</li><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://4.bp.blogspot.com/-o6D7UJbi200/UCg8EKsNOdI/AAAAAAAABCQ/68g828PrdUk/s1600/Untitled07.png\" imageanchor=\"1\" style=\"margin-left:1em; margin-right:1em\"><img border=\"0\" height=\"155\" width=\"320\" src=\"http://4.bp.blogspot.com/-o6D7UJbi200/UCg8EKsNOdI/AAAAAAAABCQ/68g828PrdUk/s320/Untitled07.png\" /></a></div><p align=\"center\">Permissions are set</p></ol>"
        ;

public const string content_08112012_b = ""; 
public const string content_08112012_r = ""; 

 /* 
<p>Stock data can be downloaded from <b>http://finance.yahoo.com/d/quotes.csv?s=[stock symbol string]&f=[special tags]</b>. Some tags are listed in the table at the end of the post, but that's not the point. I'll be using a static url for a code example, such as 
<a href=\"http://download.finance.yahoo.com/d/quotes.csv?s=GOOG+AAPL+MSFT+YHOO&f=snd1l1t1vb3b2hg">http://download.finance.yahoo.com/d/quotes.csv?s=GOOG+AAPL+MSFT+YHOO&f=snd1l1t1vb3b2hg</a> which will return values for Symbol, Name, Last trade date, Last trade (price only), Last trade time, Volume, Bid (real-time), Ask (real-time), Day's High and Day's Low.</p><p>The plan is to have a list of symbols (configurable), to get the data from yahoo and dynamically load the data into the <b>WebGrid</b> control. Therefore, I started with the basic <b></b>ViewModel that has two sets of entities - one for the symbols and one for the data itself. Eventually the list of symbols will be made configurable.</p><pre class="brush: csharp">//ViewModel
public class YahooViewModel
{
 public List&lt;YahooData&gt; Datas { get; set; }
 public List&lt;YahooSymbol&gt; Symbols { get; set; }
 public YahooSymbol Symbol { get; set; }
 public int YahooSymbolID { get; set; }

 public YahooViewModel(int symbolid, YahooSymbol symbol, List&lt;YahooSymbol&gt; symbols, List&lt;YahooData&gt; datas)
 {
  Symbol = symbol;
  YahooSymbolID = symbolid;
  Symbols = symbols;
  Datas = datas;
 }
}</pre><p>The controller requests and populates the data, and later the automatic authentication may be added as described in the previous post.</p><pre class="brush: csharp">//Controller
public ActionResult Index()
{
 List&lt;YahooData&gt; datas = GetData();
 List&lt;YahooSymbol&gt; symbols = db.YahooSymbols.ToList();
 YahooSymbol symbol = symbols.First();
 int id = symbol.YahooSymbolID;
 return View(new YahooViewModel(id, symbol, symbols, datas));
}

public List&lt;YahooData&gt; GetData()
{
 List&lt;YahooData&gt; datas = new List&lt;YahooData&gt;();

 HttpWebRequest req = (HttpWebRequest)WebRequest.Create("http://download.finance.yahoo.com/d/quotes.csv?s=GOOG+AAPL+MSFT+YHOO&f=snd1l1t1vb3b2hg");
 HttpWebResponse resp = (HttpWebResponse)req.GetResponse();

 using (StreamReader streamReader = new StreamReader(resp.GetResponseStream()))
 {
  string t = streamReader.ReadToEnd();
  string[] strings = t.Split(new string[] { Environment.NewLine }, StringSplitOptions.None);
  datas = InsertData(strings);
 }
 return datas;
}

private List&lt;YahooData&gt; InsertData(string[] lines)
{
 List&lt;YahooData&gt; datas = new List&lt;YahooData&gt;();

 foreach (string line in lines)
 {
  if (!String.IsNullOrEmpty(line))
  {
   YahooData datum = GetDatum(line);
   datas.Add(datum);
  }
 }
 return datas;
}

private YahooData GetDatum(string line)
{
 var datum = new YahooData();
 string[] splitLine = line.Split(',');
 datum = new YahooData()
 {
  DataName = splitLine[1].Replace("\"", ""),
  Date = DateTime.ParseExact(splitLine[2].Replace("\"", ""), "MM/d/yyyy", CultureInfo.InvariantCulture),
  LTP = decimal.Parse(splitLine[3]),
  Time = DateTime.Parse(splitLine[4].Replace("\"", "")),
  Volume = decimal.Parse(splitLine[5]),
  Ask = decimal.Parse(splitLine[6]),
  Bid = decimal.Parse(splitLine[7]),
  High = decimal.Parse(splitLine[8]),
  Low = decimal.Parse(splitLine[9])
 };
 return datum;
}</pre><p>The symbols are seeded initially, and may be later made configurable.</p><pre class="brush: csharp">//Seeding database with initial values
public class SampleData : DropCreateDatabaseIfModelChanges&lt;RecipesEntities&gt;
{
 protected override void Seed(RecipesEntities context)
 {
  AddSymbols(context);
 }
}

public static void AddSymbols(RecipesEntities context)
{
 List&lt;YahooSymbol&gt; symbols = new List&lt;YahooSymbol&gt;
 {
  new YahooSymbol {YahooSymbolID = 1, YahooSymbolName = "GOOG"},
  new YahooSymbol {YahooSymbolID = 2, YahooSymbolName = "AAPL"},
  new YahooSymbol {YahooSymbolID = 3, YahooSymbolName = "MSFT"},
  new YahooSymbol {YahooSymbolID = 4, YahooSymbolName = "YHOO"}
 };

 symbols.ForEach(p =&gt; context.YahooSymbols.Add(p));
 context.SaveChanges();
}</pre><p>Finally, the table of tags and their meanings - just for the interest.</p>

<TABLE BORDER="1"><TD>
<B>a </B> </TD><TD>  Ask </TD><TD>
<B>a2</B> </TD><TD>  Average Daily Volume </TD><TD>
<B>a5</B> </TD><TD>  Ask Size </TD><TR><TD>
<B>b </B> </TD><TD>  Bid </TD><TD>
<B>b2</B> </TD><TD>  Ask (Real-time) </TD><TD>
<B>b3</B> </TD><TD>  Bid (Real-time) </TD><TR><TD>
<B>b4</B> </TD><TD>  Book Value </TD><TD>
<B>b6</B> </TD><TD>  Bid Size </TD><TD>
<B>c </B> </TD><TD>  Change & Percent Change </TD><TR><TD>
<B>c1</B> </TD><TD>  Change </TD><TD>
<B>c3</B> </TD><TD>  Commission </TD><TD>
<B>c6</B> </TD><TD>  Change (Real-time) </TD><TR><TD>
<B>c8</B> </TD><TD>  After Hours Change (Real-time) </TD><TD>
<B>d </B> </TD><TD>  Dividend/Share </TD><TD>
<B>d1</B> </TD><TD>  Last Trade Date </TD><TR><TD>
<B>d2</B> </TD><TD>  Trade Date </TD><TD>
<B>e </B> </TD><TD>  Earnings/Share </TD><TD>
<B>e1</B> </TD><TD>  Error Indication (returned for symbol changed / invalid) </TD><TR><TD>
<B>e7</B> </TD><TD>  EPS Estimate Current Year </TD><TD>
<B>e8</B> </TD><TD>  EPS Estimate Next Year </TD><TD>
<B>e9</B> </TD><TD>  EPS Estimate Next Quarter </TD><TR><TD>
<B>f6</B> </TD><TD>  Float Shares </TD><TD>
<B>g </B> </TD><TD>  Day's Low </TD><TD>
<B>h </B> </TD><TD>  Day's High </TD><TR><TD>
<B>j </B> </TD><TD>  52-week Low </TD><TD>
<B>k </B> </TD><TD>  52-week High </TD><TD>
<B>g1</B> </TD><TD>  Holdings Gain Percent </TD><TR><TD>
<B>g3</B> </TD><TD>  Annualized Gain </TD><TD>
<B>g4</B> </TD><TD>  Holdings Gain </TD><TD>
<B>g5</B> </TD><TD>  Holdings Gain Percent (Real-time) </TD><TR><TD>
<B>g6</B> </TD><TD>  Holdings Gain (Real-time) </TD><TD>
<B>i </B> </TD><TD>  More Info </TD><TD>
<B>i5</B> </TD><TD>  Order Book (Real-time) </TD><TR><TD>
<B>j1</B> </TD><TD>  Market Capitalization </TD><TD>
<B>j3</B> </TD><TD>  Market Cap (Real-time) </TD><TD>
<B>j4</B> </TD><TD>  EBITDA </TD><TR><TD>
<B>j5</B> </TD><TD>  Change From 52-week Low </TD><TD>
<B>j6</B> </TD><TD>  Percent Change From 52-week Low </TD><TD>
<B>k1</B> </TD><TD>  Last Trade (Real-time) With Time </TD><TR><TD>
<B>k2</B> </TD><TD>  Change Percent (Real-time) </TD><TD>
<B>k3</B> </TD><TD>  Last Trade Size </TD><TD>
<B>k4</B> </TD><TD>  Change From 52-week High </TD><TR><TD>
<B>k5</B> </TD><TD>  Percebt Change From 52-week High </TD><TD>
<B>l </B> </TD><TD>  Last Trade (With Time) </TD><TD>
<B>l1</B> </TD><TD>  Last Trade (Price Only) </TD><TR><TD>
<B>l2</B> </TD><TD>  High Limit </TD><TD>
<B>l3</B> </TD><TD>  Low Limit </TD><TD>
<B>m </B> </TD><TD>  Day's Range </TD><TR><TD>
<B>m2</B> </TD><TD>  Day's Range (Real-time) </TD><TD>
<B>m3</B> </TD><TD>  50-day Moving Average </TD><TD>
<B>m4</B> </TD><TD>  200-day Moving Average </TD><TR><TD>
<B>m5</B> </TD><TD>  Change From 200-day Moving Average </TD><TD>
<B>m6</B> </TD><TD>  Percent Change From 200-day Moving Average </TD><TD>
<B>m7</B> </TD><TD>  Change From 50-day Moving Average </TD><TR><TD>
<B>m8</B> </TD><TD>  Percent Change From 50-day Moving Average </TD><TD>
<B>n </B> </TD><TD>  Name </TD><TD>
<B>n4</B> </TD><TD>  Notes </TD><TR><TD>
<B>o </B> </TD><TD>  Open </TD><TD>
<B>p </B> </TD><TD>  Previous Close </TD><TD>
<B>p1</B> </TD><TD>  Price Paid </TD><TR><TD>
<B>p2</B> </TD><TD>  Change in Percent </TD><TD>
<B>p5</B> </TD><TD>  Price/Sales </TD><TD>
<B>p6</B> </TD><TD>  Price/Book </TD><TR><TD>
<B>q </B> </TD><TD>  Ex-Dividend Date </TD><TD>
<B>r </B> </TD><TD>  P/E Ratio </TD><TD>
<B>r1</B> </TD><TD>  Dividend Pay Date </TD><TR><TD>
<B>r2</B> </TD><TD>  P/E Ratio (Real-time) </TD><TD>
<B>r5</B> </TD><TD>  PEG Ratio </TD><TD>
<B>r6</B> </TD><TD>  Price/EPS Estimate Current Year </TD><TR><TD>
<B>r7</B> </TD><TD>  Price/EPS Estimate Next Year </TD><TD>
<B>s </B> </TD><TD>  Symbol </TD><TD>
<B>s1</B> </TD><TD>  Shares Owned </TD><TR><TD>
<B>s7</B> </TD><TD>  Short Ratio </TD><TD>
<B>t1</B> </TD><TD>  Last Trade Time </TD><TD>
<B>t6</B> </TD><TD>  Trade Links </TD><TR><TD>
<B>t7</B> </TD><TD>  Ticker Trend </TD><TD>
<B>t8</B> </TD><TD>  1 yr Target Price </TD><TD>
<B>v </B> </TD><TD>  Volume </TD><TR><TD>
<B>v1</B> </TD><TD>  Holdings Value </TD><TD>
<B>v7</B> </TD><TD>  Holdings Value (Real-time) </TD><TD>
<B>w </B> </TD><TD>  52-week Range </TD><TR><TD>
<B>w1</B> </TD><TD>  Day's Value Change </TD><TD>
<B>w4</B> </TD><TD>  Day's Value Change (Real-time) </TD><TD>
<B>x </B> </TD><TD>  Stock Exchange </TD><TR><TD>
<B>y </B> </TD><TD>  Dividend Yield </TD><TD>
<B>  </B> </TD><TD></TD></TABLE>


 */ 

public const string content_25102012_b = ""; 
public const string content_25102012_r = ""; 

 /* 
<p>Recently I had to implement automated logging on the website. In my particular case, that was Yahoo.com website, so the code snippets will be specific to this site. It should not be hard to modify them for other purposes. I developed two separate ways to achieve that, the first one has more code and is more complex (have to subscribe to two events and make more logical checks), but I figured it out first. It makes use of the <b>WebBrowser</b> class.</p><p>Create an instance of the <b>WebBrowser</b> and subscribe to <b>Navigated</b> and <b>DocumentCompleted</b> events</p><pre class="brush: csharp">_browser = new WebBrowser();
_browser.DocumentCompleted += new WebBrowserDocumentCompletedEventHandler(browser_DocumentCompleted);
_browser.Navigated += new WebBrowserNavigatedEventHandler(browser_Navigated);</pre><p>On a timeline, first meaningful event that will be caught is <b>browser_DocumentCompleted</b> on the <b>login.yahoo.com</b>. The code then will analyse the controls on the page. For successful operation, I need to know actual names of the login and password input elements. I find them by name, and set the values to actual login and password. Then I simulate the click on the login button.</p><p>Next meaningful event is <b>browser_Navigated</b> on <b>my.yahoo.com</b> page - see below.</p><p>After that, I'll point the browser to the url of the document I want to read or download. I'll catch <b>browser_DocumentCompleted</b> again, on that page, and read the contents using the <b>WebBrowser.Document.Body.InnerText</b> (end of the code snippet).</p><pre class="brush: csharp">void browser_DocumentCompleted(object sender, WebBrowserDocumentCompletedEventArgs e)
{
 //loaded the Yahoo login page
 if (_browser.Url.AbsoluteUri.Contains(LoginUrl))
 {
  if (_browser.Document != null)
  {
   //Find and fill the "username" textbox
   HtmlElementCollection collection = _browser.Document.GetElementsByTagName("input");
   foreach (HtmlElement element in collection)
   {
    string name = element.GetAttribute("id");
    if (name == "username")
    {
     element.SetAttribute("value", _login);
     break;
    }
   }

   //Find and fill the "password" field
   foreach (HtmlElement element in collection)
   {
    string name = element.GetAttribute("id");
    if (name == "passwd")
    {
     element.SetAttribute("value", _password);
     break;
    }
   }

   //Submit the form
   collection = _browser.Document.GetElementsByTagName("button");
   foreach (HtmlElement element in collection)
   {
    string name = element.GetAttribute("id");
    if (name == ".save")
    {
     element.InvokeMember("click");
     break;
    }
   }
  }
 }
 
 //downloaded "quote.csv"
 if(_browser.Url.AbsoluteUri.Contains(".csv"))
 {
  if (_browser.Document != null && _browser.Document.Body != null)
  {
   string s = _browser.Document.Body.InnerText;
  }
 }
}</pre>

<p></p>Here I actually copy the cookies, but that is not necessary. The <b></b>WebBrowser will keep them internally and use them. The purpose of this code is to check if the browser is redirected to "my.yahoo.com", which is the indication of successful login. Further logic may be applied from here.

<pre class="brush: csharp">void browser_Navigated(object sender, WebBrowserNavigatedEventArgs e)
{
 //Successful login takes to "my.yahoo.com"
 if (_browser.Url.AbsoluteUri.Contains(MyYahoo))
 {
  if (_browser.Document != null && !String.IsNullOrEmpty(_browser.Document.Cookie))
  {
   _cookies = _browser.Document.Cookie;
  }
 }
}</pre><p>The second approach is shorted, but it took me longer to figure out. Here I have to explicitly use the <b>CookieContainer</b> to save the cookies "harvested" by the <b>HttpWebRequest</b> which does the login, and use them in the <b>HttpWebRequest</b> which asks for the file after authentication. Of course, I still need to know what are the names of login and password elements, because I'm sending the values in the POST data.</p><p>Step one - authentication</p><pre class="brush: csharp">string strPostData = String.Format("login={0}&passwd={1}", _login, _password);

// Setup the http request.
HttpWebRequest wrWebRequest = WebRequest.Create(LoginUrl) as HttpWebRequest;
wrWebRequest.Method = "POST";
wrWebRequest.ContentLength = strPostData.Length;
wrWebRequest.ContentType = "application/x-www-form-urlencoded";
_yahooContainer = new CookieContainer();
wrWebRequest.CookieContainer = _yahooContainer;

// Post to the login form.
using (StreamWriter swRequestWriter = new StreamWriter(wrWebRequest.GetRequestStream()))
{
 swRequestWriter.Write(strPostData);
 swRequestWriter.Close();           
}

// Get the response.
HttpWebResponse hwrWebResponse = (HttpWebResponse)wrWebRequest.GetResponse();</pre><p>Step two - accessing data using the cookies.</p><pre class="brush: csharp">HttpWebRequest req = (HttpWebRequest)WebRequest.Create(_downloadUrl);
req.CookieContainer = _yahooContainer;
HttpWebResponse resp = (HttpWebResponse)req.GetResponse();

using(StreamReader streamReader = new StreamReader(resp.GetResponseStream()))
{
 string t = streamReader.ReadToEnd();
}</pre><p><b>References:</b></p><a href=\"http://msdn.microsoft.com/en-us/library/aa752040(v=vs.85).aspx">WebBrowser control</a><br/><a href=\"http://forums.asp.net/t/1678714.aspx/1">submit a form data from external address !</a><br/><a href=\"http://stackoverflow.com/questions/930807/c-sharp-login-to-website-via-program">C# Login to Website via program</a><br/><a href=\"http://stackoverflow.com/questions/9123159/how-to-login-to-yahoo-website-programatically">how to login to yahoo website programatically</a>

 */ 

public const string content_14102012_b = ""; 
public const string content_14102012_r = ""; 

 /* 
<p>Based on the Ping example from one of the recent posts, I'm continuing it with the Crystal Reports example, because I have never used Crystal Reports until now. So consider that the following class was added to the solution.</p><pre class="brush: csharp">public class PingResult
{
 public string sPacketsSent;
 public string sPacketsReceived;
 public string sPacketsLost;
 public string sPacketTime;
}</pre><p>An instance of the class is created and populated with results when the ping command runs and its results are parsed. So I have one of the simplest possible objects to use as a source for a report. The next step is to add a <b>Crystal Report</b> to the application. <b>Visual Studio 2010</b> has an item to add called "Crystal Report", but they are not installed.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://4.bp.blogspot.com/-OcC0Cxw_rWk/UHqiIpBpmVI/AAAAAAAABMw/BBB8qBndw1I/s1600/1.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="221" width="320" src=\"http://4.bp.blogspot.com/-OcC0Cxw_rWk/UHqiIpBpmVI/AAAAAAAABMw/BBB8qBndw1I/s320/1.png\" /></a></div><p align="center">Crystal Report Online Template</p><p>When I select this item, I'm prompted with a download screen.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://1.bp.blogspot.com/-uWXFz07Sudo/UHqiJMrU5WI/AAAAAAAABM8/PsJszuoYulo/s1600/2.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="180" width="320" src=\"http://1.bp.blogspot.com/-uWXFz07Sudo/UHqiJMrU5WI/AAAAAAAABM8/PsJszuoYulo/s320/2.png\" /></a></div><p align="center">Download Crystal Reports</p><p>Installation is simple - just following the instructions. I chose the standard version, and the download size is 288MB. After a few short hours, I have a Crystal Report called pingReport.mht in my solution. I have an option to configure my report using the wizard, which I'm doing by choosing the following options:</p><p>On the first page, <b>Using the Report Wizard</b>, and <b>Standard</b> layout.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://3.bp.blogspot.com/-mlRHkxX_y_8/UHqiJv80knI/AAAAAAAABNI/qq1mNPIQhRI/s1600/3.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="249" width="320" src=\"http://3.bp.blogspot.com/-mlRHkxX_y_8/UHqiJv80knI/AAAAAAAABNI/qq1mNPIQhRI/s320/3.png\" /></a></div><p align="center">Create a New Crystal Report Document</p><p>On the next page, I choose to populate my report from .NET Object in project data. My PingResult class is in the list, and I move it to the <b>Selected Tables</b>.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://3.bp.blogspot.com/-6jwm5NIvHcY/UHqiKHzeO9I/AAAAAAAABNU/_HIF-jmnHYk/s1600/4.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="243" width="320" src=\"http://3.bp.blogspot.com/-6jwm5NIvHcY/UHqiKHzeO9I/AAAAAAAABNU/_HIF-jmnHYk/s320/4.png\" /></a></div><p align="center">Choose the data you want to report on</p><p>Then I choose the fields to display, of which I select all.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://3.bp.blogspot.com/-aj87f9NMT20/UHqijdbNwHI/AAAAAAAABNg/6WEYXMj658M/s1600/5.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="243" width="320" src=\"http://3.bp.blogspot.com/-aj87f9NMT20/UHqijdbNwHI/AAAAAAAABNg/6WEYXMj658M/s320/5.png\" /></a></div><p align="center">Choose the information to display on the report</p><p>I skip <b>Grouping</b>, <b>Report Selection</b> and <b>Report Style</b>, leaving default values. Now I have my report editor. I only want to do a little change - make the headers human readable, so I edit them in the following manner</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://4.bp.blogspot.com/-1Bg9sQcEHcU/UHqikIcH6tI/AAAAAAAABNs/qSh5VpL6GUY/s1600/6.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="180" width="320" src=\"http://4.bp.blogspot.com/-1Bg9sQcEHcU/UHqikIcH6tI/AAAAAAAABNs/qSh5VpL6GUY/s320/6.png\" /></a></div><p align="center">Edit text object</p><p>Now some tricks: when I build my solution, I get the following error:</p><p><u>Warning 1 The referenced assembly "CrystalDecisions.CrystalReports.Engine, Version=13.0.2000.0, Culture=neutral, PublicKeyToken=692fbea5521e1304, processorArchitecture=MSIL" could not be resolved because it has a dependency on "System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" which is not in the currently targeted framework ".NETFramework,Version=v4.0,Profile=Client". Please remove references to assemblies not in the targeted framework or consider retargeting your project. PingTest</u></p><p>This is quite obvious, I need to add a reference to <b>System.Web</b>, but to do that I need to first change the <b>Target Framework</b> default setting of <b>.NET Framework 4 Client Profile</b> to just <b>.NET Framework 4</b>. Now the project builds.</p><p>In my toolbox I now have the <b>pingReport1</b> component, which I add to the form.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://2.bp.blogspot.com/-3PLm93qxCGQ/UHqixx8KcBI/AAAAAAAABN4/G5FgFpCuFvo/s1600/7.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="180" width="320" src=\"http://2.bp.blogspot.com/-3PLm93qxCGQ/UHqixx8KcBI/AAAAAAAABN4/G5FgFpCuFvo/s320/7.png\" /></a></div><p align="center">pingReport1</p><p>I also need a report viewer, which I also add</p><div class="separator" style="clear: both; text-align: center;">
<a href=\"http://4.bp.blogspot.com/-E002VLydKE4/UHqiyd7eu_I/AAAAAAAABOE/Dx1p6Soaesw/s1600/8.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="180" width="320" src=\"http://4.bp.blogspot.com/-E002VLydKE4/UHqiyd7eu_I/AAAAAAAABOE/Dx1p6Soaesw/s320/8.png\" /></a></div><p align="center">CrystalReportViewer</p><p>The final effort: connect the report with the object that contains data. Here's how:</p><pre class="brush: csharp">pingReport1 myReport = new pingReport1();
myReport.SetDataSource(new[] { pingResult });
pingReportViewer1.ReportSource = myReport;</pre><p>Looks simple, just note how the objects are wrapped into array. This is important.</p><p>And the final trick, when I run the application, I get the FileNotFound exception</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://1.bp.blogspot.com/-nFu1m0oINxQ/UHqjAqa-h5I/AAAAAAAABOU/MrseB1vVjy8/s1600/9.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="180" width="320" src=\"http://1.bp.blogspot.com/-nFu1m0oINxQ/UHqjAqa-h5I/AAAAAAAABOU/MrseB1vVjy8/s320/9.png\" /></a></div><p align="center">FileNotFoundException</p><p>which is resolved by adding the <b>useLegacyV2RuntimeActivationPolicy="true"</b> parameter to the startup node of my app.config which now looks like the following</p><pre class="brush: xml">&lt;?xml version="1.0"?&gt;
&lt;configuration&gt;
&lt;startup  useLegacyV2RuntimeActivationPolicy="true"&gt;
  &lt;supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/&gt;
&lt;/startup&gt;
&lt;/configuration&gt;</pre><p>At this point I consider my small example complete.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://3.bp.blogspot.com/-rFA9KBFX3d0/UHqjBdExuPI/AAAAAAAABOc/nB825ercCgg/s1600/10.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="180" width="320" src=\"http://3.bp.blogspot.com/-rFA9KBFX3d0/UHqjBdExuPI/AAAAAAAABOc/nB825ercCgg/s320/10.png\" /></a></div><p align="center">Complete</p><p><b>References</b></p><a href=\"http://www.codeproject.com/Articles/12694/Creating-Crystal-Reports-using-C-with-Datasets">Creating Crystal Reports using C# with Datasets</a><br/><a href=\"http://stackoverflow.com/questions/7619745/very-odd-situation-with-crystalreport-and-or-visual-studio-2010-i-dont-know-may">Very Odd situation with CrystalReport and/or Visual studio 2010 I don't know maybe .Net Framework</a><br/><a href=\"http://stackoverflow.com/questions/3968727/can-crystal-reports-get-data-from-an-object-data-source">Can crystal reports get data from an object data source?</a>

 */ 

public const string content_07102012_b = ""; 
public const string content_07102012_r = ""; 

 /* 
<p>I'm developing a sample application using MVC - a "blog engine". OK, getting rid of all the buzzwords, it is just a few tables: Blogs, Bloggers, Posts. You can add bloggers, create blogs and add posts to a selected blog. Being a good boy, I'm trying not to pass objects like Blog or Post to the view, but rather use ViewModels wherever makes sense. Nothing complicated, for example</p><pre class="brush: csharp">public class BlogViewModel
{
 public Blog Blog;
 public List&lt;Post&gt; Posts;
 ...
 
 public BlogViewModel(Blog blog, List&lt;Post&gt; posts, ... )
 {
  Blog = blog;
  Posts = posts;
  ...
 }
}</pre><p>and then in the <b>BlogController</b> I would have these methods for creating a new blog:</p><pre class="brush: csharp">public ActionResult Create()
{
 Blogger selectedBlogger = db.Bloggers.First();
 Blog blog = new Blog();
 return View(new BlogViewModel(blog, new List&lt;Post&gt;(), ...));
}

[HttpPost]
public ActionResult Create(BlogViewModel viewModel)
{
 Blog blog = viewModel.Blog;
 blog.Blogger = db.Bloggers.Where(b => b.BloggerID == viewModel.BloggerID).FirstOrDefault();

 if (ModelState.IsValid)
 {
  try
  {
   db.Blogs.Add(blog);
   db.SaveChanges();
  }
  
  // process errors
 }
 return View(new BlogViewModel(blog, new List&lt;Post&gt;(), ...));
}</pre><p>Something like that. So I'm testing the create method when I suddenly recieve the "<i>No parameterless constructor defined for this object</i>" error.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://1.bp.blogspot.com/-m0r5FsGfXto/UFJWr-FVOEI/AAAAAAAABKo/6Gej1gCwKTI/s1600/1.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="219" width="320" src=\"http://1.bp.blogspot.com/-m0r5FsGfXto/UFJWr-FVOEI/AAAAAAAABKo/6Gej1gCwKTI/s320/1.png\" /></a></div><p align="center">No parameterless constructor defined for this object</p><p>That left me scratching my head for some time, because I could not figure out what constructor I'm missing. Took a bit of searching to realise: the constructor is missing in the <b>ViewModel</b>. If I modify the constructor shown above as follows</p><pre class="brush: csharp">public class BlogViewModel
{
 public Blog Blog;
 public List&lt;Post&gt; Posts;
 ...
 
 public BlogViewModel()
 { 
 }

 public BlogViewModel(Blog blog, List&lt;Post&gt; posts, List&lt;Blog&gt; blogs, int bloggerid, List&lt;Blogger&gt; bloggers)
 {
  Blog = blog;
  Posts = posts;
  ...
 }
}</pre><p>the error just goes away (notice that parameterless constructor that is just sitting there now, happily doing nothing?). Why is that? Well, I'll be totally honest: I have no idea.</p><p><b>Reference</b></p><a href=\"http://nicholasbarger.com/2012/03/11/fun-and-struggles-with-mvc-no-parameterless-constructor-defined/">Fun and Struggles with MVC – No Parameterless Constructor Defined</a>

 */ 

public const string content_27092012_b = ""; 
public const string content_27092012_r = ""; 

 /* 
<p>A simple example. Let's say I want to run ping from command line, but to make this more automated, or maybe user friendly, I would like to run a C# application that pings an IP address, captures the returned result and displays it in a user-friendly format.</p><p>Fist thing is to start the command prompt and execute a process. Here's one of the most convenient ways to use it: utilize <b>ProcessStartInfo</b> and <b>Process</b> classes, which are part of <b>System.Diagnostics</b> namespace. <b>ProcessStartInfo</b> takes the program to run, in this case <b>cmd.exe</b>, and parameters, in this case ping, together with its own parameters. Here's how it works:</p><pre class="brush: csharp">private void btnPing_Click(object sender, EventArgs e)
{
 string command = "/c ping " + txtIP.Text;

 ProcessStartInfo procStartInfo = new ProcessStartInfo("CMD", command);

 Process proc = new Process();
 proc.StartInfo = procStartInfo;
 proc.Start();
}</pre><div class="separator" style="clear: both; text-align: center;">
<a href=\"http://1.bp.blogspot.com/-TAkvWmjvw4U/UE_es2z4LpI/AAAAAAAABGE/DGqWDE3ldHQ/s1600/1.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="138" width="320" src=\"http://1.bp.blogspot.com/-TAkvWmjvw4U/UE_es2z4LpI/AAAAAAAABGE/DGqWDE3ldHQ/s320/1.png\" /></a></div><p align="center">Command prompts started from Windows Form</p><p>The process starts and the familiar command window appears, then the ping command runs. Now to capture the results of the ping, a few other lines are needed. Firstly, the output of the process needs to be redirected. The following values need to be set:</p><pre class="brush: csharp">procStartInfo.RedirectStandardOutput = true;
procStartInfo.UseShellExecute = false;</pre><p>Next, to capture the output line by line as it is sent by the process, I'll attach a function that does it asynchronously.</p><pre class="brush: csharp">proc.OutputDataReceived += new DataReceivedEventHandler(proc_OutputDataReceived);
proc.Start();
proc.BeginOutputReadLine();
proc.WaitForExit();</pre><p>The function can do anything, but in my case I'm simply redirecting the output to the Windows Form.</p><pre class="brush: csharp">void proc_OutputDataReceived(object sender, DataReceivedEventArgs e)
{
 if (e.Data != null)
 {
  txtOutput.Text = txtOutput.Text + e.Data.Trim() + Environment.NewLine;
 }
}</pre><p>Looks correct, so why am I receiving this exception:</p><p><i>Cross-thread operation not valid: Control 'txtOutput' accessed from a thread other than the thread it was created on.</i></p><p>Well, looks like it's telling me that the process is running from another thread and can not quite access my text box from that thread. Long story short, this is the shortest solution I have found for this issue (there are many options, some as complicated as using a BackgroundWorker).</p><pre class="brush: csharp">void proc_OutputDataReceived(object sender, DataReceivedEventArgs e)
{
 if (e.Data != null)
 {
  string newLine = e.Data.Trim() +Environment.NewLine;
  MethodInvoker append = () => txtOutput.Text += newLine;
  txtOutput.BeginInvoke(append);
 }
}</pre><div class="separator" style="clear: both; text-align: center;">
<a href=\"http://4.bp.blogspot.com/-YX1xABPAeCU/UE_etVx9mAI/AAAAAAAABGQ/Bac2EOYNqks/s1600/2.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="254" width="320" src=\"http://4.bp.blogspot.com/-YX1xABPAeCU/UE_etVx9mAI/AAAAAAAABGQ/Bac2EOYNqks/s320/2.png\" /></a></div><p align="center">Command prompt output redirected to Windows Form</p><p><b>References:</b></p><a href=\"http://stackoverflow.com/questions/7717518/having-trouble-with-process-class-while-redirecting-command-prompt-output-to-win">Having trouble with Process class while redirecting command prompt output to winform</a><a href=\"http://stackoverflow.com/questions/11631443/capturing-process-output-via-outputdatareceived-event">Capturing process output via OutputDataReceived event</a>

 */ 

public const string content_13092012_b = ""; 
public const string content_13092012_r = ""; 

 /* 
<p>You will need:<ul><li><a href=\"http://htmlagilitypack.codeplex.com/">HtmlAgilityPack</a> HTML Parser</li><li>Development environment</li><li>Internet connection</li></ul></p><p>Create a Visual Studio project, for example C# Windows Forms application. Drop a <b>TextBox</b>, a <b>Button</b> and a <b>ListView</b> on the form. Creat a class for the methods to be used, let's say <b>Helper.cs</b>. First, I'm using the <b>System.Net.Webclient</b> to call Google and get a page of search results.</p><pre class="brush: csharp">public static WebClient webClient = new WebClient();

public static string GetSearchResultHtlm(string keywords)
{
    StringBuilder sb = new StringBuilder("http://www.google.com/search?q=");
    sb.Append(keywords);
    return webClient.DownloadString(sb.ToString());
}</pre><p>The string that is returned is the html of the first page of the Google search for the string that is passed to the method. Opened in the web browser, it will look something like this</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://1.bp.blogspot.com/-zxDpRcouMs0/UEbx0fDzesI/AAAAAAAABFQ/tCO-XaW9PpA/s1600/1.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="320" width="297" src=\"http://1.bp.blogspot.com/-zxDpRcouMs0/UEbx0fDzesI/AAAAAAAABFQ/tCO-XaW9PpA/s320/1.png\" /></a></div><p align="center">Google search result page</p><p>What I want to extract is the actual links, which are marked in red on the screenshot above. Here I'm going to use <b>HtmlAgilityPack</b> to load the string into the <b>HtmlDocument</b> object. After the string is loaded, I will use a simple LINQ query to extract the nodes that match certain conditions: They are html links (a href), and the URL of the link contains either <b>"/url?"</b> or <b>"?url="</b>. By this point, I get quite and unreadable list of values.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://1.bp.blogspot.com/-j6lEU61m_AQ/UEbx09VZE7I/AAAAAAAABFc/YPdWzf3c1XQ/s1600/2.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="61" width="320" src=\"http://1.bp.blogspot.com/-j6lEU61m_AQ/UEbx09VZE7I/AAAAAAAABFc/YPdWzf3c1XQ/s320/2.png\" /></a></div><p align="center">Raw URLs</p><p>To bring it into readable form, I'll match it to a regular expression and then load the results into the <b>ListView</b>. Here is the code:</p><pre class="brush: csharp">public static Regex extractUrl = new Regex(@"[&?](?:q|url)=([^&]+)", RegexOptions.Compiled);

public static List&lt;String&gt; ParseSearchResultHtml(string html)
{
    List&lt;String&gt; searchResults = new List&lt;string&gt;();

    var doc = new HtmlAgilityPack.HtmlDocument();
    doc.LoadHtml(html);

    var nodes = (from node in doc.DocumentNode.SelectNodes("//a")
                 let href = node.Attributes["href"]
                 where null != href
                 where href.Value.Contains("/url?") || href.Value.Contains("?url=")
                 select href.Value).ToList();

    foreach (var node in nodes)
    {
        var match = extractUrl.Match(node);
        string test = HttpUtility.UrlDecode(match.Groups[1].Value);
        searchResults.Add(test);
    }

    return searchResults;
}</pre><p>Here is the result:</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://3.bp.blogspot.com/-QVsWrmIXGj8/UEbx1eIxZNI/AAAAAAAABFo/C0XmdtYVLJw/s1600/3.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="221" width="320" src=\"http://3.bp.blogspot.com/-QVsWrmIXGj8/UEbx1eIxZNI/AAAAAAAABFo/C0XmdtYVLJw/s320/3.png\" /></a></div><p align="center">Final Results</p><p>I'm not quite sure why this may be useful, but as an exercise it is possible to add an option to parse through a certain number of pages, rather than just the first page. But if you try to run those queries in an automated mode, Google will soon start serving 503 errors to you.</p>

 */ 

public const string content_11092012_b = ""; 
public const string content_11092012_r = ""; 

 /* 
<p>Today I had to perform a fairly specific task: restrict access to a Windows 7 folder to a single user. I think I found the way to do it properly, and it is not a straightforward task. Before I forget, I might keep a record of all actions required because I did not find a clear sequence anywhere on the net. It will only take 10 easy steps.</p><p>Let's assume there is a folder called <b>Bob's Documents</b> where only Bob, and not even the <b>Admin></b>, should have access.</p><ol><li>Right-click on <b>Bob's Documents</b> and select <b>Properties</b></li><div class="separator" style="clear: both; text-align: center;"><a href=\"http://2.bp.blogspot.com/-dMe0CEBvxZ8/UCg9SSny_nI/AAAAAAAABDA/ZZwUhdEKM98/s1600/Untitled00.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="209" width="320" src=\"http://2.bp.blogspot.com/-dMe0CEBvxZ8/UCg9SSny_nI/AAAAAAAABDA/ZZwUhdEKM98/s320/Untitled00.png\" /></a></div><p align="center">Select Bob's Documents <b>Properties</b></p><li><b>Bob's Documents Properties</b> window will open. Switch to <b>Security</b> tab and click <b>Advanced</b> button.</li><div class="separator" style="clear: both; text-align: center;"><a href=\"http://4.bp.blogspot.com/-QaH7Te4GvpY/UCg9SgWLRVI/AAAAAAAABDM/OrazYUy6bkY/s1600/Untitled01.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="320" width="246" src=\"http://4.bp.blogspot.com/-QaH7Te4GvpY/UCg9SgWLRVI/AAAAAAAABDM/OrazYUy6bkY/s320/Untitled01.png\" /></a></div>
<p align="center">Bob's Documents Properties</p><li><b>Advanced Security Settings for Bob's Documents</b> will open. On the <b>Permissions</b> tab, Click <b>Change Permissions</b> button.</li><div class="separator" style="clear: both; text-align: center;"><a href=\"http://3.bp.blogspot.com/-a7ZbFEu57Vw/UCg9S1fND3I/AAAAAAAABDY/mqKCELLvFZQ/s1600/Untitled02.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="206" width="320" src=\"http://3.bp.blogspot.com/-a7ZbFEu57Vw/UCg9S1fND3I/AAAAAAAABDY/mqKCELLvFZQ/s320/Untitled02.png\" /></a></div>
<p align="center">Advanced Security Settings for Bob's Documents</p><li>Another window will open. Unfortunately, it's too called <b>Advanced Security Settings for Bob's Documents</b>, adding to confusion. In this new window, untick <b>Include inheritable permissions from this object's parent</b> - that will simplify things a lot, because we only care about permissions to this folder, not its parent folder.</li><div class="separator" style="clear: both; text-align: center;"><a href=\"http://4.bp.blogspot.com/-wWFN3mJr5o0/UCg9TC6lgPI/AAAAAAAABDk/9bRtE7yoG7w/s1600/Untitled03.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="218" width="320" src=\"http://4.bp.blogspot.com/-wWFN3mJr5o0/UCg9TC6lgPI/AAAAAAAABDk/9bRtE7yoG7w/s320/Untitled03.png\" /></a></div>
<p align="center">Advanced Security Settings for Bob's Documents - but not the same one!</p><li>As soon as the chechbox is unticked, a warning called <b>Windows Security</b> will pop up. Since we're getting rid of parent permissions, click <b>Remove</b>.</li><div class="separator" style="clear: both; text-align: center;">
<a href=\"http://2.bp.blogspot.com/-kYY21szUGvs/UCg8E6fEfcI/AAAAAAAABC0/1YTnoumTHb0/s1600/Untitled04.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="146" width="320" src=\"http://2.bp.blogspot.com/-kYY21szUGvs/UCg8E6fEfcI/AAAAAAAABC0/1YTnoumTHb0/s320/Untitled04.png\" /></a></div><p align="center"><b>Windows Security</b> warning</p><li>All permissions should have disappeared from the <b>Permission entries</b>. Now click <b>Add</b>.</li><li><b>Select User or Group</b> window will open. In <b>Enter the object name to select</b>, type Bob and click <b>Check Names</b> to make sure there is no typo. Bob's name should resolve to PCName\Bob.</li><div class="separator" style="clear: both; text-align: center;"><a href=\"http://1.bp.blogspot.com/-zrsGWl30oDw/UCg8Eh58kbI/AAAAAAAABCo/AZl4DUFqe6w/s1600/Untitled05.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="170" width="320" src=\"http://1.bp.blogspot.com/-zrsGWl30oDw/UCg8Eh58kbI/AAAAAAAABCo/AZl4DUFqe6w/s320/Untitled05.png\" /></a></div><p align="center">Select User or Group</p><li>Click <b>OK</b>. Now the <b>Permissions Entry for Bob's Documents</b> window will pop up. Let's give Bob full control - click the checkbox across from <b>Full Control</b> under <b>Allow</b>. All other checkboxes under <b>Allow</b> will select automatically. Click <b>OK</b> to close this window.</li><div class="separator" style="clear: both; text-align: center;"><a href=\"http://1.bp.blogspot.com/-KjhuD2ebT1k/UCg8EW-5UdI/AAAAAAAABCc/4ta4-IT-Zg4/s1600/Untitled06.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="320" width="250" src=\"http://1.bp.blogspot.com/-KjhuD2ebT1k/UCg8EW-5UdI/AAAAAAAABCc/4ta4-IT-Zg4/s320/Untitled06.png\" /></a></div><p align="center">Permissions Entry for Bob's Documents</p><li>About done. Click <b>OK</b> in <b>Advanced Security Settings for Bob's Documents</b> to close it, and in another <b>Advanced Security Settings for Bob's Documents</b> to close it too, and <b>OK</b> in <b>Bob's Documents Properties</b>.</li><li>Try to browse to <b>Bob's Documents</b>. Even if you're on <b>Administrator</b> account, you should not be able to, but you should if you are logged in as Bob.</li><div class="separator" style="clear: both; text-align: center;"><a href=\"http://4.bp.blogspot.com/-o6D7UJbi200/UCg8EKsNOdI/AAAAAAAABCQ/68g828PrdUk/s1600/Untitled07.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="155" width="320" src=\"http://4.bp.blogspot.com/-o6D7UJbi200/UCg8EKsNOdI/AAAAAAAABCQ/68g828PrdUk/s320/Untitled07.png\" /></a></div><p align="center">Permissions are set</p></ol>

 */ 

public const string content_09082012_b = ""; 
public const string content_09082012_r = ""; 

 /* 

<p>Step one - create my own controller class. Simple, just add a <b>BaseController</b> to the <b>Controllers</b> folder</p><pre class="brush: csharp">public abstract class BaseController : Controller
{
}</pre><p>and then modify all existing contollers to inherit from <b>BaseController</b> rather than from <b>System.Web.Mvc.Controller</b>.</p><p>Next, I override the <b>OnException</b> method in the <b>BaseController</b> which is called whenever the exception is thrown within an action.</p><pre class="brush: csharp">public abstract class BaseController : Controller
{
    protected override void OnException(ExceptionContext filterContext)
    {
        var fileName = Path.Combine(Request.MapPath("~/App_Data"), "log.txt");
        WriteLog(fileName, filterContext.Exception.ToString());
        filterContext.ExceptionHandled = true; 
        this.View("Error").ExecuteResult(this.ControllerContext);
    }
    
    static void WriteLog(string logFile, string text)
    {   
        StringBuilder message = new StringBuilder();
        message.AppendLine(DateTime.Now.ToString());
        message.AppendLine(text);
        message.AppendLine("=========================================");
        System.IO.File.AppendAllText(logFile, message.ToString());
    }
}</pre><p>I can verify and find out that the Yellow Screen of Death is not indeed shown</p><div class="separator" style="clear: both; text-align: center;">
<a href=\"http://2.bp.blogspot.com/-vXLfvRvWtH8/UCRFUAgLo3I/AAAAAAAABBs/uXPg0KzESjM/s1600/1.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="100" width="320" src=\"http://2.bp.blogspot.com/-vXLfvRvWtH8/UCRFUAgLo3I/AAAAAAAABBs/uXPg0KzESjM/s320/1.png\" /></a></div><p align="center">Custom Error Page</p><p>And the log file is in my <b>App_Data</b> folder</p><div class="separator" style="clear: both; text-align: center;">
<a href=\"http://4.bp.blogspot.com/-FQmABpLIDOc/UCRFUZ6kfKI/AAAAAAAABB4/e1kajlNPtGs/s1600/2.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="270" width="320" src=\"http://4.bp.blogspot.com/-FQmABpLIDOc/UCRFUZ6kfKI/AAAAAAAABB4/e1kajlNPtGs/s320/2.png\" /></a></div><p align="center">Log File</p><p>Now that I can see it works, I would still want to see the exceptions as soon as they occur, rather than checking the log file on each occasion. To achieve that, first I need to add</p><pre class="brush: xml">&lt;customErrors mode="RemoteOnly" /&gt;</pre><p>to the <b>system.web</b> section of the <b>Web.config</b> file and then in the <b>OnException</b> method check if this section is set.</p><pre class="brush: csharp">protected override void OnException(ExceptionContext filterContext)
{
    var fileName = Path.Combine(Request.MapPath("~/App_Data"), "log.txt");
    WriteLog(fileName, filterContext.Exception.ToString());
    if (filterContext.HttpContext.IsCustomErrorEnabled)
    {
        filterContext.ExceptionHandled = true; 
        this.View("Error").ExecuteResult(this.ControllerContext);
    }
}</pre><p>Finally, I would like to receive an email when something on my website goes wrong. I'm adding a function for that, rearranging a few lines and come up with the final version of my <b>BaseController</b> (for now).</p><pre class="brush: csharp">using System;
using System.Web.Mvc;
using System.Text;
using System.IO;
using System.Net.Mail;

namespace Recipes.Controllers
{
    public abstract class BaseController : Controller
    {
        protected override void OnException(ExceptionContext filterContext)
        {
            string ex = filterContext.Exception.ToString();
            var fileName = Path.Combine(Request.MapPath("~/App_Data"), "log.txt");
            WriteLog(fileName, ex);
            SendEmail(ex);
            if (filterContext.HttpContext.IsCustomErrorEnabled)
            {
                filterContext.ExceptionHandled = true; 
                this.View("Error").ExecuteResult(this.ControllerContext);
            }
        }

        static StringBuilder ErrorText(string text)
        {
            StringBuilder message = new StringBuilder();
            message.AppendLine(DateTime.Now.ToString());
            message.AppendLine(text);
            message.AppendLine("=========================================");
            return message;
        }

        static void WriteLog(string logFile, string text)
        {
            System.IO.File.AppendAllText(logFile, ErrorText(text).ToString());
        }

        static void SendEmail(string text)
        {
            MailMessage mail = new MailMessage();
            SmtpClient client = new SmtpClient("smtp.example.com");
            client.Credentials = new System.Net.NetworkCredential("u$3r", "pa$$word"); client.Port = 587;

            mail.From = new MailAddress("mvc@example.com");
            mail.To.Add("developer@example.com");
            mail.Subject = "Error on your website";
            mail.Body = ErrorText(text).ToString();

            client.Send(mail); 
        }
    }
}</pre><p><b>References</b></p><a href=\"http://stackoverflow.com/questions/1166089/problem-with-generic-base-controller-error-handling-in-asp-net-mvc">Problem with generic base controller error handling in ASP.NET MVC</a><br/><a href=\"http://blog.dantup.com/2009/04/aspnet-mvc-handleerror-attribute-custom.html">ASP.NET MVC HandleError Attribute, Custom Error Pages and Logging Exceptions</a><br/><a href=\"http://stackoverflow.com/questions/9629647/how-to-send-email-from-asp-net-mvc-3">How to send email from Asp.net Mvc-3?</a><br/>
 */ 

public const string content_06082012_b = ""; 
public const string content_06082012_r = ""; 

 /* 
<p>I wrote some code and made a quick WPF application that implemented Conway's Game of Life earlier ( <a href=\"http://justmycode.blogspot.com/2012/07/game-of-life-exercise-and-extension.html">Game of Life Exercise and Extension Methods</a>).</p><p>Next, I wanted to see how the game could be run on the MVC platform. The solution in short: use javaScript <b>setInterval</b> function to load the partial view into the div. Use a method in the controller to generate the partial view.</p><p>Here is how my solution looked:</p><pre class="brush: csharp">public class GameController : Controller
{
    public ActionResult Index()
    {
        GameOfLifeHelpers.InitializeGame();
        return View(NextIteration());
    }

    [OutputCache(NoStore = true, Location = OutputCacheLocation.Client, Duration = 1)]
    public ActionResult Update()
    {
        return PartialView("_Table", NextIteration());
    }

    public HtmlString NextIteration()
    {
        GameOfLifeHelpers.DrawNextIteration();
        return new HtmlString(GameOfLifeHelpers.table.ToString());
    }
}</pre><p>The partial view is called <b>_Table</b> and is nothing more than the <b></b>HtmlString. Here is the partial view:</p><pre class="brush: xml">@model HtmlString
           
@{ Layout = null; }

@Model</pre><p>The model is just the <b>HtmlString</b> which gets rendered, and the <b>HtmlString</b> itself is just a simple table of a specified number of cells. And here is the <b>Index.cshtml</b></p><pre class="brush: jscript">&lt;script type="text/javascript"&gt;
    setInterval("$('#update').load('/Game/Update')", 1000);
&lt;/script&gt;

@model HtmlString

@{
    ViewBag.Title = "Index";
}

&lt;h2&gt;Index&lt;/h2&gt;
&lt;div id="update"&gt;@{Html.RenderPartial("_Table", Model);}&lt;/div&gt;
</pre><p>Note how the interval is set to 1000 ms and the <b>OutputCache</b> duration in the controller is set to the same value. Every second the call to load will return a partial view from the <b>Update</b> method. What does the Update method return? When the game starts, and empty html table is created with each cell having a blue background.</p><pre class="brush: csharp">public static void NewGameTable()
{
    table = new StringBuilder(@"&lt;table border=1 bordercolor=black cellspacing=0 cellpadding=0&gt;");
    for (int i = 0; i &lt; y; i++)
    {
        table.Append("&lt;tr&gt;");
        for (int j = 0; j &lt; x; j++)
        {
            table.Append("&lt;td width=10px height=10px bgcolor=#0276FD&gt;&lt;/td&gt;");
        }
        table.Append("&lt;/tr&gt;");
    }
    table.Append("&lt;/table&gt;");
}</pre><p>Then, on each iteration, a new boolead array is filled to specify which cells will be "alive".</p><pre class="brush: csharp">public static void DrawNextIteration()
{
    bool[,] arrCurrent = counter % 2 == 0 ? arrOne : arrTwo;
    bool[,] arrNext = counter % 2 == 0 ? arrTwo : arrOne;
    FillArray(arrNext, arrCurrent);
    counter++;
    for (int i = 0; i &lt; y; i++)
    {
        for (int j = 0; j &lt; x; j++)
        {
            if (arrNext[i, j] != arrCurrent[i, j])
            {
                table = arrNext[i, j] ? GameOfLifeTableReplaceCell(i, j, "#FF0000", table) : GameOfLifeTableReplaceCell(i, j, "#0276FD", table);
            }
        }
    }
}</pre><p>The function that replaces the cell is very simple - it calculates the position where the font for the cell is specified based on the coordinates and makes the cell color red if it went from "dead" to "alive", and vice versa.</p><pre class="brush: csharp">public static StringBuilder GameOfLifeTableReplaceCell(int i, int j, string colour, StringBuilder sb)
{
    const int rowLength = 48*x + 9;
    const int cellLength = 48;
    int start = 62 + i * rowLength + 4 + j * cellLength + 35;
    sb.Remove(start, 7);
    sb.Insert(start, colour);
    return sb;
}</pre><p>The rest of the code is omitted because it can be found in my earlier post and used with little or no change.</p>

 */ 

public const string content_05082012_b = ""; 
public const string content_05082012_r = ""; 

 /* 
<p>At first this bug report puzzled me a bit. Essentially it said <i>"Progress bar fills with blue rectangles, status text nearly impossible to read"</i>. That was a case of "works on my machine" because all I could see was that:</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://1.bp.blogspot.com/-5WXWPxNsTAA/UB8TWH73P6I/AAAAAAAABAk/sFwwQiKGXsY/s1600/1.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="14" width="320" src=\"http://1.bp.blogspot.com/-5WXWPxNsTAA/UB8TWH73P6I/AAAAAAAABAk/sFwwQiKGXsY/s320/1.png\" /></a></div><p align="center">Can you see blue rectangles?</p><p>However, I soon discovered that just optimizing my Windows visual effects for best performance does a neat trick. If you don't know, it's under <b>Control Panel &rarr; System &rarr; Advanced System Settings &rarr; Advanced &rarr; Performance &rarr; Settings &rarr; Visual Effects &rarr; Adjust for best performance</b>, as in the screen shot below</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://3.bp.blogspot.com/-KSyZGWQYwBg/UB8TWU90CaI/AAAAAAAABAw/NHQSQ_lj7wg/s1600/2.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="256" width="320" src=\"http://3.bp.blogspot.com/-KSyZGWQYwBg/UB8TWU90CaI/AAAAAAAABAw/NHQSQ_lj7wg/s320/2.png\" /></a></div><p align="center">Visual Effects</p><p>Here is what I saw:</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://1.bp.blogspot.com/-EIwAO5gIEhU/UB8TWhOB-yI/AAAAAAAABA8/z8XrfDjMw4c/s1600/3.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="10" width="320" src=\"http://1.bp.blogspot.com/-EIwAO5gIEhU/UB8TWhOB-yI/AAAAAAAABA8/z8XrfDjMw4c/s320/3.png\" /></a></div><p align="center">Can you see blue rectangles NOW?</p><p>That was an easy fix. I just modified the ForeColor of the ProgressBar as shown below from the default value:</p><pre class="brush: xml">//before
&lt;ProgressBar Name="Progress" Grid.Column="0" Value="{Binding ProgressValue}" HorizontalAlignment="Stretch"/&gt;

//after
&lt;ProgressBar Foreground="LightGreen" Name="Progress" Grid.Column="0" Value="{Binding ProgressValue}" HorizontalAlignment="Stretch"/&gt;</pre><p>Here is what I saw after making this change:</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://1.bp.blogspot.com/-G_vhuZMgsQc/UB8TW1mw8pI/AAAAAAAABBI/62jp9ptHnjw/s1600/4.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="11" width="320" src=\"http://1.bp.blogspot.com/-G_vhuZMgsQc/UB8TW1mw8pI/AAAAAAAABBI/62jp9ptHnjw/s320/4.png\" /></a></div><p align="center">Adjusted for best performance</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://4.bp.blogspot.com/-E_1fylonDus/UB8TXWR9XlI/AAAAAAAABBQ/QVkJUaMwzLo/s1600/5.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="13" width="320" src=\"http://4.bp.blogspot.com/-E_1fylonDus/UB8TXWR9XlI/AAAAAAAABBQ/QVkJUaMwzLo/s320/5.png\" /></a></div><p align="center">Allow Windows to determine settings</p><p><b>Reference:</b></p><a href=\"http://stackoverflow.com/questions/4734814/wpf-progressbar-foreground-color">WPF: Progressbar foreground color</a>

 */ 

public const string content_04082012_b = ""; 
public const string content_04082012_r = ""; 

 /* 

<p>I had to dive into the world of shell scripting and do some work there. One of the tasks I had was to automatically install a bunch of Windows Updates on a server. The server could not be connected to the Internet so the updates were provided as separate files. The updates could be a mix of regular executables or Microsoft Update Standalone Packages (.msu). The script gets the name of the folder it runs from and then iterates over the files in this folder. It checks the file extension and runs appropriate command depending on the file being EXE or MSU. It also checks the return value and keeps a counter on the number of updates that reported successful and unsuccessful result, and writes the result of each install into a log file. At the end it displays a message that informs a user about the number of successfully installed and failed updates.</p><pre class="brush: vb">Sub Main

Dim objfso, objShell
Dim iSuccess, iFail
Dim folder, files, sFolder, folderidx, Iretval, return
Set objfso = CreateObject("Scripting.FileSystemObject")
Set objShell = CreateObject("Wscript.Shell")
 
sFolder = left(WScript.ScriptFullName,(Len(WScript.ScriptFullName))-(len(WScript.ScriptName)))
Set folder = objfso.GetFolder(sFolder)
Set logFile = objfso.CreateTextFile("C:\log.txt", TRUE)
Set files = folder.Files
iSuccess = 0
iFail = 0
 
For each folderIdx In files
 If Ucase(Right(folderIdx.name,3)) = "MSU" then
  logFile.WriteLine("Installing " & folderidx.name & "...")
  wscript.echo "Installing " & folderidx.name & "..."
  iretval=objShell.Run ("wusa.exe " & sfolder & folderidx.name & " /quiet /norestart", 1, True)
  If (iRetVal = 0) or (iRetVal = 3010) then
   logFile.WriteLine("Success.")
   wscript.echo "Success."
   iSuccess = iSuccess + 1
  Else
   logFile.WriteLine("Failed.")
   wscript.echo "Failed."
   iFail = iFail + 1
  End If
 ElseIf Ucase(Right(folderIdx.name,3)) = "EXE" Then
  logFile.WriteLine("Installing " & folderidx.name & "...")
  wscript.echo "Installing " & folderidx.name & "..."
  iretval = objShell.Run(folderidx.name & " /q /norestart", 1, True)
  If (iRetVal = 0) or (iRetVal = 3010) then
   logFile.WriteLine("Success.")
   wscript.echo "Success."
   iSuccess = iSuccess + 1
  Else
   logFile.WriteLine("Failed.")
   wscript.echo "Failed."
   iFail = iFail + 1
  End If
 End If
Next

wscript.echo iSuccess & " update(s) installed successfully and " & iFail & " update(s) failed. See C:\log.txt for details."
 
End Sub

Main()</pre>
 */ 

public const string content_31072012_b = ""; 
public const string content_31072012_r = ""; 

 /* 
<p>A quick attempt in writing the Game of Life simulator using WPF. As a side goal, I wanted to better understand the extension methods in C# so I tried to move as much code as possible into the <b>Helper</b> class without sacrificing readability.</p><p><b>PopulateGrid</b> adds 50 rows and columns to a WPF Grid, creating a 50x50 matrix of cell. It then adds a rectangle to each cell so coloring could be applied. <b>RePaintCell</b> changes the background color of the cell at position i,j. <b>InitializeArray</b> just fills a 50x50 array of booleans, each value representing either a live or dead cell. <b>CheckCell</b> checks a single cell to find out if it will be live or dead in the next iteration. <b>FillArray</b> uses <b>CheckCell</b> to analyse the current array and construct the array of the next iteration. <b>DrawArray</b> compares the current and next iterations. If there is difference in the color of the cell at i,j, this cell is painted appropriately, otherwise it is skipped. Finally, <b>AddGlider</b> adds a glider element to the empty array so it was easy to test that the game runs correctly. The full listing is below.</p><p><b>MainWindow.xaml</b></p><pre class="brush: xml">&lt;Window x:Class="GameOfLife.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="386" Width="525"&gt;
    &lt;Grid Name="MainGrid"&gt;
        &lt;Grid Name="DynamicGrid" ShowGridLines="True"&gt;
        &lt;/Grid&gt;
        &lt;Button Content="Button" Height="23" HorizontalAlignment="Left" Margin="25,316,0,0" Name="button1" VerticalAlignment="Top" Width="75" Click="button1_Click" /&gt;
    &lt;/Grid&gt;
&lt;/Window&gt;</pre><p><b>MainWindow.xaml.cs</b></p><pre class="brush: csharp">using System.Windows;
using System.Windows.Media;
using System.Windows.Threading;
using System;

namespace GameOfLife
{
    public partial class MainWindow : Window
    {
        private bool[,] arrOne = new bool[Helper.x, Helper.y];
        private bool[,] arrTwo = new bool[Helper.x, Helper.y];
        private DispatcherTimer dt = new DispatcherTimer();
        private int count;

        public MainWindow()
        {
            InitializeComponent();
            dt.Interval = TimeSpan.FromMilliseconds(100);
            dt.Tick += dt_Tick;
            dt.Start();
            Loaded += MainWindow_Loaded;
        }

        void MainWindow_Loaded(object sender, RoutedEventArgs e)
        {
            DynamicGrid.PopulateGrid(new SolidColorBrush(Colors.Blue));
            InitializeGame();
        }

        void InitializeGame()
        {
            arrOne.InitializeArray(false);
            arrTwo.InitializeArray(false);
            arrOne.AddGlider(20, 30);
            arrOne.DrawArray(arrTwo, DynamicGrid);
        }

        void dt_Tick(object sender, EventArgs e)
        {
            if(true)
            {
                bool[,] arrCurrent = count%2 == 0 ? arrOne : arrTwo;
                bool[,] arrNext = count%2 == 0 ? arrTwo : arrOne;

                arrNext.FillArray(arrCurrent);
                arrNext.DrawArray(arrCurrent, DynamicGrid);
                count++;
            }
        }

        private void button1_Click(object sender, RoutedEventArgs e)
        {
            if(dt.IsEnabled)
                dt.Stop();
            else
                dt.Start();
        }
    }
}</pre><p><b>Helper.cs</b></p><pre class="brush: csharp">using System.Linq;
using System.Windows.Controls;
using System.Windows.Shapes;
using System.Windows.Media;

namespace GameOfLife
{
    public static class Helper
    {
        public const int x = 50;
        public const int y = 50;

        public static void PopulateGrid(this Grid grid, SolidColorBrush brush)
        {
            for (int i = 0; i &lt; y; i++)
            {
                grid.RowDefinitions.Add(new RowDefinition());
            }

            for (int j = 0; j &lt; x; j++)
            {
                grid.ColumnDefinitions.Add(new ColumnDefinition());
            }

            for (int i = 0; i &lt; y; i++)
            {
                for (int j = 0; j &lt; x; j++)
                {
                    Rectangle rect = new Rectangle();
                    rect.SetValue(Grid.RowProperty, i);
                    rect.SetValue(Grid.ColumnProperty, j);
                    rect.Fill = brush;
                    grid.Children.Add(rect);
                }
            }
        }

        public static void RePaintCell(this Grid grid, int i, int j, SolidColorBrush brush)
        {
            Rectangle cell = grid.Children.Cast&lt;Rectangle&gt;().First(r =&gt; Grid.GetRow(r) == j && Grid.GetColumn(r) == i);
            cell.Fill = brush;
        }

        public static void InitializeArray&lt;T&gt;(this T[,] arr, T value)
        {
            int iDim = arr.GetLength(0);
            int jDim = arr.GetLength(1);
            for (int i = 0; i &lt; iDim; i++)
            {
                for (int j = 0; j &lt; jDim; j++)
                {
                    arr[i, j] = value;
                }
            }
        }

        public static void AddGlider(this bool[,] arr, int x, int y)
        {
            arr[x - 1, y] = false;
            arr[x - 1, y + 1] = false;
            arr[x - 1, y + 2] = true;

            arr[x, y] = true;
            arr[x, y + 1] = false;
            arr[x, y + 2] = true;

            arr[x + 1, y] = false;
            arr[x + 1, y + 1] = true;
            arr[x + 1, y + 2] = true;
        }

        public static void FillArray(this bool[,] arr, bool[,]arrCurrent)
        {
            for (int i = 0; i &lt; y; i++)
            {
                for (int j = 0; j &lt; x; j++)
                {
                    arr[i, j] = arrCurrent.CheckCell(i, j);
                }
            }
        }

        public static void DrawArray(this bool[,] arr, bool[,] arrCurrent, Grid grid)
        {
            SolidColorBrush redBrush = new SolidColorBrush(Colors.Red);
            SolidColorBrush blueBrush = new SolidColorBrush(Colors.Blue);

            for (int i = 0; i &lt; y; i++)
            {
                for (int j = 0; j &lt; x; j++)
                {
                    if (arr[i, j] != arrCurrent[i, j])
                    {
                        SolidColorBrush brush = arr[i, j] ? redBrush : blueBrush;
                        grid.RePaintCell(i, j, brush);
                    }
                }
            }
        }

        public static bool CheckCell(this bool[,] arr, int i, int j)
        {
            int nextI = i == (x - 1) ? 0 : i + 1;
            int prevI = i == 0 ? x - 1 : i - 1;
            int nextJ = j == (y - 1) ? 0 : j + 1;
            int prevJ = j == 0 ? y - 1 : j - 1;

            bool[] neighbours = new[]{
                                        arr[prevI, prevJ],   arr[i, prevJ],   arr[nextI, prevJ],
                                        arr[prevI, j],       arr[nextI, j],   arr[prevI, nextJ],
                                        arr[i, nextJ],       arr[nextI, nextJ]
                                    };

            int val = neighbours.Count(c =&gt; c);

            if (arr[i, j])
                return (val &gt;= 2 && val &lt;= 3) ? true : false;
            else
                return (val == 3) ? true : false;
        }
    }
}</pre><p><b>Reference</b></p><a href=\"http://en.wikipedia.org/wiki/Conway%27s_Game_of_Life">Conway's Game of Life</a><div class="separator" style="clear: both; text-align: center;"><a href=\"http://2.bp.blogspot.com/-9n2qn-Kjxxs/UBhgaEBPooI/AAAAAAAAA2s/v4loHMHPWM0/s1600/1.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="193" width="263" src=\"http://2.bp.blogspot.com/-9n2qn-Kjxxs/UBhgaEBPooI/AAAAAAAAA2s/v4loHMHPWM0/s320/1.png\" /></a></div><p align="center">The results are impressive</p>

 */ 

public const string content_17072012_b = ""; 
public const string content_17072012_r = ""; 

 /* 
<p>Adding a pop-out menu to the application turned out to be two major steps. The second step can be broken down into obvious sub-steps too:</p><ul><li>Create HTML structure for the menu and apply the CSS</li><li>Create a ViewModel for the menu partial view and fill it with data<ul><li>Create a ViewModel</li><li>Create a controller to fill it with data</li><li>Modify the view to render the ViewModel properly</li></ul></li></ul><p>The first step I'm not describing here because I used a well-written tutorial[1]. I will only record here the styles I added to <b>Site.css</b>:</p><pre class="brush: css">#menu {
    width: 12em;
    background: #eee;
}

#menu ul {
    list-style: none;
    margin: 0;
    padding: 0;
}

#menu a, #menu h2 {
    font: bold 11px/16px arial, helvetica, sans-serif;
    display: block;
    border-width: 1px;
    border-style: solid;
    border-color: #ccc #888 #555 #bbb;
    margin: 0;
    padding: 2px 3px;
}

#menu h2 {
    color: #fff;
    background: #000;
    text-transform: uppercase;
}

#menu a {
    color: #000;
    background: #efefef;
    text-decoration: none;
}

#menu a:hover {
    color: #a00;
    background: #fff;
}

#menu li {position: relative;}

#menu ul ul ul {
    position: absolute;
    top: 0;
    left: 100%;
    width: 100%;
}

div#menu ul ul ul,
div#menu ul ul li:hover ul ul
{display: none;}

div#menu ul ul li:hover ul,
div#menu ul ul ul li:hover ul
{display: block;}</pre><p>The second step I'll write down in more detail.</p><p><b>1.</b> Create a partial view for the left sidebar. I decided to render the partial view by calling <b>Html.Action</b>, so I modified the div that holds the left sidebar in <b>_Layout.shtml</b> to look like this:</p><pre class="brush: xml">&lt;div id="left-sidebar"&gt;
 @Html.Action("MenuResult", "LeftMenu")
&lt;/div&gt;</pre><p>Then I created a partial view called <b>MenuResult.shtml</b> and placed it in the <b>Shared</b> folder. This is how the HTML structure looks like:</p><pre class="brush: xml">@model Recipes.Models.LeftMenuViewModel

@{ Layout = null; }

&lt;div id="menu"&gt;
    &lt;ul&gt;
        &lt;li&gt;&lt;h2&gt;Recipes Menu&lt;/h2&gt;
            &lt;ul&gt;
                &lt;li&gt;@Html.ActionLink("Recipes", "../Recipe/Index")
                    &lt;ul&gt;
                         &lt;li&gt;Test menu item
                            &lt;ul&gt;
                                    &lt;li&gt;Test child menu item&lt;/li&gt;
                            &lt;/ul&gt;
                        &lt;/li&gt;                           
                    &lt;/ul&gt;
                &lt;/li&gt;
            &lt;/ul&gt;
        &lt;/li&gt;
    &lt;/ul&gt;
&lt;/div&gt;</pre><p><b>2.</b> ViewModel. After I was satisfied with the way the "stub" menu works, I started working on the model for the partial view. My first attempt looked something like this, a pretty simple model:</p><pre class="brush: csharp">public class LeftMenuViewModel
{
 public List&lt;Category&gt; Categories { get; set; }
}</pre><p>And a pretty simple nested foreach iterator that attempts to render the view:</p><pre class="brush: xml">&lt;ul&gt;
 &lt;li&gt;@Html.ActionLink("Recipes", "../Recipe/Index")
  &lt;ul&gt;
   @foreach(var cat in Model.Categories)
   {
    &lt;li&gt;@Html.ActionLink(cat.CategoryName, @Html.CategoryAction(cat.CategoryID).ToString())
    &lt;ul&gt;
     @foreach(var subcat in cat.SubCategories)
     {
      &lt;li&gt;@Html.ActionLink(subcat.SubCategoryName, @Html.SubCategoryAction(subcat.SubCategoryID).ToString())&lt;/li&gt;
     }
    &lt;/ul&gt;
   &lt;/li&gt;                           
   }
  &lt;/ul&gt;
 &lt;/li&gt;
&lt;/ul&gt;</pre><p><b>3.</b> Controller. The initial version of the controller looked something like this:</p><pre class="brush: csharp">public class LeftMenuController : Controller
{
 public PartialViewResult MenuResult()
 {
  LeftMenuViewModel viewModel = new LeftMenuViewModel();

  using (RecipesEntities db = new RecipesEntities())
  {
   viewModel.Categories = db.Categories.ToList();
   foreach (var cat in viewModel.Categories)
   {
    cat.SubCategories = db.SubCategories.Where(s => s.CategoryID == cat.CategoryID).ToList();
   }
  }
  return PartialView(viewModel);
 }
}</pre><p>That was the initial attempt, but when I ran this, I was presented with the following exception: <i>The ObjectContext instance has been disposed and can no longer be used for operations that require a connection.</i></p><div class="separator" style="clear: both; text-align: center;">
<a href=\"http://1.bp.blogspot.com/-G1ehJ1tO-Ag/UAYELwdZa-I/AAAAAAAAA2c/zY8_a1fbhPs/s1600/2.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="65" width="320" src=\"http://1.bp.blogspot.com/-G1ehJ1tO-Ag/UAYELwdZa-I/AAAAAAAAA2c/zY8_a1fbhPs/s320/2.png\" /></a></div><p align="center">The ObjectContext instance has been disposed</p><p>That looked a bit weird to me - I can see the elements of the collection, but the application refuses to iterate through them, complaining about the context. I found a couple of thoughtful posts on the reason for such a behaviour. First post [2] suggested that most likely, the execution of the query was deferred and now, in the view, when it actually tries to execute the query, I have disposed of the DbContext already and it fails. The suggestion was to convert the query results to list using <b>.ToList()</b> so the query gets executed before disposing. That did not work. Another post [3] suggested replacing the foreach iterator with a for one for a number of reasons, but that did not help either.</p><p>I gave it some thought and chose an easy way out - remove the dependency on the LINQ and complex entity objects and create my own very simple class to use in the view model. Here is the final code, which worked for me:</p><p><b>View Model</b></p><pre class="brush: csharp">public class LeftMenuViewModel
{
 public List&lt;MenuElement&gt; elements { get; set; }
}

public class MenuElement
{
 public int id { get; set; }
 public string name { get; set; }
 public List&lt;MenuElement&gt; children { get; set; }

}</pre><p><b>Controller</b></p><pre class="brush: csharp">public class LeftMenuController : Controller
{
 public PartialViewResult MenuResult()
 {
  LeftMenuViewModel viewModel = new LeftMenuViewModel();
  viewModel.elements = new List&lt;MenuElement&gt;();

  using (RecipesEntities db = new RecipesEntities())
  {
   List&lt;Category&gt; cats = db.Categories.ToList();
   foreach (var category in cats)
   {
                MenuElement element = new MenuElement() {id = category.CategoryID, name = category.CategoryName, children = new List&lt;MenuElement&gt;()};

    List&lt;SubCategory&gt; subcats =
     db.SubCategories.Where(s =&gt; s.CategoryID == category.CategoryID).ToList();

    foreach (var subcat in subcats)
    {
     element.children.Add(new MenuElement(){id = subcat.SubCategoryID, name = subcat.SubCategoryName} );
    }
    viewModel.elements.Add(element);
   }
  }
  return PartialView(viewModel);
 }
}</pre><p><b>View</b></p><pre class="brush: xml">@model Recipes.Models.LeftMenuViewModel

@{ Layout = null; }

&lt;div id="menu"&gt;
    &lt;ul&gt;
        &lt;li&gt;&lt;h2&gt;Recipes Menu&lt;/h2&gt;
            &lt;ul&gt;
                &lt;li&gt;@Html.ActionLink("Recipes", "../Recipe/Index")
                    &lt;ul&gt;

                        @for(int i=0; i&lt;Model.elements.Count(); i++)
                        {
                         &lt;li&gt;@Html.ActionLink(Model.elements[i].name, @Html.CategoryAction(Model.elements[i].id).ToString())
                            &lt;ul&gt;
                                @for(int j=0; j&lt;Model.elements[i].children.Count(); j++)
                                {
                                    &lt;li&gt;@Html.ActionLink(Model.elements[i].children[j].name, @Html.SubCategoryAction(Model.elements[i].children[j].id).ToString())&lt;/li&gt;
                                }
                            &lt;/ul&gt;
                        &lt;/li&gt;                           
                        }
                    &lt;/ul&gt;
                &lt;/li&gt;
            &lt;/ul&gt;
        &lt;/li&gt;
    &lt;/ul&gt;
&lt;/div&gt;</pre><p>While this looks a bit more complex compared to the initial attempt, I think there is really much less space for error. Here is how the menu looks like:</p><div class="separator" style="clear: both; text-align: center;">
<a href=\"http://2.bp.blogspot.com/-_mohmihTwOc/UAYEL6QuquI/AAAAAAAAA2Q/8XClFq1hPvA/s1600/1.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="168" width="320" src=\"http://2.bp.blogspot.com/-_mohmihTwOc/UAYEL6QuquI/AAAAAAAAA2Q/8XClFq1hPvA/s320/1.png\" /></a></div><p align="center">Left side pop-out menu</p><p><b>References:</b></p><a href=\"http://ago.tanfa.co.uk/css/examples/menu/tutorial-v.html">CSS Pop-Out Menu Tutorial</a><br/><a href=\"http://stackoverflow.com/questions/5360372/the-objectcontext-instance-has-been-disposed-and-can-no-longer-be-used-for-opera">The ObjectContext instance has been disposed and can no longer be used for operations that require a connection</a><br/><a href=\"http://stackoverflow.com/questions/8894442/mvc-razor-view-nested-foreachs-model">MVC Razor view nested foreach's model</a>

 */ 

public const string content_05072012_b = ""; 
public const string content_05072012_r = ""; 

 /* 
<p>Continuing the recipe database example, the next step is to not just keep a list of ingredients that are required for a recipe, but also to allow specifying the quantity of each ingredient. Up to this point, I did not need any "mapping table" due to the MVC magic - the <b>Recipe</b> object kept a list of ingredients, and the <b>Ingredient</b> object kept a list of recipes. That was all that MVC needed to resolve the many-to-many relationship between recipes and ingredients and I could get away with just two models.</p><p>Now that I want to know how much of the ingredient is required, I don't have a place to save this information. I don't think I can get away without the <b>RecipeIngredient</b> model any longer. I'm adding that and also giving the user the ability to add and remove ingredients. This requires a technique to edit and save a list of variable length, which is referenced at the end of this post and which I applied, with small modifications.</p><p>To display the list, the following technique is used: a div element which contains one entry from the list is placed in a partial view. Each time the user adds an entry to the list, another such div is appended to the list using an Ajax call to a jQuery append() function. Each time the user removes an entry, a div is removed, which is even easier. To begin with, I added the following to the recipe's Edit view</p><pre class=\"brush: js\">&lt;fieldset&gt;
 &lt;div id="editorRows"&gt;
 &lt;ol&gt;
  @foreach (var item in Model.RecipeIngredients)
  {
   @Html.Partial("_RIEditor", item)
  }
 &lt;/ol&gt;
 &lt;/div&gt;
 @Html.ActionLink("Add another ...", "Add", null, new {id = "addItem"})
&lt;/fieldset&gt;</pre><p>The same partial view <b>_RIEditor</b> is repeated once per each ingredient. The "Add another ..." link will later add an ingredient when the user clicks it. And here's a sample _RIEditor partial view ( the <b>Layout=null</b> part was added because otherwise my partial view was rendered with the header and the footer).</p><pre class="brush: csharp">@using Recipes.HtmlHelpers
@model Recipes.Models.RecipeIngredient
           
@{ Layout = null; }

&lt;div class="editorRow"&gt;
    @using (Html.BeginCollectionItem("RecipeIngredients"))
    {
        &lt;li class="styled"&gt;
        &lt;div class="display-label"&gt;Ingredient:&lt;/div&gt;@Html.TextBoxFor(model =&gt; model.Ingredient.IngredientName)
        &lt;div class="display-label-nofloat"&gt;Amount:&lt;/div&gt;@Html.TextBoxFor(model =&gt; model.Quantity, new { size = 4 })
        &lt;a href="#" class="deleteRow"&gt;delete&lt;/a&gt;
        &lt;/li&gt;
    }
&lt;/div&gt;</pre><p>The key part here is the <b>Html.BeginCollectionItem</b>, which renders a sequence of items that will later be bound to a single collection. In short, it keeps track of the items as they are added or deleted, and when the form is finally submitted, the neat collection of items is returned, ready to be saved to database.</p><p>Now to allow for adding or deleting elements, I need to add two functions. Here's the example:</p><pre class=\"brush: js\">&lt;script type="text/javascript"&gt;
&lt;!--
    $("#addItem").click(function () {
        $.ajax({
            url: this.href,
            cache: false,
            success: function (html) { $("#editorRows").append(html); }
        });
        return false;
    });

    $("a.deleteRow").live("click", function () {
        $(this).parents("div.editorRow:first").remove();
        return false;
    });
--&gt;
&lt;/script&gt;</pre><p>I also need to reference a couple of JavaScript files to make it work</p><pre class=\"brush: js\">&lt;script src=\"@Url.Content("~/Scripts/MicrosoftAjax.js")" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src=\"@Url.Content("~/Scripts/MicrosoftMvcValidation.debug.js")" type="text/javascript"&gt;&lt;/script&gt;</pre>
<p>Almost done, now I only need to take care of that "Add another ..." link that I added to the Edit view. To make it work, I only need a simple action added to the controller. which will return the partial view.</p><pre class="brush: csharp">public ViewResult Add()
{
 return View("_RIEditor", new RecipeIngredient());
}</pre><p>So, what have I achieved? Here's the first approximation of how my ingredient list may look like when I load the recipe from the database</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://2.bp.blogspot.com/-5grAdaDUGtU/T_Z5hovP24I/AAAAAAAAA1o/K_eRcO7kNsQ/s1600/1.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="54" width="320" src=\"http://2.bp.blogspot.com/-5grAdaDUGtU/T_Z5hovP24I/AAAAAAAAA1o/K_eRcO7kNsQ/s320/1.png\" /></a></div><p align="center">Original List of Ingredients</p><p>And how it looks when I click "Add another ...": a line for a new ingredient is added, looking the same as other lines and I can enter some data</p><div class="separator" style="clear: both; text-align: center;">
<a href=\"http://3.bp.blogspot.com/-0za6JvTx6Dk/T_Z5h8_7pDI/AAAAAAAAA10/NeCzrPf8cz4/s1600/2.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="70" width="320" src=\"http://3.bp.blogspot.com/-0za6JvTx6Dk/T_Z5h8_7pDI/AAAAAAAAA10/NeCzrPf8cz4/s320/2.png\" /></a></div><p align="center">Modified List of Ingredients</p><p>And then I can verify that some data is returned back on Submit, so my changes are not being lost</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://1.bp.blogspot.com/-vq164er9gtE/T_Z5iMekuMI/AAAAAAAAA2A/7kFSqL46SdE/s1600/3.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="156" width="320" src=\"http://1.bp.blogspot.com/-vq164er9gtE/T_Z5iMekuMI/AAAAAAAAA2A/7kFSqL46SdE/s320/3.png\" /></a></div><p align="center">Data Posted by the View</p><p>The concept is working at this point - I get back my three "RecipeIngredients" and the data I entered. It's only the proof of concept at this point, I need to make a number of modifications to make it functional.</p><p><b>References:</b></p><a href=\"https://github.com/danludwig/BeginCollectionItem/blob/master/BeginCollectionItem/HtmlPrefixScopeExtensions.cs">BeginCollectionItem source code</a><br/><a href=\"http://blog.codeville.net/2010/01/28/editing-a-variable-length-list-aspnet-mvc-2-style/">Editing a variable length list, ASP.NET MVC 2-style</a>

 */ 

public const string content_14062012_b = ""; 
public const string content_14062012_r = ""; 

 /* 
<p>This is a rather short post. A little "trick" is required to test validation. If the <b>Create</b> function is called directly from the unit test, and the entity is validated using <b>DataAnnotation</b> validation, the model binder will not be invoked and the validation will not take place. The test result, obviously, will not be the expected one. To deal with that, it is necessary to mimic the behavior of the model binder. The following test creates a <b>ValidationContext</b> and uses the <b>DataAnnotations</b>.Validator class to validate the model.</p><pre class="brush: csharp">[TestMethod()]
public void ValidateNameIsTooShort()
{
 Ingredient ingredient = new Ingredient() { IngredientName = "a" };

 var validationContext = new ValidationContext(ingredient, null, null);
 var validationResults = new List&lt;ValidationResult&gt;();
 Validator.TryValidateObject(ingredient, validationContext, validationResults);

 string error = GetValidationError(validationResults);

 Assert.AreEqual(error, Constants.Constants.IngredientNameTooShort);
}</pre><p>If any errors are caught by the validation, they will be added to the <b>ModelState</b> of the controller. To get it back and compare with my expected error message, I just need to retrieve the first error message from the list of <b>ValidationResult</b>.</p><pre class="brush: csharp">public string GetValidationError(List&lt;ValidationResult&gt; results)
{
 foreach (var result in results)
 {
  if(!String.IsNullOrEmpty(result.ErrorMessage))
  {
   return result.ErrorMessage;
  }
 }
 return string.Empty;
}</pre><p><b>References:</b></p><a href=\"http://johan.driessen.se/posts/testing-dataannotation-based-validation-in-asp.net-mvc">Testing DataAnnotation-based validation in ASP.NET MVC</a><br/><a href=\"http://stackoverflow.com/questions/1269713/unit-tests-on-mvc-validation">Unit tests on MVC validation</a><br/>

 */ 

public const string content_12062012_b = ""; 
public const string content_12062012_r = ""; 

 /* 
<p>Continuing the example with a recipe database, and having the most basic structure working (recipes belong to categories and consist of ingredients), it is time to remember about <b>TDD</b> (test driven development). To be honest, it is already too late, because in proper TDD tests are supposed to be writter before the code is. I'll do my best next time. This time, however, there are some simple tests I can think of which relate to the <b>Ingredient</b> entity</p><ul><li>Test that an Ingredient can be inserted into the database</li><li>Test that an Ingredient can be edited</li><li>Test that an Ingredient can be deleted from the database</li><li>Test that an Ingredient can not be deleted if it is used by any Recipe</li><li>Test that an Ingredient with a name that is too short can not be created</li><li>Test that an Ingredient with a name that is too long can not be created</li><li>Test that an existing Ingredient can not be edited so that its name becomes too short</li><li>Test that an existing Ingredient can not be edited so that its name becomes too long</li></ul><p>In fact, the last four tests are not related to database manipulations because the errors will be caught before the attempt to save data is made. It would be more appropriate to place them in a separate class, which will test the model and I'll return to them next time. The first four tests appear to test database operations.</p><p>Firstly, I would like to have each test start from a known state - for example, an almost empty database which has some minimal amount of seed data. To achieve that, I use the initializer class that inherits from <b>DropCreateDatabaseAlways</b>. For reference, here is the full listing - the only thing I care about is to override the Seed function. I will use the data to test that I can not delete the ingredient which is in use.</p><pre class="brush: csharp">public class TestDatabaseInitializer : DropCreateDatabaseAlways&lt;RecipesEntities&gt;
{
 protected override void Seed(RecipesEntities context)
 {
  var category0 = new Category { CategoryName = "Mains", Description = "Main Dishes" };
  var category1 = new Category { CategoryName = "Desserts", Description = "Dessert Dishes" };
  var categories = new List&lt;Category&gt;() { category0, category1 };
  categories.ForEach(c =&gt; context.Categories.Add(c));

  var ingredient0 = new Ingredient { IngredientName = "Meat" };
  var ingredient1 = new Ingredient { IngredientName = "Fish" };
  var ingredient2 = new Ingredient { IngredientName = "Potato" };
  var ingredients = new List&lt;Ingredient&gt;() { ingredient0, ingredient1, ingredient2 };
  ingredients.ForEach(i =&gt; context.Ingredients.Add(i));

  var recipes = new List&lt;Recipe&gt;();
  recipes.Add(new Recipe { RecipeName = "Grilled fish with potatoes", Category = category0, Ingredients = new List&lt;Ingredient&gt;() { ingredient1, ingredient2 } });
  recipes.Add(new Recipe { RecipeName = "Grilled steak with potatoes", Category = category0, Ingredients = new List&lt;Ingredient&gt;() { ingredient0, ingredient2 } });
  recipes.ForEach(r =&gt; context.Recipes.Add(r));
 }
}</pre><p>I added a small function to my test class to create a database.</p><pre class="brush: csharp">[TestInitialize()]
public void SetupDatabase()
{
 Database.DefaultConnectionFactory = new SqlCeConnectionFactory("System.Data.SqlServerCe.4.0");
 Database.SetInitializer&lt;RecipesEntities&gt;(new TestDatabaseInitializer());
}</pre><p>Now I think I'm ready to create a simple test.</p><pre class="brush: csharp">[TestMethod()]
public void CreateTest()
{
 SetupDatabase();
 IngredientController target = new IngredientController();
 Ingredient ingredient = new Ingredient() { IngredientName = "test" };

 ActionResult actual = target.Create(ingredient);
 Assert.IsTrue(ingredient.IngredientID != 0);

 RecipesEntities db = new RecipesEntities();
 var newIngredient = db.Ingredients.Find(ingredient.IngredientID);
 Assert.AreEqual(ingredient.IngredientName, newIngredient.IngredientName);
}</pre><p>I create the <b>Ingredient</b>, record it's <b>IngredientID</b> and make sure that I can retrieve it back from the database by ID after it's added. Deletion and editing tests are equally simple. Now the "negative" test: I'm not testing what I can do now, but rather what I can not do. I should not be able to delete the ingredient if it is used by any recipes - that would destroy referential integrity. Here is a simple test that passes:</p><pre class="brush: csharp">[TestMethod()]
public void CanNotDeleteUsedIngredient2()
{
 SetupDatabase();
 IngredientController target = new IngredientController();
 RecipesEntities db = new RecipesEntities();
 var ingredient = db.Ingredients.Where(i =&gt; i.IngredientName == "Meat").FirstOrDefault();
 int id = ingredient.IngredientID;

 Assert.IsNotNull(ingredient);
 ActionResult actual = target.DeleteConfirmed(id);

 db = new RecipesEntities();
 var deletedIngredient = db.Ingredients.Find(id);
 Assert.IsNotNull(deletedIngredient);
}</pre><p>Okay, I tried to delete the ingredient and then I verified and it is still in the database. That's expected, but that tells me nothing about the reason why the ingredient was not deleted. Maybe the whole database is offline or there is an uncommitted transaction. To improve the test, I would like to know something about the reason. I need to check for the errors in the <b>ModelState</b>. Fortunately, I can access the <b>ModelState</b> from the <b>ActionResult</b>. Here is what I could do to return the first error that is found in the <b>ModelState</b>:</p><pre class="brush: csharp">public string GetFirstErrorMessage(ActionResult result)
{
 ViewResult vr = (ViewResult)result;

 foreach (ModelState error in vr.ViewData.ModelState.Values)
 {
  foreach (var innerError in error.Errors)
  {
   if (!string.IsNullOrEmpty(innerError.ErrorMessage))
   {
    return innerError.ErrorMessage;
   }
  }
 }
 return string.Empty;
}</pre><p>Now I can modify the test to check the <b>ErrorMessage</b>. The check is rather lame at the moment - the error message is created dynamically to tell the user what recipes exactly use the ingredient. So I do not want to check the full error message and I'm satisfied with the fact that the first 10 characters are what I expect. Here is the slightly modified test:</p><pre class="brush: csharp">[TestMethod()]
public void CanNotDeleteUsedIngredient()
{
 SetupDatabase();
 IngredientController target = new IngredientController();
 RecipesEntities db = new RecipesEntities();
 var ingredient = db.Ingredients.Where(i =&gt; i.IngredientName == "Meat").FirstOrDefault();
 int id = ingredient.IngredientID;

 Assert.IsNotNull(ingredient);

 ActionResult actual = target.DeleteConfirmed(id);
 Assert.AreEqual(GetFirstErrorMessage(actual).Substring(0, 10), "Cannot del");

 db = new RecipesEntities();
 var deletedIngredient = db.Ingredients.Find(id);
 Assert.IsNotNull(deletedIngredient);
}</pre><p><b>References:</b></p><a href=\"http://www.arrangeactassert.com/code-first-entity-framework-unit-test-examples/">Code First Entity Framework Unit Test Examples</a><br/><a href=\"http://msdn.microsoft.com/en-us/vs2010trainingcourse_aspnetmvc3testing_topic4">Exercise 2: Testing CRUD actions</a><br/><a href=\"http://stackoverflow.com/questions/1352948/how-to-get-all-errors-from-asp-net-mvc-modelstate">How to get all Errors from asp.net mvc modelState?</a><br/><a href=\"http://stackoverflow.com/questions/2071095/how-to-get-the-model-from-an-actionresult">How to get the Model from an ActionResult?</a>

 */ 

public const string content_15052012_b = ""; 
public const string content_15052012_r = ""; 

 /* 

<p>Continuing the application from the last post, I was now going to use a <b>MultiSelectList</b> to update the many-to-many relationship. The use case is the following: suppose we have a recipe but want to update it - maybe the dish will benefit from adding a bit of pepper. So how do I go about adding something to the list of ingredients? The solution was not so straightforward and there were at least three "gotchas" on the way.</p><p><b>Gotcha 1.</b> To actually populate the <b>MultiSelectList</b>. The easy (but not quite straightforward) task was to create the <b></b>MultiSelectList and to populate it with all the ingredients. To do that I added the properties to the <b>Recipe</b> class called <b>AllIngredients</b> and <b>SelectedIngredientIDs</b>. The most basic <b>Recipe</b> class now looks like this:</p><pre class="brush: csharp">public class Recipe
{
 [ScaffoldColumn(false)]
 public int RecipeID { get; set; }
 public string RecipeName { get; set; }

 public virtual ICollection&lt;Ingredient&gt; Ingredients { get; set; }
 public IEnumerable&lt;int&gt; SelectedIngredientIDs { get; set; }
 public ICollection&lt;Ingredient&gt; AllIngredients { get; set; }

 public Recipe()
 {
  Ingredients = new HashSet&lt;Ingredient&gt;();
 }
}</pre><p>In the controller, I populate all ingredients from the database into the <b>AllIngredients</b> and then the IDs of the ingredients of the recipe into the <b>SelectedIngredientIDs</b>.</p><pre class="brush: csharp">Recipe recipe = recipeDB.Recipes.Find(id);
recipe.AllIngredients = recipeDB.Ingredients.ToList();

recipe.SelectedIngredientIDs = Enumerable.Empty&lt;int&gt;();
foreach (Ingredient ing in recipe.Ingredients)
{
 recipe.SelectedIngredientIDs = recipe.SelectedIngredientIDs.Concat(new[] {ing.IngredientID});
}</pre><p>Then I create a <b>MultiSelectList</b> as follows</p><pre class="brush: csharp">@Html.ListBoxFor(model =&gt; model.SelectedIngredientIDs, new MultiSelectList(Model.AllIngredients, "IngredientID", "IngredientName"), new {Multiple = "multiple"})</pre><p><b>Gotcha 2.</b> Preselect the current ingredients in the list. The application works by now and the list is populated, but nothing is selected. Why is that? I checked the <b>SelectedIngredientIDs</b> and they are populated properly. The trick was to find out that MVC uses the <b>ToString</b> method as a way to determine if an item is selected or not, so I had to override it in the <b>Ingredient</b> class. Just added a piece of code below and it started working like magic.</p><pre class="brush: csharp">public class Ingredient
{
 public int IngredientID { get; set; }
 
 ...
 
 public override string ToString()
 {
  return this.IngredientID.ToString();
 }
}</pre><p><b>Gotcha 3.</b> Finally, I had my list being populated and I also could change the selection to my content. However, no exceptions were thrown but also no updates were being saved to the database. The not-so-little trick was to find out how exactly to let the Entity Framework know what needs to be updated. Here is the slightly simplified <b>HttpPost</b> method (try/catch omitted etc) which worked, with comments.</p><pre class="brush: csharp">[HttpPost]
public ActionResult Edit(Recipe recipe)
{
 if(ModelState.IsValid)
 {
  //get the id of the current recipe
  int id = recipe.RecipeID;
  //load recipe with ingredients from the database
  var recipeItem = recipeDB.Recipes.Include(r =&gt; r.Ingredients).Single(r =&gt; r.RecipeID == id);
  //apply the values that have changed
  recipeDB.Entry(recipeItem).CurrentValues.SetValues(recipe);
  //clear the ingredients to let the framework know they have to be processed
  recipeItem.Ingredients.Clear();
  //now reload the ingredients again, but from the list of selected ones as per model provided by the view
  foreach (int ingId in recipe.SelectedIngredientIDs)
  {
   recipeItem.Ingredients.Add(recipeDB.Ingredients.Find(ingId));
  }
  //finally, save changes as usual
  recipeDB.SaveChanges();
  return RedirectToAction("Index");
 }
 return View(recipe);
}</pre><p>I'm anticipating the gotchas in the Create view already!</p><p><b>References I used</b></p><a href=\"http://stackoverflow.com/questions/3737985/asp-net-mvc-multiselectlist-with-selected-values-not-selecting-properly">ASP.NET MVC MultiSelectList with selected values not selecting properly</a><br><a href=\"http://www.i-script.nl/?p=48">MVC 3 Quirk: MultiSelect with selected items</a><br><a href=\"http://stackoverflow.com/questions/5850649/many-to-many-relationship-basic-example-mvc3">Many-To-Many Relationship Basic Example (MVC3)</a>
 */ 

public const string content_13052012_b = ""; 
public const string content_13052012_r = ""; 

 /* 
<p>Learning MVC I came across a need to create a many-to-many relationship between entities using the code first approach. For an example, let's consider the Recipes database which holds recipes and ingredients. A recipe has multiple ingredients, such as meat, potatoes, pepper and so on. At the same time an ingredient may belong to multiple recipes, i.e. you can cook meat with potatoes but fish and chips will also require potatoes. That's a classic many-to-many relationship which has a classic mapping table solution, where one many-to-many relationship would convert to two one-to-many by adding a new table. The diagram would look like the following:</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://1.bp.blogspot.com/-6RIT1DUXd-Q/T7BCvuTIjCI/AAAAAAAAA0Y/oEtUyqgD4-s/s1600/01.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="200" width="320" src=\"http://1.bp.blogspot.com/-6RIT1DUXd-Q/T7BCvuTIjCI/AAAAAAAAA0Y/oEtUyqgD4-s/s320/01.png\" /></a></div><p align="center">Typical database solution for many-to-many relationship</p><p>So my first guess was that I will have to create three classes while implementing a similar structure with MVC code first. Fortunately, so far it appears to be easier than that. Below is the small exercise that creates a most basic MVC project from scratch and illustrates the many-to-many relationship via code first.</p><p>Start Visual Studio 2010 and select <b>File</b> -> <b>New Project</b>, select <b>ASP.NET MVC 3 Web Application</b>. On the next screen I selected <b>Empty</b> application to make the example most simple.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://4.bp.blogspot.com/-aN96z8Jb46o/T7BCwHCJaqI/AAAAAAAAA0k/PPoUdGw7UeY/s1600/02.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="293" width="320" src=\"http://4.bp.blogspot.com/-aN96z8Jb46o/T7BCwHCJaqI/AAAAAAAAA0k/PPoUdGw7UeY/s320/02.png\" /></a></div><p align="center">Create an empty MVC 3 application</p><p>After the project was created, I added a <b>HomeController</b> to create a basic home page. Probably not necessary, but lets the application run without displaying an error. Right-click <b>Controllers</b> folder, select <b>Add</b> -> <b>Controller</b> and add an empty <b>HomeController</b>.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://4.bp.blogspot.com/-dsairDO2zbk/T7BCwQ7IYXI/AAAAAAAAA0w/XZIDjp15SnA/s1600/03.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="130" width="320" src=\"http://4.bp.blogspot.com/-dsairDO2zbk/T7BCwQ7IYXI/AAAAAAAAA0w/XZIDjp15SnA/s320/03.png\" /></a></div><p align="center">Add a HomeController</p><p>Inside the <b>HomeController.cs</b>, the <b>Index()</b> method, right-click and select <b>Add View</b>. Leave default values and click <b>Add</b>.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://2.bp.blogspot.com/-_DSG6QJne3Y/T7BCcKM7XMI/AAAAAAAAA0M/Kv8JzjIQQKk/s1600/04.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="316" width="320" src=\"http://2.bp.blogspot.com/-_DSG6QJne3Y/T7BCcKM7XMI/AAAAAAAAA0M/Kv8JzjIQQKk/s320/04.png\" /></a></div><p align="center">Create an Index page for the project</p><p>Run the project to verify that no errors are displayed. Now it is the time to add entities for the Recipe and Ingredient. Right-click <b>Models</b> folder, select <b>Add</b> -> <b>Class</b> and call the class <b>Recipe.cs</b>. Add another one called <b>Ingredient.cs</b>. The little trick with a many-to-many relationship is to create an <b>ICollection</b> within each of the two related entities. The collection will actually hold those "many" entities that are related to the particular instance. In our case - the <b>Recipe</b> holds a list of all <b>Ingredients</b> it uses.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://2.bp.blogspot.com/-OkNXwYCYzTA/T7BCb1CwdpI/AAAAAAAAA0A/DlTv6bLdXxc/s1600/05.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="197" width="320" src=\"http://2.bp.blogspot.com/-OkNXwYCYzTA/T7BCb1CwdpI/AAAAAAAAA0A/DlTv6bLdXxc/s320/05.png\" /></a></div><p align="center">Add new class in Models folder</p><pre class="brush: csharp">public class Recipe
{
 public int RecipeID { get; set; }
 public string Name { get; set; }

 public virtual ICollection&lt;Ingredient&gt; Ingredients { get; set; }

 public Recipe()
 {
  Ingredients = new HashSet&lt;Ingredient&gt;();
 }
}

public class Ingredient
{
 public int IngredientID { get; set; }
 public string Name { get; set; }

 public virtual ICollection&lt;Recipe&gt; Recipes { get; set; }

 public Ingredient()
 {
  Recipes = new HashSet&lt;Recipe&gt;();
 }
}</pre><p>And we'll need to have some sample data to verify that the application is working as expected. So add another class and call it <b>SampleData.cs</b>. Entity Framework allows to "seed" the newly created database. An implementation of <b>DropCreateDatabaseIfModelChanges</b> class will re-seed the database when model changes. This is handy for testing.</p><pre class="brush: csharp">public class SampleData : DropCreateDatabaseIfModelChanges&lt;RecipesEntities&gt;
{
 protected override void Seed(RecipesEntities context)
 {
  var ingredient0 = new Ingredient{Name = "Meat"};
  var ingredient1 = new Ingredient{Name = "Fish"};
  var ingredient2 = new Ingredient{Name = "Potato"};

  var ingredients = new List&lt;Ingredient&gt;(){ingredient0, ingredient1, ingredient2};

  ingredients.ForEach(i =&gt; context.Ingredients.Add(i));

  var recipes = new List&lt;Recipe&gt;();
  
  recipes.Add(new Recipe{Name = "Grilled fish with potatoes", Ingredients = new List&lt;Ingredient&gt;() {ingredient1, ingredient2}});
  recipes.Add(new Recipe{Name = "Grilled steak with potatoes", Ingredients = new List&lt;Ingredient&gt;() {ingredient0, ingredient2}});

  recipes.ForEach(r =&gt; context.Recipes.Add(r));
 }
}</pre><p>Next step was to create the database. Right-click <b>Project</b>, select <b>Add</b> -> <b>Add ASP.NET Folder</b> -> <b>App_Data</b>. The folder will be created. It will already have the correct security access settings.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://1.bp.blogspot.com/-M7qQSDf-6Lg/T7BCbkR0yhI/AAAAAAAAAz0/qjGCnpUi0to/s1600/06.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="216" width="320" src=\"http://1.bp.blogspot.com/-M7qQSDf-6Lg/T7BCbkR0yhI/AAAAAAAAAz0/qjGCnpUi0to/s320/06.png\" /></a></div><p align="center">Create an App_Data folder</p><p>Next, I added the following at the end of the web.config file just before the closing "configuration" tag. Now the Entity Framework will know how to connect to the database:</p><pre class="brush: xml">&lt;connectionStrings&gt;
 &lt;add name="RecipesEntities"
 connectionString="Data Source=|DataDirectory|Recipes.sdf"
 providerName="System.Data.SqlServerCe.4.0"/&gt;
&lt;/connectionStrings&gt;</pre><p>Next step is to create a context class, which will represent the Entity Framework database context. It is very simple indeed, and I'll create it by adding a new class called <b>RecipeEntities.cs</b> in the model folder. This class will be able to handle database operations due to the fact that it is extending <b>DbContext</b>. Here is the code:</p><pre class="brush: csharp">public class RecipesEntities : DbContext
{
 public DbSet&lt;Recipe&gt; Recipes { get; set; }
 public DbSet&lt;Ingredient&gt; Ingredients { get; set; }
}</pre><p>Now, with the model, database, context and some sample data in place, it is time to verify that data is actually displayed properly by the application. First, the recipes. I'm going to check that the list is displayed properly and that I can display all the details I'm interested in (for now, just the list of ingredients). For that, I'll need a <b>RecipeController</b> and two views, <b>List</b> and <b>Details</b>. First, the controller, that I will create with default methods for displaying, editing, creating and deleting data. I'm only interested in two methods, which I'll modify as follows</p><pre class="brush: csharp">RecipesEntities recipeDB = new RecipesEntities();

// GET: /Recipe/
public ActionResult Index()
{
 var recipes = recipeDB.Recipes.ToList();
 return View(recipes);
}

// GET: /Recipe/Details/5
public ActionResult Details(int id)
{
 var recipe = recipeDB.Recipes.Find(id);
 return View(recipe);
}</pre><p>Now I'll right-click within the <b></b>Index method and select <b>Add View</b>, which I will configure as follows:</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://3.bp.blogspot.com/-HTIT1k-d09g/T7BCLndGR8I/AAAAAAAAAzo/H8f3czjvo_8/s1600/07.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="316" width="320" src=\"http://3.bp.blogspot.com/-HTIT1k-d09g/T7BCLndGR8I/AAAAAAAAAzo/H8f3czjvo_8/s320/07.png\" /></a></div><p align="center">Create the List view</p><p>Now if I run the application as it is and navigate to <b>Recipe</b> (<u>http://localhost/Recipe</u>), I should see the list of recipes.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://1.bp.blogspot.com/-AE6dHMGB4J0/T7BCLYiN2lI/AAAAAAAAAzc/xX9TeGTTcpI/s1600/08.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="222" width="320" src=\"http://1.bp.blogspot.com/-AE6dHMGB4J0/T7BCLYiN2lI/AAAAAAAAAzc/xX9TeGTTcpI/s320/08.png\" /></a></div><p align="center">Display the list of ingredients</p><p>Next, I want to see the details. I'll add another view by right-clicking within the <b>Details</b> method of the controller and select <b>Add View</b>, which I will configure in the similar fashion:</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://4.bp.blogspot.com/-pEfYVB5Lgd4/T7BB31kqC-I/AAAAAAAAAzQ/4YgwQAmNZGY/s1600/09.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="316" width="320" src=\"http://4.bp.blogspot.com/-pEfYVB5Lgd4/T7BB31kqC-I/AAAAAAAAAzQ/4YgwQAmNZGY/s320/09.png\" /></a></div><p align="center">Create the Details view</p><p>The default contents of the view will look similar to this:</p><pre class="brush: xml">@model RecipesSample.Models.Recipe
@{
    ViewBag.Title = "Details";
}

&lt;h2&gt;Details&lt;/h2&gt;
&lt;fieldset&gt;
    &lt;legend&gt;Recipe&lt;/legend&gt;
    &lt;div class="display-label"&gt;Name&lt;/div&gt;
    &lt;div class="display-field"&gt;@Model.Name&lt;/div&gt;
&lt;/fieldset&gt;
&lt;p&gt;
    @Html.ActionLink("Edit", "Edit", new { id=Model.RecipeID }) |
    @Html.ActionLink("Back to List", "Index")
&lt;/p&gt;</pre><p>This, however, will only display the name of the recipe, but not the ingredients. To check that the ingredients are returned from the database properly, I have to modify the view to look similar to this:</p><pre class="brush: xml">@model Recipes.Models.Recipe
@{
    ViewBag.Title = "Details";
}

&lt;h2&gt;Details&lt;/h2&gt;

&lt;fieldset&gt;
    &lt;legend&gt;Recipe&lt;/legend&gt;
    &lt;div class="display-label"&gt;Name&lt;/div&gt;
    &lt;div class="display-field"&gt;@Model.Name&lt;/div&gt;
&lt;/fieldset&gt;

&lt;fieldset&gt;
    &lt;legend&gt;Ingredients&lt;/legend&gt;
    @foreach (Recipes.Models.Ingredient ingredient in Model.Ingredients)
    { 
        &lt;div&gt;@Html.DisplayFor(model =&gt; ingredient.Name)&lt;/div&gt;
    }
&lt;/fieldset&gt;

&lt;p&gt;
    @Html.ActionLink("Edit", "Edit", new { id=Model.RecipeID }) |
    @Html.ActionLink("Back to List", "Index")
&lt;/p&gt;</pre><p>Now if I run the application, navigate to <b>Recipe</b> and click <b>Details</b> on any of them (the link will point to <u>http://localhost:49606/Recipe/Details/1</u> or similar), I will see the following page:</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://1.bp.blogspot.com/-WCW1cONUAZ0/T7BB3gLsGmI/AAAAAAAAAzE/6Krjw6Esh8M/s1600/10.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="320" width="272" src=\"http://1.bp.blogspot.com/-WCW1cONUAZ0/T7BB3gLsGmI/AAAAAAAAAzE/6Krjw6Esh8M/s320/10.png\" /></a></div><p align="center">Display the related data</p><p>The recipe ingredients were successfully extracted from the model and displayed. As an exercise, it's easy to perform reverse action - check that if the ingredient is displayed, the recipes where it is used can also be shown. Hint: the view code may look similar to this:</p><pre class="brush: xml">@model Recipes.Models.Ingredient
@{
    ViewBag.Title = "Details";
}

&lt;h2&gt;Details&lt;/h2&gt;

&lt;fieldset&gt;
    &lt;legend&gt;Ingredient&lt;/legend&gt;
    &lt;div class="display-label"&gt;Name&lt;/div&gt;
    &lt;div class="display-field"&gt;@Model.Name&lt;/div&gt;
&lt;/fieldset&gt;

&lt;fieldset&gt;
    &lt;legend&gt;Is used in the following recipes&lt;/legend&gt;
    @foreach (Recipes.Models.Recipe recipe in Model.Recipes)
    { 
        &lt;div&gt;@Html.DisplayFor(model =&gt; recipe.Name)&lt;/div&gt;
    }
&lt;/fieldset&gt;
&lt;p&gt;
    @Html.ActionLink("Edit", "Edit", new { id=Model.IngredientID }) |
    @Html.ActionLink("Back to List", "Index")
&lt;/p&gt;</pre><p>And the output will be</p><div class="separator" style="clear: both; text-align: center;">
<a href=\"http://4.bp.blogspot.com/-JtXjlwph0L0/T7BB3TtsUKI/AAAAAAAAAy4/52LJNaABPhY/s1600/11.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="320" width="287" src=\"http://4.bp.blogspot.com/-JtXjlwph0L0/T7BB3TtsUKI/AAAAAAAAAy4/52LJNaABPhY/s320/11.png\" /></a></div><p align="center">Display the related data</p><p>This is a very crude example without following "best practices" (such as creating the DbContext inside the using statement) and without any formatting, but it shows that an application that employs the many-to-many relationships between the entities can be created with MVC with just several lines of code.</p><p>References I used:</p><a href=\"http://www.asp.net/mvc/tutorials/mvc-music-store/mvc-music-store-part-4">Part 4: Models and Data Access </a><br/><a href=\"http://www.codeproject.com/Articles/234606/Creating-a-Many-To-Many-Mapping-Using-Code-First">Creating a Many To Many Mapping Using Code First</a><br/><a href=\"http://stackoverflow.com/questions/5741109/the-type-or-namespace-name-dbcontext-could-not-be-found">The type or namespace name 'DbContext' could not be found</a><br/><a href=\"http://msdn.microsoft.com/en-us/library/gg679604(v=vs.103).aspx">DropCreateDatabaseIfModelChanges<TContext> Class</a>

 */ 

public const string content_02052012_b = ""; 
public const string content_02052012_r = ""; 

 /* 
<p>When the software I'm working on is installed on the PC which is later shipped to the client, the PC has an exact configuration and the operating system is set up in a certain way, which is precisely documented. To make sure every workstation has exactly the same configuration, the images of the hard disk partitions are created once and then copied over to every PC. There are cases, however, when the same configuration needs to be applied to the Virtual Machine - for example, to simplify some of the testing tasks. In this case the desired action is to use the preconfigured PC and to convert it to the Virtual Machine. Since we use the VMWare products, the tool that I use also comes from VMWare and it's called <a href=\"http://www.vmware.com/products/converter/">VMware vCenter Converter</a> (aka vConverter Standalone).</p><p>To start with, I downloaded and installed VMware vCenter Converter (aka vConverter Standalone). In my case, Local installation was sufficient. In local mode I can only create and manage conversion tasks from the PC on which I install the converter. The client-server installation allows to create and manage conversion tasks remotely in case you need that.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://1.bp.blogspot.com/-gATWffJKYtk/T6DdsU8BGxI/AAAAAAAAAwY/s7Lbjsh2Gfk/s1600/01.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="244" width="320" src=\"http://1.bp.blogspot.com/-gATWffJKYtk/T6DdsU8BGxI/AAAAAAAAAwY/s7Lbjsh2Gfk/s320/01.png\" /></a></div><p align="center">Choose "Local Installation".</p><p>Two important configurations have to be set up on the source PC (the PC that is converted to VM) before the conversion starts. First, file sharing has to be disabled.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://1.bp.blogspot.com/-cZowoeoJ1kM/T6DdvE_yH7I/AAAAAAAAAww/XCg-hBiwXXs/s1600/002.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="246" width="320" src=\"http://1.bp.blogspot.com/-cZowoeoJ1kM/T6DdvE_yH7I/AAAAAAAAAww/XCg-hBiwXXs/s320/002.png\" /></a></div><p align="center">Turn off file sharing</p><p>Also, the Windows firewall has to be disabled.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://1.bp.blogspot.com/-z5sEvIAHRXo/T6DdsilwllI/AAAAAAAAAwk/w4Y4FxziVRw/s1600/001.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="185" width="320" src=\"http://1.bp.blogspot.com/-z5sEvIAHRXo/T6DdsilwllI/AAAAAAAAAwk/w4Y4FxziVRw/s320/001.png\" /></a></div><p align="center">Disable Windows Firewall</p><p>You should also check some other things, such as the Windows version being supported, network access, no other conversion jobs running on the source machine and no VMware Converter installations existing on the source PC. After all that is taken care of, I ran the client application. In the application, I selected <b>Convert machine</b> and filled in the details.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://1.bp.blogspot.com/-5PoP1kd6BlA/T6Der1bnJwI/AAAAAAAAAyE/NPimaVIdHW4/s1600/02.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="222" width="320" src=\"http://1.bp.blogspot.com/-5PoP1kd6BlA/T6Der1bnJwI/AAAAAAAAAyE/NPimaVIdHW4/s320/02.png\" /></a></div><p align="center">Source PC details</p><p>When the connection succeeded, I saw the following message. Just to make sure that I will not forget to remove the agent and to free myself from extra hassle, I chose the automatic version.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://1.bp.blogspot.com/-S1fFj4XUsSA/T6DesIxqj3I/AAAAAAAAAyQ/uwOtZaVlmF0/s1600/03.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="153" width="320" src=\"http://1.bp.blogspot.com/-S1fFj4XUsSA/T6DesIxqj3I/AAAAAAAAAyQ/uwOtZaVlmF0/s320/03.png\" /></a></div><p align="center">Select the uninstallation method for Converter Standalone</p><p>Next step was to provide the location where the virtual machine will be saved.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://4.bp.blogspot.com/-sbYPXUzU98Y/T6DesnunpGI/AAAAAAAAAyc/B_S9N3a2jMU/s1600/04.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="250" width="320" src=\"http://4.bp.blogspot.com/-sbYPXUzU98Y/T6DesnunpGI/AAAAAAAAAyc/B_S9N3a2jMU/s320/04.png\" /></a></div><p align="center">Destination System</p><p>Next step was to select what I wanted to copy. I wanted to copy the whole machine, with one small exclusion: there was a disk drive that only contained some backup data and was irrelevant. So it was possible to save some time and disk space this way. I unchecked the drive I was not interested in. If you are an advanced user, you can apply further configuration changes.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://3.bp.blogspot.com/-6xGyZ1jZhV8/T6Des89JVsI/AAAAAAAAAyo/AaMROPu3mos/s1600/05.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="188" width="320" src=\"http://3.bp.blogspot.com/-6xGyZ1jZhV8/T6Des89JVsI/AAAAAAAAAyo/AaMROPu3mos/s320/05.png\" /></a></div><p align="center">Conversion task options</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://4.bp.blogspot.com/-NtErTt8X6V4/T6DeWN7xWiI/AAAAAAAAAxg/vrirA6t6R7k/s1600/06.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="230" width="320" src=\"http://4.bp.blogspot.com/-NtErTt8X6V4/T6DeWN7xWiI/AAAAAAAAAxg/vrirA6t6R7k/s320/06.png\" /></a></div><p align="center">Uncheck the hard disk</p><p>Next step was to review the details and press <b>Finish</b>. Everything went well and a job was be added to the list, displaying some details and estimated time to completion. Now all I needed was some patience.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://4.bp.blogspot.com/-GDxQcGmjaPU/T6DeWS90FfI/AAAAAAAAAxw/Iw-VNwqOaA4/s1600/07.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="59" width="320" src=\"http://4.bp.blogspot.com/-GDxQcGmjaPU/T6DeWS90FfI/AAAAAAAAAxw/Iw-VNwqOaA4/s320/07.png\" /></a></div><p align="center">Conversion task</p><p>When the conversion task was complete, I opened the newly created VM.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://3.bp.blogspot.com/-cDnXmcuDl2Y/T6DeWxk5coI/AAAAAAAAAx4/DB_QZps5zik/s1600/08.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="259" width="320" src=\"http://3.bp.blogspot.com/-cDnXmcuDl2Y/T6DeWxk5coI/AAAAAAAAAx4/DB_QZps5zik/s320/08.png\" /></a></div><p align="center">Open Virtual Machine</p><p>I got a warning message, which, I assumed, was related to the fact that VMWare tools were not yet installed. After I installed the tools later, I never saw the warning again.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://1.bp.blogspot.com/-TDnebxiUwFc/T6DeEBI6yqI/AAAAAAAAAw8/RfDpME3V_nk/s1600/09.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="180" width="295" src=\"http://1.bp.blogspot.com/-TDnebxiUwFc/T6DeEBI6yqI/AAAAAAAAAw8/RfDpME3V_nk/s320/09.png\" /></a></div><p align="center">Warning message</p><p>Finally the VMWare tools improve graphic performance on the guest PC. So the last step was to install them.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://4.bp.blogspot.com/-pmBXUAGXuMg/T6DeEZS4itI/AAAAAAAAAxI/Jkq8WynyQQU/s1600/10.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="100" width="320" src=\"http://4.bp.blogspot.com/-pmBXUAGXuMg/T6DeEZS4itI/AAAAAAAAAxI/Jkq8WynyQQU/s320/10.png\" /></a></div><p align="center">Install VMWare tools</p><p>In my case, a message appeared and I did exactly as it advised - on the VM, logged in and ran <b>E:\setup.exe</b> from the command prompt. The installation started and I followed the prompts until VMWare tools were installed.</p><div class="separator" style="clear: both; text-align: center;"><a href=\"http://4.bp.blogspot.com/-aTOJ4KZLk_g/T6DeEVfk2JI/AAAAAAAAAxU/OjybZICGsq4/s1600/11.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="35" width="320" src=\"http://4.bp.blogspot.com/-aTOJ4KZLk_g/T6DeEVfk2JI/AAAAAAAAAxU/OjybZICGsq4/s320/11.png\" /></a></div><p align="center">VMWare message</p>

 */ 

public const string content_04042012_b = ""; 
public const string content_04042012_r = ""; 

 /* 

<p>I had to implement a <b>ScrollBar</b> component but the examples I could find did not do what I needed. I needed the <b>ScrollBar</b> with arrows on the sides, which would move the contents of the field a certain number of points to the required direction. After that, I added the sliding feature, that moved the contents of the field when the slider is dragged.</p><p>The <b>ScrollBar</b> consists of four rectangles. Two of them are arrows at the ends. One is the whole length of the scroll bar, and the last one is the slider that can be dragged along the body of the scroll bar. I used the <b>Flickable</b> component because I need to know the size of the field contents. Otherwise, I disabled the functionality of the flickable. When any of the arrows is clicked, first action is to identify if the slider can move in the required direction. This is calculated based on the height/width of the field (returned by <b>flickable.height</b> or <b>width</b>), height/width of the contents of the field (returned by <b>flickable.contentHeight</b> or <b>contentWidth</b>) and the current position of the contents within the flickable control (returned by <b>flickable.contentX</b> or <b>contentY</b>). If there is space to move, the <b>flickable.contentX</b> or <b>contentY</b> is changed, which moves the contents inside the field, and the slider position is adjusted.</p><p>The slide operates on the similar principle. When it is released, its position is read and then basing on the position and the length of the slider body the percentage of length the slider has traveled is calculated. From that percentage, the <b>flickable.contentX</b> or <b>contentY</b> is calculated so that the field contents move to reflect that percentage. It is not yet completely presice, but it does what is expected to do.</p><p>To use the <b>ScrollBar</b>, it needs to know several things: the id of the <b>Flickable</b> component associated with the field, the desired width of the scroll bar, the amount of pixels the contents need to move each click and the orientation - vertical or horisontal. In the example below, the <b>Flickable</b> component called <b>view</b> is associated with both scroll bars, the width of the scroll bar is 10 and the image moves 20 pixels each arrow click.</p><pre class=\"brush: js\">import QtQuick 1.1<br /><br />Rectangle {<br />    width: 360<br />    height: 360<br /><br />    Flickable{<br /><br />        id:view<br />        anchors.fill: parent<br />        contentWidth: picture.width<br />        contentHeight: picture.height<br />        interactive: false<br /><br />        Image {<br />            id: picture<br />            source: "images/Desert.jpg"<br />            asynchronous: true<br />        }<br />    }<br /><br />    ScrollBar{<br />        id: verticalScroll<br />        flickable: view<br />        step: 20<br />        size: 10<br />        orientation: Qt.Vertical<br />    }<br /><br />    ScrollBar{<br />        id: horisontalScroll<br />        flickable: view<br />        step: 20<br />        size: 10<br />        orientation: Qt.Horizontal<br />    }<br />}</pre><a href=\"http://2.bp.blogspot.com/-sVgOlKBXPoU/T3v-FFE8QmI/AAAAAAAAAwI/cwzSlzGvle8/s1600/1.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 296px; height: 320px;\" src=\"http://2.bp.blogspot.com/-sVgOlKBXPoU/T3v-FFE8QmI/AAAAAAAAAwI/cwzSlzGvle8/s320/1.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5727450714347422306\" /></a><p align="center">QML ScrollBar</p><p>The listing of the ScrollBar component is as follows:</p><pre class=\"brush: js\">import QtQuick 1.1<br /><br />Rectangle {<br /><br />    id: scrollBar<br />    property variant orientation<br />    property variant flickable<br />    property int step<br />    property int size<br />    height: orientation === Qt.Vertical ? flickable.height : size<br />    width: orientation === Qt.Vertical ? size : flickable.width<br /><br />    function canMove(first)<br />    {<br />        if(first)<br />            return orientation === Qt.Vertical ? flickable.contentY > 0 : flickable.contentX > 0;<br />        else<br />            return orientation === Qt.Vertical ? flickable.height + flickable.contentY < flickable.contentHeight :<br />                                                            flickable.width + flickable.contentX < flickable.contentWidth<br />    }<br /><br />    function arrowClicked(first)<br />    {<br />        if(canMove(first))<br />        {<br />            if(first)<br />            {<br />                if(orientation === Qt.Vertical)<br />                    flickable.contentY -= step;<br />                else<br />                    flickable.contentX -= step;<br />            }<br />            else<br />            {<br />                if(orientation === Qt.Vertical)<br />                    flickable.contentY += step;<br />                else<br />                    flickable.contentX += step;<br />            }<br />            positionSlider();<br />        }<br />    }<br /><br />    function moveContents()<br />    {<br />        if(orientation === Qt.Vertical)<br />            flickable.contentY = (slider.y - size)*(flickable.contentHeight - flickable.height)/(body.height - slider.height);<br />        else<br />            flickable.contentX = (flickable.contentWidth - flickable.width)*slider.x/flickable.width;<br />    }<br /><br />    function positionSlider()<br />    {<br />        var percentage = orientation === Qt.Vertical ? (flickable.contentY)/(flickable.contentHeight - flickable.height)<br />                                                     : (flickable.contentX + size)/(flickable.contentWidth - flickable.width);<br />        if(orientation === Qt.Vertical)<br />            slider.y = percentage*(body.height - slider.height) + size;<br />        else<br />            slider.x = percentage*(body.width - slider.width) + size;<br />    }<br /><br />    onHeightChanged: {<br />        if(canMove(true) || canMove(false))<br />            positionSlider();<br />    }<br /><br />    onWidthChanged: {<br />        if(canMove(true) || canMove(false))<br />            positionSlider();<br />    }<br /><br />    Component.onCompleted: {<br />        sliderArea.drag.axis = orientation === Qt.Vertical ? Drag.YAxis : Drag.XAxis;<br /><br />        if(orientation === Qt.Vertical)<br />        {<br />            scrollBar.anchors.right = flickable.right<br />            firstArrow.anchors.top = scrollBar.top;<br />            body.anchors.top = firstArrow.bottom;<br />            secondArrow.anchors.bottom = scrollBar.bottom;<br />            slider.y = size;<br />        }<br />        else<br />        {<br />            scrollBar.anchors.bottom = flickable.bottom;<br />            firstArrow.anchors.left = scrollBar.left;<br />            body.anchors.left = firstArrow.right;<br />            secondArrow.anchors.right = scrollBar.right;<br />            slider.x = size;<br />        }<br />    }<br /><br />     Rectangle{<br />        id: firstArrow<br />        width: size<br />        height: size<br /><br />        Image{<br />            id: imgFirstArrow<br />            anchors.fill: parent<br />            source: orientation === Qt.Vertical ? "images/vertUpArrow.png" : "images/horisLeftArrow.png"<br />        }<br /><br />        MouseArea{<br />            id: firstArrowArea<br />            anchors.fill: parent<br />            onClicked: {<br />                arrowClicked(true);<br />            }<br />        }<br />     }<br /><br />     Rectangle{<br />        id: body<br />        width: orientation === Qt.Vertical ? size : scrollBar.width - 2*size<br />        height: orientation === Qt.Vertical ? scrollBar.height - 2*size : size<br />        color: "#575B5E"<br />     }<br /><br />     Rectangle{<br />         id: slider<br />         width: orientation === Qt.Vertical ? size : 3*size;<br />         height: orientation === Qt.Vertical ? 3*size : size;<br /><br />         Image{<br />             id: imgSlider<br />             anchors.fill: parent<br />             source: orientation === Qt.Vertical ? "images/SliderVert-Enabled.png" : "images/SliderHoris-Enabled.png"<br />         }<br /><br />         MouseArea{<br />             id:sliderArea<br />             anchors.fill: parent<br />             drag.target: slider<br />             drag.minimumX: 10<br />             drag.minimumY: 10<br />             drag.maximumX: orientation === Qt.Vertical ? 0 : body.width - slider.width + size<br />             drag.maximumY: orientation === Qt.Vertical ? body.height - slider.height + size : 0<br /><br />             onReleased: {<br />                 moveContents();<br />             }<br />         }<br />     }<br /><br />     Rectangle{<br />        id: secondArrow<br />        width: size<br />        height: size<br /><br />        Image{<br />            id: imgSecondArrow<br />            anchors.fill: parent<br />            source: orientation === Qt.Vertical ? "images/vertDownArrow.png" : "images/horisRightArrow.png"<br />        }<br /><br />        MouseArea{<br />            id: secondArrowArea<br />            anchors.fill: parent<br />            hoverEnabled: true<br />            onClicked: {<br />                arrowClicked(false);<br />            }<br />        }<br />     }<br /> }</pre><p><b>References:</b></p><a href=\"http://doc.qt.nokia.com/4.7-snapshot/demos-declarative-webbrowser-content-scrollbar-qml.html">ScrollBar.qml Example File</a><br/><a href=\"http://qtsource.wordpress.com/2011/02/07/scrollable-and-scroll-indicators-with-qml/">Scrollable and Scroll indicators with QML</a>
 */ 

public const string content_01042012_b = ""; 
public const string content_01042012_r = ""; 

 /* 
<p>In some cases it is required to return several values from a C++ function to the QML code. In my case, I call the function that checks the syntax of the Qt script that is passed as a string. The <b>QScriptSyntaxCheckResult</b> class does that check for me. If an error is found inside the script, I want to get back the error message and the line and column where the error was detected. In this case a <b>QVariantMap</b> class is the elegant and effective solution. In my C++ code, I pack the values I want to return into an instance of a <b>QVariantMap</b> class:</p><pre class=\"brush: cpp\">QVariantMap QMLFile::checkScriptSyntax(QString input) const<br />{<br />    QScriptSyntaxCheckResult result = QScriptEngine::checkSyntax(input);<br /><br />    QVariantMap value;<br />    value.insert("errorMessage", result.errorMessage());<br />    value.insert("errorLineNumber", result.errorLineNumber());<br />    value.insert("errorColumnNumber", result.errorColumnNumber());<br />    return value;<br />}</pre><p>In my QML code, I can now access the values in the following manner, after opening a file that contains a Qt script and passing its contents to the C++ function:</p><pre class=\"brush: js\">onClicked: {<br /> var fileContent = QMLFile.getFileContents();<br /> var result = QMLFile.checkScriptSyntax(fileContent);<br /><br /> if(result.errorMessage !== "")<br /> {<br />  console.log("Error on line " + result.errorLineNumber + ", column " + result.errorColumnNumber + " : " + result.errorMessage);<br /> }<br /> else<br /> {<br />  console.log("Script syntax is correct!");<br /> }<br />}</pre><p>The result is further used in the <b>ToolTipRectangle</b> element, which is a <b>Text</b> element that appears when the mouse is hovered over the line which contains an error.</p><pre class=\"brush: js\">import QtQuick 1.1<br /><br />Rectangle {<br /><br />    property string toolTip : ""<br />    property bool showToolTip: false<br /><br />    Rectangle{<br />        id: toolTipRectangle<br />        anchors.horizontalCenter: parent.horizontalCenter<br />        anchors.top: parent.bottom<br />        width: parent.toolTip.length * toolTipText.font.pixelSize / 2<br />        height: toolTipText.lineCount * (toolTipText.font.pixelSize + 5)<br />        z:100<br /><br />        visible: parent.toolTip !== "" && parent.showToolTip<br />        color: "#ffffaa"<br />        border.color: "#0a0a0a"<br /><br />        Text{<br />            id:toolTipText<br />            width: parent.parent.toolTip.length * toolTipText.font.pixelSize / 2<br />            height: toolTipText.lineCount * (toolTipText.font.pixelSize + 5)<br />            text: parent.parent.toolTip<br />            color:"black"<br />            wrapMode: Text.WordWrap<br />        }<br />    }<br /><br />    MouseArea {<br />        id: toolTipArea<br />        anchors.fill: parent<br />        onEntered: {<br />            parent.showToolTip = true<br />        }<br />        onExited: {<br />            parent.showToolTip = false<br />        }<br />        hoverEnabled: true<br />    }<br />}</pre><p>The end result looks like this:</p><a href=\"http://3.bp.blogspot.com/-FmwfDw5RjaE/T3kR1C4ff7I/AAAAAAAAAv8/y0X2kDymZ3o/s1600/1.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 202px;\" src=\"http://3.bp.blogspot.com/-FmwfDw5RjaE/T3kR1C4ff7I/AAAAAAAAAv8/y0X2kDymZ3o/s320/1.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5726628004182851506\" /></a><p align="center">Syntax check result</p><p><b>References:</b></p><a href=\"http://comments.gmane.org/gmane.comp.lib.qt.qml/3031">Q_INVOKABLE member function: Valid argument types</a><br/><a href=\"http://www.fioniasoftware.dk/blog/?p=142">Implementing tool tips in QML</a>

 */ 

public const string content_29032012_b = ""; 
public const string content_29032012_r = ""; 

 /* 
<p>As a first practical application of connecting C++ to QML I had to integrate a <b>File Open/Close</b> dialog to be accessed from QML, because QML does not have this kind of control natively. So here are the requirements to the simple task:</p><ul><li>Open button starts the <b>Open File</b> dialog, which allows the user to select a text file</li><li>When the user selects the file, the contents of this file are loaded into an editable field</li><li>The user can edit the file</li><li>Save button opens the <b>Save File</b> dialog, which allows the user to save the contents of the editable field into a new or existing text file</li></ul><p>The C++ header file will define only two functions, <b>getFileContents</b> will be called when the <b>Open</b> button is clicked, and <b>saveFileContents</b> will be called when the <b>Save</b> button is clicked. Here is the full header file:</p><pre class=\"brush: cpp\">//qmlfile.h<br />#ifndef QMLFILE_H<br />#define QMLFILE_H<br /><br />#include <QObject><br /><br />class QMLFile : public QObject<br />{<br />    Q_OBJECT<br /><br />public:<br />    explicit QMLFile(QObject *parent = 0);<br /><br />    Q_INVOKABLE QString getFileContents() const;<br /><br />    Q_INVOKABLE void saveFileContents(QString fileContents) const;<br />};<br /><br />#endif // QFILE_H</pre><p>The C++ code file will implement these functions. <b>getFileContents</b> opens the <b>Open File</b> dialog and waits for the user to select a file. When the file is selected, the function tries to open it and, if successful, returns the string that has file contents. <b>saveFileContents</b> is the opposite: it takes a string as a parameter, opens a <b>Save File</b> dialog, waits for the user to select a file or enter a name of the file, and tries to save the string as file contents. Quick and dirty - a lot of things could go wrong and cause exceptions, but that's not the point at this stage.</p><pre class=\"brush: cpp\">//qmlfile.cpp<br />#include <QFileDialog><br />#include <QTextStream><br />#include <QDebug><br />#include "qmlfile.h"<br /><br />QMLFile::QMLFile(QObject *parent): QObject(parent)<br />{<br /><br />}<br /><br />QString QMLFile::getFileContents() const<br />{<br />    QString fileName = QFileDialog::getOpenFileName(NULL, tr("Open File"), "/home", tr("Text Files (*.txt)"));<br />    qDebug() << "fileName:" << fileName;<br />    QFile file(fileName);<br />    if(!file.open(QIODevice::ReadOnly | QIODevice::Text))<br />        return "";<br /><br />    QString content = file.readAll();<br />    file.close();<br />    return content;<br />}<br /><br />void QMLFile::saveFileContents(QString fileContents) const<br />{<br />    QString fileName = QFileDialog::getSaveFileName(NULL, tr("Save File"), "/home", tr("Text Files (*.txt)"));<br /><br />    QFile file(fileName);<br />    if(file.open(QIODevice::WriteOnly | QIODevice::Text))<br />    {<br />        qDebug() << "created file:" << fileName;<br />        QTextStream stream(&file);<br />        stream << fileContents << endl;<br />        file.close();<br />        return;<br />    }<br />    else<br />    {<br />        qDebug() << "could not create file:" << fileName;<br />        return;<br />    }<br />}</pre><p>Now the only two things that are left is to update the main files: main.cpp and main.qml. In main.cpp I add the two lines similar to the example in the previous post.</p><pre class=\"brush: cpp\">//in main.cpp after viewer<br />QMLFile qmlFile;<br />viewer.rootContext()->setContextProperty("QMLFile", &qmlFile);</pre><p>In the main.qml I will implement the <b>onClicked</b> events for <b>Open</b> and <b>Save</b> buttons. Each will only take a single line.</p><pre class=\"brush: cpp\">//open file and load contents into TextEdit<br />txt.text = QMLFile.getFileContents();</pre><pre class=\"brush: cpp\">//get contents of the TextEdit and save to a file<br />QMLFile.saveFileContents(txt.text);</pre><p>Now I can build and run the application and open some file, and if everything goes smoothly you'll see the results similar to the screenshot below - contents of a text file loaded into the QML TextEdit component and displayed.</p><a href=\"http://3.bp.blogspot.com/-CcTLzSUULzM/T3VOcjENwII/AAAAAAAAAvw/nYR_I5BksaQ/s1600/1.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 301px; height: 320px;\" src=\"http://3.bp.blogspot.com/-CcTLzSUULzM/T3VOcjENwII/AAAAAAAAAvw/nYR_I5BksaQ/s320/1.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5725568753627676802\" /></a><p align="center">Text File Loaded into QML TextEdit</p><p>For reference, the full main.qml file.</p><pre class=\"brush: js\">//main.qml<br />import QtQuick 1.0<br /><br />Rectangle {<br />    width: 360; height: 360<br /><br />    Rectangle{<br />        id:buttons<br />        height: 50; width: parent.width; anchors.top: parent.top<br /><br />        Rectangle{<br />            id: btnOpen<br />            width: 50; height: parent.height; anchors.left: parent.left<br /><br />            Image{<br />                anchors.fill: parent; source: "images/open.png"<br />            }<br /><br />            MouseArea{<br />                anchors.fill: parent<br />                onClicked: {<br />                    txt.text = QMLFile.getFileContents();<br />                }<br />            }<br />        }<br /><br />        Rectangle{<br />            id: btnSave<br />            width:50; height: parent.height; anchors.left: btnOpen.right<br /><br />            Image{<br />                anchors.fill: parent; source: "images/save.png"<br />            }<br /><br />            MouseArea{<br />                anchors.fill: parent<br />                onClicked: {<br />                    QMLFile.saveFileContents(txt.text);<br />                }<br />            }<br />        }<br />    }<br /><br />    Rectangle{<br />        id:textHandle<br />        width: parent.width; height: parent.height - buttons.height; anchors.bottom: parent.bottom<br /><br />        TextEdit{<br />            id: txt; anchors.fill: parent<br />        }<br />    }<br />}</pre><p><b>References</b></p><a href=\"http://apidocs.meego.com/1.0/qt4.7/qfiledialog.html">QFileDialog Class Reference</a><br/><a href=\"http://stackoverflow.com/questions/3122152/opening-a-file-from-a-qt-string">Opening a file from a Qt String</a>

 */ 

public const string content_28032012_b = "<p>It took me some time to figure it out all the way, so I'm recording steps to create a minimal application that will have QML UI talking to the C++ code and receiving some data. I was using Qt Creator 2.2.1, and some syntax appear to have changed in further versions, which gave me some additional headaches while trying to figure out the examples. There are some \"gotchas\" on the way, but eventually it will look quite simple.</p>"; 
public const string content_28032012_r = "<p>In Qt Creator, select <b>File -> New File or Project</b> and choose <b>Qt Quick Project -> Qt Quick Application</b>. Give it a name, i.e. SimpleCPP. Accept the defaults. Let's first add the C++ code. Right-click the project and select <b>Add New -> C++ -> C++ Class</b>. Give it a name too, i.e. \"test\". This will add two files to the project: test.h under <b>Headers</b> and test.cpp under <b>Sources</b>. Here is the full header file:</p><pre class=\"brush: cpp\">" + 
@"#ifndef TEST_H
  #define TEST_H
  #include &lt;QObject&gt;

  class test : public QObject
  {
    Q_OBJECT

    public:
      explicit test(QObject *parent = 0);
      
    Q_INVOKABLE QString getString() const;
  };
  #endif 
  // TEST_H" + 
  "</pre><p>The class <b>test</b> inherits from <b>QObject</b> and exposes <b>getString</b> function, which is marked as <b>Q_INVOKABLE</b>. This registers the function with the meta-object system and, whatever that means, will allow the function to be called from QML.</p><p>Here is the test.cpp listing, and not much to say about it - it's only purpose is to return a string so we could actually verify that the C++ code gets executed.</p><pre class=\"brush: cpp\">" + 
@"#include ""test.h""
  
  test::test(QObject *parent): QObject(parent)
  {
  }

  QString test::getString() const
  {
    QString str = ""string from cpp code"";
    return str;
  }" + 
  "</pre><p>Next step is to register the C++ class with the main.cpp which was automatically created by the project. Add a couple of includes on the top</p><pre class=\"brush: cpp\">" + 
@"#include &lt;QDeclarativeContext&gt;
  #include &lt;QtGui/QGraphicsObject&gt;
  #include ""test.h""" + 
  "</pre><p>And these two lines after the definition of the <b>QApplicationViewer</b>:</p><pre class=\"brush: cpp\">" + 
@"test dummy;
  viewer.rootContext()->setContextProperty(""Dummy"", &dummy);" + 
  "</pre><p>The instance of the test class will now be known to the QML file as \"Dummy\". See later.</p><p>Now to modify the main.qml so it will be able to receive something from C++. In the main.qml which was automatically generated, I give the Text element the <b>objectName</b> property of \"textObject\". This is how it will be referenced by C++.</p><pre class=\"brush: js\">" + 
@"Text {
        objectName: ""textObject""
        text: ""Hello World""
        anchors.centerIn: parent
       }" + 
 "</pre><p>So, here's one way to modify the text on the screen: add the following two lines to main.cpp</p><pre class=\"brush: cpp\">" + 
@"QObject* testText = viewer.rootObject()->findChild&lt;QObject*&gt;(""textObject"");
if(testText) testText->setProperty(""text"", dummy.getString());" + 
"</pre><p>This code finds a child object in the QML file which has an <b>objectName</b> of \"textObject\" and, if found, sets its text property to the string returned by the test C++ class. Build and run the application and verify that the \"string from cpp code\" is shown in the middle of the screen.</p><p>Another way to access the C++ code is to call the function right from the QML file. I can modify the main.qml this way:</p><pre class=\"brush: js\">" + 
@"Rectangle {
   width: 360
   height: 360
   Text {
     id: textQML
     objectName: ""textObject""
     text: ""Hello World""
     anchors.centerIn: parent
   }
   
   MouseArea {
     anchors.fill: parent
     onClicked: {
       textQML.text = Dummy.getString();
       //Qt.quit();
    }
  }
}" + 
  "</pre><p>Now, when the Rectangle is clicked, the QML file calls <b>Dummy</b>, which is how the test class is known to the QML file. See above. Remove or comment out the last two added lines from the main.cpp and run the application again. At first nothing happens, but when you click anywhere in the window, the text changes to \"string from cpp code\".</p><p>The full main.cpp now looks like that:</p><pre class=\"brush: cpp\">" + 
  @"#include &lt;QtGui/QApplication&gt;<br />#include ""qmlapplicationviewer.h""<br />#include &lt;QDeclarativeContext&gt;<br />#include &lt;QtGui/QGraphicsObject&gt;<br />#include ""test.h""<br /><br />int main(int argc, char *argv[])<br />{<br />    QApplication app(argc, argv);<br /><br />    QmlApplicationViewer viewer;<br /><br />    test dummy;<br />    viewer.rootContext()->setContextProperty(""Dummy\"", &dummy);<br /><br />    viewer.setOrientation(QmlApplicationViewer::ScreenOrientationAuto);<br />    viewer.setMainQmlFile(QLatin1String(""qml/SimpleCPP/main.qml""));<br />    viewer.showExpanded();<br /><br /> /* comment these two lines if you don't want to display the string on start up */<br />    QObject* testText = viewer.rootObject()->findChild&lt;QObject*&gt;(""textObject"");<br />    if(testText) testText->setProperty(""text"", dummy.getString());<br /><br />    return app.exec();<br />}" + 
  "</pre><b><p>References</p></b><a href=\"http://doc.qt.nokia.com/4.7-snapshot/qobject.html#Q_INVOKABLE\">QObject Class Reference</a><br/><a href=\"http://stackoverflow.com/questions/9500280/qt-access-c-function-from-qml\">qt, access c++ function from qml</a><br/><a href=\"http://stackoverflow.com/questions/5709820/communication-between-c-and-qml\">Communication between C++ and QML</a>"; 

public const string content_26032012_b = ""; 
public const string content_26032012_r = ""; 

 /* 
<p>The splitter from the last post works. What happens, however, if I want to add content to it, such as text boxes and other things? Well, currently I'll have to mess with the code of the splitter component itself. Obviously, I will not be able to reuse it after that, I will have to copy and paste chunks of it next time I need another splitter. This is not something I can call a good solution. So the next iteration is to somehow make it possible to reuse the splitter without making changes to its QML file, and make it possible to add content "from outside" of the component. Here comes splitter 2.0. The code itself changed very little, but the two rectangles, which are left and right panels (or top and bottom in the case of a horizontal splitter) now are not part of the component itself. To add content to panels, two properties are defined in the VerticalSplitter component.</p><pre class=\"brush: js\">property QtObject firstRect;<br />property QtObject secondRect;<br /></pre><p>These components will be assigned in the "main.qml" as follows:</p><pre class=\"brush: js\">//main.qml<br />import QtQuick 1.0<br /><br />Rectangle {<br />    width: 600<br />    height: 600<br /><br />    Rectangle{<br />        id: leftRect<br />        color: "blue"<br />    }<br /><br />    VerticalSplitter{<br />        id: someSplitter<br />        firstRect : leftRect<br />        secondRect: rightRect<br />    }<br /><br />    Rectangle{<br />        id:rightRect<br />        color: "red"<br />    }<br />}</pre><p>The splitter component is now simply inserted between the two panels. The panels and splitter are anchored to each other in the VerticalSplitter.qml which is almost the same as the one from the last post - probably slightly more simple. Great. I think my chunky, lousy QML is improving little by little.</p><pre class=\"brush: js\">//Reusable VerticalSplitter.qml<br />import QtQuick 1.0<br /><br />Rectangle{<br />    id: splitterRect<br /><br />    anchors.left: firstRect.right<br />    anchors.right: firstRect.right<br />    anchors.rightMargin: -10<br /><br />    width: 10<br />    height: parent.height<br />    clip: true<br /><br />    property QtObject firstRect;<br />    property QtObject secondRect;<br /><br />    property int maximizedRect : -1;<br /><br />    function moveSplitterTo(x)<br />    {<br />        if(x > 0 && x < parent.width - splitterRect.width)<br />        {<br />            firstRect.width = x;<br />            secondRect.width = parent.width - firstRect.width - splitterRect.width;<br />        }<br />    }<br /><br />    function maximizeRect(x)<br />    {<br />        firstRect.width = x===0 ? parent.width - splitterRect.width : 0<br />        secondRect.width = x===0 ? 0 : parent.width - splitterRect.width<br />    }<br /><br />    Component.onCompleted: {<br />        firstRect.height = height;<br />        firstRect.width = (firstRect.parent.width - width)/2;<br />        firstRect.anchors.left = firstRect.parent.left;<br /><br />        secondRect.anchors.left = splitterRect.right;<br />        secondRect.anchors.right = secondRect.parent.right;<br />        secondRect.height = height;<br />    }<br /><br />    onXChanged: {<br />        moveSplitterTo(splitterRect.x);<br />    }<br /><br />    BorderImage {<br />        id: splitterBorder<br />        anchors.fill: parent<br />        source: "images/splitterBorder_vertical.png"<br />    }<br /><br />    Image{<br />        id: arrows<br />        anchors.horizontalCenter: parent.horizontalCenter<br />        anchors.verticalCenter: parent.verticalCenter<br />        source: "images/splitterArrows_vertical.png"<br />    }<br /><br />    MouseArea {<br />        anchors.fill: parent<br />        drag.axis: Drag.XAxis<br />        drag.target: splitterRect<br /><br />        onClicked: {<br />            maximizedRect = maximizedRect == 1 ? 0 : 1;<br />            maximizeRect(maximizedRect);<br />        }<br />    }<br />}</pre>

 */ 

public const string content_25032012_b = ""; 
public const string content_25032012_r = ""; 

 /* 
<p>The most basic splitter involves the top part of the area, the bottom part and the splitter in between. The splitter is a narrow rectangle with a <b>MouseArea</b>. <b>drag.target:splitterRect</b> makes the <b>MouseArea</b> to listen to drag events from splitter. <b>drag.axis</b> specifies along which axis the splitter can be dragged. When the splitter is dragged with the mouse along the Y axis, its Y position changes, triggering the <b>onYChanged event</b>, and the <b>moveSplitterTo</b> just recalculates the widths of top and bottom rectangles according to the current Y position of the splitter.</p><p>Additionally, if the splitter is not dragged, but clicked, the splitter collapses one of the frames. On start up, the first frame to be collapsed is chosen, and then, on each click, the other frame is collapsed, and the one that was collapsed is expanded.</p><a href=\"http://1.bp.blogspot.com/-CycLIkXiGfE/T2-O6YQSbQI/AAAAAAAAAvY/IGWAJUV96Ig/s1600/1.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 270px; height: 320px;\" src=\"http://1.bp.blogspot.com/-CycLIkXiGfE/T2-O6YQSbQI/AAAAAAAAAvY/IGWAJUV96Ig/s320/1.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5723950785005513986\" /></a><br /><p align="center">Basic Splitter</p><a href=\"http://3.bp.blogspot.com/-wpfiMCPVETo/T2-O6jbfIhI/AAAAAAAAAvk/0QOP9Ykv4Q0/s1600/2.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 275px; height: 320px;\" src=\"http://3.bp.blogspot.com/-wpfiMCPVETo/T2-O6jbfIhI/AAAAAAAAAvk/0QOP9Ykv4Q0/s320/2.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5723950788005274130\" /></a><p align="center">One of the Frames is Collapsed</p><pre class=\"brush: js\">//Splitter component<br />import QtQuick 1.0<br /><br />Item{<br />    id: root<br />    anchors.fill: parent<br />    width: parent.width<br />    height: parent.height<br />    clip: true<br /><br />    property int splitterHeight: 10<br />    property int maximizedRect : -1;<br /><br />    function moveSplitterTo(y)<br />    {<br />        if(y > 0 && y < parent.height - splitterHeight)<br />        {<br />            topRect.height = y;<br />            bottomRect.height = parent.height - topRect.height - splitterHeight;<br />        }<br />    }<br /><br />    function maximizeRect(x)<br />    {<br />        topRect.height = x===0 ? parent.height - splitterHeight : 0<br />        bottomRect.height = x===0 ? 0 : parent.height - splitterHeight<br />    }<br /><br />    Rectangle{<br />        id: topRect<br />        width: parent.width<br />        height:  (parent.height-splitterHeight)/2<br />        anchors.top: parent.top<br />        color:  "blue"<br />    }<br /><br />    Rectangle {<br />        id: splitterRect<br />        width: parent.width<br />        height: splitterHeight<br />        color: "black"<br /><br />        anchors.top: topRect.bottom<br />        anchors.bottom: bottomRect.top<br /><br />        property int tempY : splitterRect.y<br /><br />        onYChanged: {<br />            moveSplitterTo(splitterRect.y);<br />        }<br /><br />        BorderImage {<br />            id: splitterBorder<br />            anchors.fill: parent<br />            source: "images/splitterBorder.png"<br />        }<br /><br />        Image{<br />            id: arrows<br />            anchors.horizontalCenter: parent.horizontalCenter<br />            anchors.verticalCenter: parent.verticalCenter<br />            source: "images/splitterArrows.png"<br />        }<br /><br />        MouseArea {<br />            anchors.fill: parent<br />            drag.axis: Drag.YAxis<br />            drag.target: splitterRect<br /><br />            onClicked: {<br />                maximizedRect = maximizedRect == 1 ? 0 : 1;<br />                maximizeRect(maximizedRect);<br />            }<br />        }<br />    }<br /><br />    Rectangle{<br />        id:bottomRect<br />        width: parent.width<br />        height: (parent.height-splitterHeight)/2<br />        anchors.bottom: parent.bottom<br />        color: "red"<br />    }<br />}</pre><p>References</p><a href=\"http://doc.qt.nokia.com/4.7-snapshot/qml-mousearea.html">QML MouseArea Element</a><br/><a href=\"http://qt.gitorious.org/qt-components/desktop/blobs/3c0208a3e146ac1f33997bbf3e100a88e7dbf852/components/custom/SplitterRow.qml">SplitterRow.qml</a>

 */ 

public const string content_20032012_b = ""; 
public const string content_20032012_r = ""; 

 /* 

<p>The check box can be in seven different states: enabled - checked and unchecked, disabled - checked and unchecked, pressed - in checked and unchecked states, and finally "mouseover" state when the cursor is over the checkbox, but not pressed.</p><p>The <b>mouseover</b> state is triggered by the cursor entering and exiting the check box area. The <b>disabled</b> and <b>checked</b> stated can also be set from "outside" by setting the <b>isDisabled</b> and <b>isChecked</b> variables. The <b>onPressed</b> code remembers the state the check box was in and changes the icon to pressed version, and <b>onReleased</b> reverts the icon change. The <b>onClicked</b> toggles the state from on to off and back.</p><a href=\"http://4.bp.blogspot.com/-2bFNuGTjM70/T2l4zfAPiMI/AAAAAAAAAu0/aKq_FJ8DbRE/s1600/1.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 99px; height: 120px;\" src=\"http://4.bp.blogspot.com/-2bFNuGTjM70/T2l4zfAPiMI/AAAAAAAAAu0/aKq_FJ8DbRE/s320/1.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5722237627442104514\" /></a><p align="center">Checked state</p><a href=\"http://3.bp.blogspot.com/-DPzhLXFwJ5g/T2l4zgXhoII/AAAAAAAAAu8/QkyYFRE8z5I/s1600/2.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 99px; height: 123px;\" src=\"http://3.bp.blogspot.com/-DPzhLXFwJ5g/T2l4zgXhoII/AAAAAAAAAu8/QkyYFRE8z5I/s320/2.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5722237627808194690\" /></a><p align="center">Checked and pressed state</p><a href=\"http://4.bp.blogspot.com/-8foY7lpAZWI/T2l4z7nZv_I/AAAAAAAAAvI/W0RyFZZHq1I/s1600/3.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 100px; height: 124px;\" src=\"http://4.bp.blogspot.com/-8foY7lpAZWI/T2l4z7nZv_I/AAAAAAAAAvI/W0RyFZZHq1I/s320/3.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5722237635122544626\" /></a><p align="center">Disabled state</p><pre class=\"brush: js\">import QtQuick 1.0<br /><br />Rectangle {<br /><br />id: checkBoxRect<br />width: 100<br />height:  30<br /><br />property string chkUnchecked: "images/checkbox_enabled.png"<br />property string chkChecked : "images/checkbox_checked.png"<br /><br />property string chkUncheckedPressed : "images/checkbox_pressed.png"<br />property string chkCheckedPressed : "images/checkbox_checked_pressed.png"<br /><br />property string chkDisabled: "images/checkbox_disabled.png"<br />property string chkDisabledChecked: "images/checkbox-checked_disabled.png"<br />property string chkMouseOver: "images/checkbox_enabled_mouseover.png"<br /><br />property bool pressed: false<br />property string src: chkUnchecked<br />property bool isDisabled : false<br />property bool isChecked: false<br /><br />property string tempState : ""<br />property string tempStateHover : ""<br />property string status : ""<br /><br />Image {<br />    id: checkBoxImg<br />    width: 30<br />    height: parent.height<br />    source: src<br />    fillMode: Image.PreserveAspectFit;<br /><br />    MouseArea {<br />        anchors.fill: parent<br />        hoverEnabled: true<br />        onClicked: {<br />            if(!isDisabled)<br />            {<br />                if(checkBoxRect.state == "mouseover")<br />                    checkBoxRect.state = tempStateHover == "on" ? "off" : "on";<br />                else<br />                    checkBoxRect.state = checkBoxRect.state == "on" ? "off" : "on";<br />                tempStateHover = checkBoxRect.state;<br />            }<br />        }<br />        onPressed: {<br />            if(!isDisabled)<br />            {<br />                tempState = checkBoxRect.state;<br />                checkBoxRect.state = "pressed";<br />            }<br />        }<br />        onReleased: {<br />            if(!isDisabled)<br />                checkBoxRect.state = tempState;<br />        }<br />        onEntered: {<br />            if(!isDisabled)<br />            {<br />                tempStateHover = checkBoxRect.state;<br />                checkBoxRect.state = "mouseover";<br />            }<br />        }<br />        onExited: {<br />            if(!isDisabled)<br />                checkBoxRect.state = tempStateHover;<br />        }<br />    }<br />}<br /><br />Component.onCompleted: {<br />    if(isDisabled)<br />        src = isChecked ? chkDisabled : chkCheckedDisabled<br />    else<br />        checkBoxRect.state = "off";<br />}<br /><br />Text{<br />    id: checkboxText<br />    height: parent.height<br />    width:  parent.width - checkBoxImg.width<br />    text: "click here"<br />    anchors.left: checkBoxImg.right<br />    verticalAlignment: Text.AlignVCenter<br />}<br /><br />states: [<br />    State {<br />        name: "on"<br />        PropertyChanges { target: checkBoxImg; source: chkChecked }<br />        PropertyChanges { target: checkBoxRect; pressed: true }<br />    },<br />    State {<br />        name: "off"<br />        PropertyChanges { target: checkBoxImg; source: chkUnchecked }<br />        PropertyChanges { target: checkBoxRect; pressed: false }<br />    },<br />    State {<br />        name: "pressed"<br />        PropertyChanges {target: checkBoxImg; source: (tempState == "on" || tempStateHover == "on") ? chkCheckedPressed : chkUncheckedPressed}<br />    },<br />    State {<br />        name: "mouseover"<br />        PropertyChanges {target: checkBoxImg; source: chkMouseOver}<br />    }<br />]<br />}</pre><p>Reference:</p><a href=\"http://stackoverflow.com/questions/6152041/qt-qml-anchors-probleme">QT QML anchors probleme</a>
 */ 

public const string content_19032012_b = ""; 
public const string content_19032012_r = ""; 

 /* 
<p>A drop down menu example. There are two states of the drop down list - <b>dropDown</b> and, well, not dropDown. When the top rectangle (<b>chosenItem</b>) is clicked, the state is switched from dropDown to none and back, and the height of the <b>dropdownList</b> is adjusted accordingly, showing or hiding the list with the selection options. When the list itself is clicked, there is an additional action - the text of the <b>chosenItemText</b> area is updated to reflect the selection.</p><a href=\"http://2.bp.blogspot.com/-XC5ucVANh00/T2gd5fj6XSI/AAAAAAAAAuc/3cWudr5yIgA/s1600/1.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 230px;\" src=\"http://2.bp.blogspot.com/-XC5ucVANh00/T2gd5fj6XSI/AAAAAAAAAuc/3cWudr5yIgA/s320/1.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5721856200136088866\" /></a><p align="center">List is expanded</p><a href=\"http://1.bp.blogspot.com/-vpS0nycJh-E/T2gd5pv84hI/AAAAAAAAAuo/sYduNdJiqG4/s1600/2.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 199px;\" src=\"http://1.bp.blogspot.com/-vpS0nycJh-E/T2gd5pv84hI/AAAAAAAAAuo/sYduNdJiqG4/s320/2.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5721856202870940178\" /></a><p align="center">A selection was made, text is updated and list is hidden again</p><pre class=\"brush: js\">import QtQuick 1.0<br /><br />Rectangle {<br />    width:400;<br />    height: 400;<br /><br />    property int dropDownHeight:40<br /><br />    Rectangle {<br />            id:dropdown<br />            property variant items: ["Test Item 1", "Test Item 2", "Test Item 3"]<br />            width: 100;<br />            height: dropDownHeight;<br />            z: 100;<br /><br />            Rectangle {<br />                id:chosenItem<br />                width:parent.width;<br />                height:dropdown.height;<br />                color: "lightsteelblue"<br />                Text {<br />                    anchors.top: parent.top;<br />                    anchors.left: parent.left;<br />                    anchors.margins: dropDownHeight/5;<br />                    id:chosenItemText<br />                    text:dropdown.items[0];<br />                }<br /><br />                MouseArea {<br />                    anchors.fill: parent;<br />                    onClicked: {<br />                        dropdown.state = dropdown.state==="dropDown"?"":"dropDown"<br />                    }<br />                }<br />            }<br /><br />            Rectangle {<br />                id:dropdownList<br />                width:dropdown.width;<br />                height:0;<br />                clip:true;<br />                anchors.top: chosenItem.bottom;<br />                anchors.margins: 2;<br />                color: "lightgray"<br /><br />                ListView {<br />                    id:listView<br />                    height:dropDownHeight*dropdown.items.length<br />                    model: dropdown.items<br />                    currentIndex: 0<br />                    delegate: Item{<br /><br />                        width:dropdown.width;<br />                        height: dropdown.height;<br /><br />                        Text {<br />                            text: modelData<br />                            anchors.top: parent.top;<br />                            anchors.left: parent.left;<br />                            anchors.margins: 5;<br />                        }<br /><br />                        MouseArea {<br />                            anchors.fill: parent;<br />                            onClicked: {<br />                                dropdown.state = "";<br />                                chosenItemText.text = modelData;<br />                                listView.currentIndex = index;<br />                            }<br />                        }<br />                    }<br />                }<br />            }<br /><br />            states: State {<br />                name: "dropDown";<br />                PropertyChanges { target: dropdownList; height:dropDownHeight*dropdown.items.length }<br />            }<br />        }<br />    }</pre><p>References:</p><a href=\"http://qt-project.org/forums/viewthread/5276">QML drop Down Menu or Menu bar</a><br/><a href=\"http://stackoverflow.com/questions/9634897/qt-qml-dropdown-list-like-in-html">Qt QML dropdown list like in HTML</a><br/>

 */ 

public const string content_18032012_b = ""; 
public const string content_18032012_r = ""; 

 /* 
<p>I added some styling to the tree view exercise, so it looks better overall. A little change to the <b>ListView</b> layout - there is now the separation line between the items, which is just a rectangle with the height of 2. Additionally, I do a couple other things when the selected item changes, by hooking to the <b>onFocusChanged</b> event and checking in the delegate if the item is selected: I toggle the transparency first, so that the highlight color is visible, but also when the selection is lost, the item is returned to its background color. Also, I invert the color of the item text (to white when the item is selected).</p><pre class=\"brush: js\">// ListView item layout<br />Rectangle{<br /> id: listItemRect<br /> anchors.fill: parent<br /> color: "#E2E3E4"<br /><br /> Rectangle{ //dividing line<br />  height:  2<br />  width: parent.width<br /><br />  anchors.top: parent.top<br />  anchors.left: parent.left<br />  anchors.right: parent.right<br /><br />  color: "#AFADB3"<br /> }<br /><br /> Rectangle{<br /><br />  height: parent.height - 2<br />  width:  parent.width<br />  anchors.left: parent.left<br />  anchors.right: parent.right<br />  anchors.bottom: parent.bottom<br />  color: "transparent"<br />  ...<br /> }<br />}</pre><pre class=\"brush: js\">//set text color to white if the item is selected.    <br />onFocusChanged: {<br /> if(ListView.view.currentIndex == index)<br /> {<br />  listItemRect.color = "transparent";<br />  textDelegate.color = "white";<br /> }<br /> else<br /> {<br />  listItemRect.color = "#E2E3E4";<br />  textDelegate.color = "black";<br /> }<br />}</pre><p>Another addition is the navigation bar on the top, so the user knows where in the document structure he is currently positioned. The arrows effect is achieved by simply adding some "help" images that are toggled and their visibility is changed as required by calling the <b>setVisibility</b> function from outside. Navigation bar itself responds to clicks on the items, bringing the user back to the position in the document structure according to the element being clicked.</p><p>Here's how the improved tree view looks like:</p><a href=\"http://3.bp.blogspot.com/-AmwLifSNTww/T2bVSZcV_xI/AAAAAAAAAuQ/QzKaftqLaKc/s1600/1.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 302px; height: 320px;\" src=\"http://3.bp.blogspot.com/-AmwLifSNTww/T2bVSZcV_xI/AAAAAAAAAuQ/QzKaftqLaKc/s320/1.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5721494888664923922\" /></a><p align="center">Just loaded</p><a href=\"http://4.bp.blogspot.com/-q4-9Xocms70/T2bVKGiz6OI/AAAAAAAAAuE/WBrXeQOxlI0/s1600/2.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 285px;\" src=\"http://4.bp.blogspot.com/-q4-9Xocms70/T2bVKGiz6OI/AAAAAAAAAuE/WBrXeQOxlI0/s320/2.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5721494746152823010\" /></a><p align="center">Last level in the tree</p><p>Navigation bar modifications in main.qml and navigation bar code:</p><pre class=\"brush: js\">//added a navigation bar in NavigationBar.qml<br />Rectangle {<br />    id:main<br /> <br />//change visibility of the navigation bar elements<br />function setVisibility()<br />{<br /> navigationRect.hideRect(2, false)<br /><br /> if(level == 0)<br /> {<br />  navigationRect.hideRect(1, false)<br />  backButton.visible = false;<br /> }<br /> else<br /> {<br />  navigationRect.hideRect(1, true)<br /><br />  if(level == 1)<br />  {<br />   navigationRect.setText(0, level0Name);<br />  }<br />  if(level == 2)<br />  {<br />   navigationRect.hideRect(2, true)<br />  }<br /> }<br />}   <br />  ...<br /> <br /> NavigationBar{<br />        id:navigationRect<br />    }<br />}</pre><pre class=\"brush: js\">//Navigation bar code<br /><br />import QtQuick 1.0<br /><br />Rectangle{<br />    id: navigationRect<br />    height:  50<br />    width: parent.width<br />    anchors.top: parent.top<br />    anchors.left: parent.left<br />    anchors.right: parent.right<br />    anchors.topMargin: marginValue<br />    anchors.leftMargin: marginValue<br />    anchors.rightMargin: marginValue<br /><br />    function setText(rect, text)<br />    {<br />        var texts = [level0Text, level1Text, level2Text];<br />        texts[rect].text = text;<br />    }<br /><br />    function hideRect(rect, hide)<br />    {<br />        var rects = [level0Rect, level1Rect, level2Rect];<br />        var helps = [level0Help, level1Help, level2Help];<br />        rects[rect].visible = hide;<br />        helps[rect].visible = hide;<br /><br />        if(rect > 0)<br />        {<br />            hide? helps[rect-1].children[0].source = "icons/selected_black.png" : helps[rect-1].children[0].source = "icons/selected_black_half.png"<br />        }<br />        if(rect == 2)<br />        {<br />            hide? helps[rect].children[0].source = "icons/selected_black_half.png" : helps[rect].children[0].source = ""<br />        }<br />    }<br /><br />    Component.onCompleted: {<br />        level1Rect.visible = false;<br />        level2Rect.visible = false;<br />        level2Rect.visible = false;<br />        level2Help.visible = false;<br />    }<br /><br />    Rectangle{<br />        id: level0Rect<br />        width:  parent.width*4/15<br />        height: parent.height<br />        anchors.left: parent.left<br />        anchors.top: parent.top<br />        color: "black"<br /><br />        Text{<br />            id: level0Text<br />            anchors.centerIn: parent<br />            color: "white"<br />            text: level0Label<br />            font.pixelSize: 10<br />        }<br /><br />        MouseArea{<br />            id: level0Mouse<br />            anchors.fill: parent<br /><br />            onClicked: {<br />                level = 0;<br />                setQueries();<br />            }<br />        }<br />    }<br /><br />    Rectangle{<br />        id: level0Help<br />        width:  parent.width/15<br />        height: parent.height<br />        anchors.left: level0Rect.right<br />        anchors.top: parent.top<br /><br />        Image{<br />            anchors.fill: parent<br />        }<br />    }<br /><br />    Rectangle{<br />        id: level1Rect<br />        width:  parent.width*4/15<br />        height: parent.height<br />        anchors.left: level0Help.right<br />        anchors.top: parent.top<br />        color: "black"<br /><br />        Text{<br />            id: level1Text<br />            color: "white"<br />            anchors.centerIn: parent<br />            text: level1Label<br />            font.pixelSize: 10<br />        }<br /><br />        MouseArea{<br />            id: level1Mouse<br />            anchors.fill: parent<br /><br />            onClicked: {<br />                level = 1;<br />                setQueries();<br />            }<br />        }<br />    }<br /><br />    Rectangle{<br />        id: level1Help<br />        width:  parent.width/15<br />        height: parent.height<br />        anchors.left: level1Rect.right<br />        anchors.top: parent.top<br /><br />        Image{<br />            anchors.fill: parent<br />        }<br />    }<br /><br />    Rectangle{<br />        id: level2Rect<br />        width:  parent.width*4/15<br />        height: parent.height<br />        anchors.left: level1Help.right<br />        anchors.top: parent.top<br />        color: "black"<br /><br />        Text{<br />            id: level2Text<br />            color: "white"<br />            anchors.centerIn: parent<br />            text: level2Label<br />            font.pixelSize: 10<br />        }<br /><br />        MouseArea{<br />            id: level2Mouse<br />            anchors.fill: parent<br />        }<br />    }<br /><br />    Rectangle{<br />        id: level2Help<br />        width:  parent.width/15<br />        height: parent.height<br />        anchors.left: level2Rect.right<br />        anchors.top: parent.top<br /><br />        Image{<br />            anchors.fill: parent<br />        }<br />    }<br />}</pre>

 */ 

public const string content_14032012_b = ""; 
public const string content_14032012_r = ""; 

 /* 
<p>Here's a bit of exersice I had to go through to implement a treeview-like structure in QML. The control has to process the XML file, read data and display it in the form that will allow the user to navigate the tree structure. As an example, the XML file is shown below.</p><pre class="brush: xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;<br />&lt;configuration&gt;<br />&lt;level1item name="level1item 1"&gt;<br /> &lt;level2item name="module 1.1"&gt;<br />  &lt;level3item name="1.1.1" attr1="0" attr2="1"&gt;<br />  &lt;/level3item&gt;<br />  &lt;level3item name="1.1.2" attr1="0" attr2="1"&gt;<br />  &lt;/level3item&gt;<br /> &lt;/level2item&gt;<br /> &lt;level2item name="module 1.2"&gt;<br /> &lt;/level2item&gt;<br /> &lt;level2item name="module 1.3"&gt;<br /> &lt;/level2item&gt;<br /> &lt;level2item name="module 1.4"&gt;<br /> &lt;/level2item&gt;<br /> &lt;level2item name="module 1.5"&gt;<br /> &lt;/level2item&gt;<br />&lt;/level1item&gt;<br />&lt;level1item name="level1item 2"&gt;<br /> &lt;level2item name="module 2.1"&gt;<br /> &lt;/level2item&gt;<br /> &lt;level2item name="module 2.3"&gt;<br /> &lt;/level2item&gt;<br /> &lt;level2item name="module 2.4"&gt;<br /> &lt;/level2item&gt;<br /> &lt;level2item name="module 2.5"&gt;<br /> &lt;/level2item&gt;<br />&lt;/level1item&gt;<br />&lt;level1item name="level1item 3"&gt;<br />&lt;/level1item&gt;<br />&lt;/configuration&gt;</pre><p>The QML only has very basic means to parse XML files. In fact, the only suitable way I have found so far is to use <b>XmlListModel</b>. This means that I have to assume that the schema of the XML document is known beforehand. A more generic way would be to use C++ to parse the XML, but that was out of scope for me. I based my control on some existing solutions that are referenced at the end. Essentially, when the control is first loaded, a first level of the XML tree is read and the data is loaded into the <b>ListView XmlListModel</b>, which is defined in the main QML file.</p><p>The next idea is to check if each element of the <b>ListView</b> has any children at all. For that purpose, a separate <b>XmlListModel</b> is defined in the <b>ListView</b> delegate. Whenever the <b>ListView</b> item is created, the model is constructed and the query uses the delegate's data to retrieve the children of the item. I want a certain image button (with an arrow indicating that the user can navigate to the children of the item) to become visible only in case there are more than 0 children. First, the query is assigned to the model, and the <b>onQueryChanged</b> event fires. The button is made invisible on this event. Next, the query returns the results and the <b>onCountChanged</b> fires. If the result returned more than 0 items, the button is made visible.</p><pre class=\"brush: js\"><br />XmlListModel{<br /> id: delegateXmlModel<br /> source: "tree1.xml"<br /> query: buildQuery(false, name);<br /><br /> XmlRole{name: "name"; query: buildRoleQuery();}<br /><br /> onQueryChanged: {<br />  button.visible = false;<br /> }<br /><br /> onCountChanged: {<br />  if(count > 0)<br />   button.visible = true;<br /> }<br />}</pre><p>The "back" button is displayed at the bottom of the ListView if the user has moved past the first level of the tree and has an option to move back. The functionality revolves around using the global variable <b>level</b>, which indicates which level of the XML tree is current at the moment. Most of the JavaScript deals with constructing the correct queries for the <b>XmlListModels</b>.</p><a href=\"http://4.bp.blogspot.com/-0fBtBDp3Wfc/T2EQI2UNi2I/AAAAAAAAAto/eW062Z7HCWQ/s1600/1.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 295px;\" src=\"http://4.bp.blogspot.com/-0fBtBDp3Wfc/T2EQI2UNi2I/AAAAAAAAAto/eW062Z7HCWQ/s320/1.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5719870745942526818\" /></a><p align="center">First level of the tree</p><a href=\"http://1.bp.blogspot.com/-QZ5-CYZQ4q8/T2EQJKYRNII/AAAAAAAAAt0/o_6Hc2UHFiQ/s1600/2.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 291px;\" src=\"http://1.bp.blogspot.com/-QZ5-CYZQ4q8/T2EQJKYRNII/AAAAAAAAAt0/o_6Hc2UHFiQ/s320/2.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5719870751328253058\" /></a><p align="center">Last level of the tree</p><p>Full listing:</p><pre class=\"brush: js\">// XMLTree<br /><br />import QtQuick 1.0<br /><br />Rectangle {<br />    id:main<br />    width: 360<br />    height: 480<br /><br />    property int level: 0 //0: level1item; 1: level2item; 2: level3item<br />    property string topElement : "configuration"<br />    property string level0: "level1item"<br />    property string level1: "level2item"<br />    property string level2: "level3item"<br />    property string level0Name: ""<br />    property string level1Name: ""<br />    property string level2Name: ""<br /><br />    function buildRoleQuery()<br />    {<br />        return "@name/string()";<br />    }<br /><br />    function buildQuery(isMainTree, name)<br />    {<br />        var level0path = "/" + topElement + "/" + level0;<br />        var level1path = level0path + "[@name=\""<br />            + level0Name + "\"]/" + level1;<br />        var level2path = level1path + "[@name=\""<br />            + level1Name + "\"]/" + level2;<br /><br />        var level0query = level0path + "[@name=\""<br />            + name + "\"]/" + level1;<br />        var level1query = level0path + "[@name=\""<br />            + level0Name + "\"]/" + level1 + "[@name=\""<br />            + name + "\"]/" + level2;<br /><br />        if(level == 0)<br />        {<br />            if(isMainTree)<br />                return level0path;<br />            else<br />                return level0query;<br />        }<br />        if(level == 1)<br />        {<br />            if(isMainTree)<br />                return level1path;<br />            else<br />                return level1query;<br />        }<br />        if(level == 2)<br />        {<br />            if(isMainTree)<br />                return level2path;<br />            else<br />                return level0query; //unused<br />        }<br />        return "/";<br />    }<br /><br />    function setQueries()<br />    {<br />        listModel.query = buildQuery(true, "");<br />        listModel.roles[0].query = buildRoleQuery();<br />        listModel.reload();<br />    }<br /><br />    Component.onCompleted: {<br />        backButton.visible = false;<br />    }<br /><br />    ListView {<br />        id: listView<br />        height: parent.height-50<br />        width: parent.width<br />        anchors.top: parent.top<br />        model:  listModel<br /><br />        delegate: ListViewDelegate{}<br />        focus: true<br />    }<br /><br />    Rectangle{<br />        id: backRect<br />        height: 50<br />        width: parent.width<br />        anchors.bottom: parent.bottom<br /><br />        Rectangle{<br />            id:backButton<br />            anchors.right: parent.right<br />            width: 40<br />            height:  40<br /><br />            Image{<br />                id:backIcon<br />                anchors.fill: parent<br />                fillMode: Image.PreserveAspectFit<br />                source: "icons/arrowBack.png"<br />            }<br /><br />            MouseArea{<br />                id: backMouseArea<br />                anchors.fill: parent<br /><br />                onClicked: {<br />                    level--;<br />                    if(level == 0)<br />                        backButton.visible = false;<br />                    setQueries();<br />                }<br />            }<br />        }<br />    }<br /><br />    XmlListModel{<br />        id: listModel<br />        source: "tree1.xml"<br />        query: "/" + topElement + "/" + level0<br /><br />        XmlRole {name: "name"; query: "@name/string()"}<br />        XmlRole {name: "type"; query: "@type/string()"}<br />        XmlRole {name: "attr1"; query: "@attr1/string()"}<br />        XmlRole {name: "attr2"; query: "@attr2/string()"}<br />    }<br />}</pre><pre class=\"brush: js\">//ListView delegate<br /><br />import QtQuick 1.0<br /><br />Rectangle{<br />    id: delegate<br />    width: parent.width<br />    height:  textDelegate.height<br /><br />    property string fullText : ""<br /><br />    function addComma()<br />    {<br />        if(fullText)<br />            fullText = fullText + ", ";<br />    }<br /><br />    function getText()<br />    {<br />        fullText = "";<br />        if(level == 0)<br />        {<br />            if(type)<br />                fullText = "<br/>" + "type=" + type;<br />            if(attr1)<br />            {<br />                addComma();<br />                fullText = fullText + "<br/>" + "attr1=" + attr1;<br />            }<br />            return name + fullText;<br />        }<br />        else if(level == 1)<br />            return name;<br />        else if(level == 2)<br />        {<br />            if(attr1)<br />                fullText = "<br/>" + "attr1: " + attr1;<br />            if(attr2)<br />            {<br />                addComma();<br />                fullText = fullText + "attr2: " + attr2;<br />            }<br />            return name + fullText;<br />        }<br />        else<br />            return name;<br />        return "";<br />    }<br /><br />    Component.onCompleted: {<br />        textDelegate.text = getText();<br />    }<br /><br />    XmlListModel{<br />        id: delegateXmlModel<br />        source: "tree1.xml"<br />        query: buildQuery(false, name);<br /><br />        XmlRole{name: "name"; query: buildRoleQuery();}<br /><br />        onQueryChanged: {<br />            button.visible = false;<br />        }<br /><br />        onCountChanged: {<br />            if(count > 0)<br />                button.visible = true;<br />        }<br />    }<br /><br />    Rectangle{<br />        id: contentDelegate<br />        anchors.left: parent.left<br />        anchors.right: nextButton.left<br />        height: textDelegate.height<br />        border.color: "red"<br />        border.width: 1<br />        z:1<br /><br />        Image{<br />            id: elementIcon<br />            height: textDelegate.height<br />            fillMode: Image.PreserveAspectFit<br />        }<br /><br />        Text{<br />            id: textDelegate<br />            anchors.left:  elementIcon.right<br />            anchors.leftMargin: 10<br />            anchors.right: parent.right<br />            height: 70<br />            text: ""<br />            font.pixelSize: 15<br />            horizontalAlignment: Text.AlignHLeft<br />            wrapMode: Text.WordWrap<br />        }<br />    }<br /><br />    Rectangle{<br />        id: nextButton<br />        anchors.right: parent.right<br />        anchors.rightMargin: 4<br />        width: 40<br />        height: contentDelegate.height<br /><br />        Rectangle{<br />            id: button<br />            anchors.centerIn: parent<br />            width: 40<br />            height: 40<br /><br />            radius: 5<br />            border{ color: "gray"; width: 3}<br />            visible: (level < 2) //hide 'next' button when lowest level reached<br /><br />            Image{<br />                id: nextIcon<br />                anchors.fill: parent<br />                fillMode: Image.PreserveAspectFit<br />                source: "icons/arrow.png"<br />            }<br /><br />            MouseArea{<br />                id: nextMouseArea<br />                anchors.fill: parent<br /><br />                onClicked: {<br />                    if(level == 0)<br />                        level0Name = name;<br />                    else if(level == 1)<br />                        level1Name = name;<br />                    level++;<br />                    if(level > 0)<br />                        backButton.visible = true;<br />                    setQueries();<br />                    listView.model = listModel;<br />                }<br />            }<br />        }<br />    }<br />}</pre><p>References</p><a href=\"http://ruedigergad.com/2011/08/14/qml-treeview">QML Treeview</a><br/><a href=\"http://ruedigergad.com/2011/08/28/new-version-of-the-qml-treeview">New Version of the QML TreeView</a>

 */ 

public const string content_08032012_b = ""; 
public const string content_08032012_r = ""; 

 /* 
<p>A custom tab control received a slight update: An <b>isDisabled</b> property was added to the <b>CustomTab</b>. The disabled tab does absolutely nothing - does not respond to mouse clicks or mouse enter and exit events. Its name is displayed in gray. So a couple changes were done to the <b>CustomTab</b> which are summarized below.</p><pre class=\"brush: js\">import QtQuick 1.0<br /><br />Rectangle {<br /> ...<br />    property bool isDisabled;<br />    property int tabIndex;<br /><br />    function applyState()<br />    {<br />  ...<br />        if(isDisabled)<br />        {<br />            textOnTab.color = "darkgrey";<br />        }<br />    }<br /><br />    MouseArea{<br />        hoverEnabled: true<br />        anchors.fill: parent<br />        onClicked: {<br />            if(!isDisabled)<br />            {<br />    ...<br />            }<br />        }<br /> ...<br />}</pre><p>The JavaScript for the main control was modified to become somewhat more generic. There is certainly space for some more improvement! Tabs are currently added with the minimum number of properties. When all the tabs are added, the recalculateTabProperties() is called to calculate properties of each tab such as width, margins or anchors using the total number of tabs and the index of the current tab as starting points. The <b>applyXMLModel()</b> is totally optional, it just sits there so that the code that reads the XML is not lost.</p><p>Another bit of functionality is adding a tab "on the fly", to the right of the existing tabs. Using the changes above, the <b>addOneMoreTab()</b> function adds a <b>CustomTab</b> object to the children of the <b>tabsRow</b> element. Currently this function modifies the <b>iPosition</b> of the previous tab to make sure it's no longer marked as rightmost. As an improvement, this bit can be moved into the <b>recalculateTabProperties()</b>, where it most likely belongs. The way the tab is added is shown on the screenshots.</p><a href=\"http://3.bp.blogspot.com/-DR8g1BI6-6g/T1kjX7Y4oPI/AAAAAAAAAtQ/ffHgz6VSuzo/s1600/1.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 296px;\" src=\"http://3.bp.blogspot.com/-DR8g1BI6-6g/T1kjX7Y4oPI/AAAAAAAAAtQ/ffHgz6VSuzo/s320/1.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5717640095909585138\" /></a><p align="center">Tab Control Loaded</p><a href=\"http://4.bp.blogspot.com/-9zglGwBD4C4/T1kjYPa0M3I/AAAAAAAAAtc/NyvasLTM7Cw/s1600/2.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 297px;\" src=\"http://4.bp.blogspot.com/-9zglGwBD4C4/T1kjYPa0M3I/AAAAAAAAAtc/NyvasLTM7Cw/s320/2.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5717640101286392690\" /></a><p align="center">New Tab Added Dynamically</p><p>Full code of the main application.</p><pre class=\"brush: js\">import QtQuick 1.0<br /><br />Rectangle {<br />    id: screen<br />    width: 490; height: 400<br />    property int numTabs: 5<br />    property int margin: 2<br />    property string transparentColor : "transparent"<br />    property string redColor: "red"<br />    property string grayColor: "#B7B9BC" // "lightgray"<br /><br />    function addOneMoreTab()<br />    {<br />        //get the current tab count<br />        var numTabs = tabsRow.children.length;<br />        //get the last tab and change its position state<br />        var lastTab = tabsRow.children[numTabs-1];<br />        lastTab.iPosition = 1;<br />        //add the new tab<br />        var tab = Qt.createComponent("CustomTab.qml");<br />        var obj = tab.createObject(tabsRow);<br /><br />        obj.tabIndex = tabsRow.children.length;<br />        obj.tabtext = "Just Added";<br /><br />        recalculateTabProperties();<br /><br />        tabsRow.clearState();<br />    }<br /><br />    function recalculateTabProperties()<br />    {<br />       var numTabs = tabsRow.children.length;<br />       var i=0;<br />       for(i=0;i<=numTabs-1;i++)<br />       {<br />           console.log("recalculating tab " + i);<br /><br />           var obj = tabsRow.children[i];<br />           if(i==0)<br />           {<br />              obj.iPosition = 0;<br />           }<br />           else if(i==numTabs-1)<br />           {<br />               obj.iPosition = 2;<br />           }<br />           else<br />           {<br />               obj.iPosition = 1;<br />           }<br /><br />           obj.ctlHeight = tabsRow.height - margin;<br />           obj.isSelected = false;<br />           obj.anchors.bottom = tabsRow.bottom;<br />           obj.anchors.bottomMargin = margin;<br /><br />           if(obj.iPosition == 0)<br />           {<br />               obj.ctlWidth = tabsRow.width/numTabs;<br />               obj.anchors.left = tabsRow.left;<br />           }<br />           else<br />           {<br />               obj.ctlWidth = tabsRow.width/tabsRow.children.length - margin;<br />               obj.anchors.left = tabsRow.children[i-1].right;<br />               obj.anchors.leftMargin = margin;<br />           }<br />       }<br />    }<br /><br />    function createTab()<br />    {<br />        var tab = Qt.createComponent("CustomTab.qml");<br /><br />        if(tab.status == Component.Ready)<br />        {<br />            var obj = tab.createObject(tabsRow);<br />            if(obj == null)addOneMoreTab();<br />            {<br />                return false;<br />            }<br /><br />            var numTabs = tabsRow.children.length<br />            console.log("tabsRow children:" + numTabs)<br /><br />            obj.tabIndex = numTabs;<br />        }<br />        return true;<br />    }<br /><br />    function applyXMLModel()<br />    {<br />        var i=0;<br />        for(i=0;i<=xmlTabModel.count-1;i++)<br />        {<br />            var obj = tabsRow.children[i];<br />            if(obj != null)<br />            {<br />                console.log("obj is not null")<br />                if(xmlTabModel.get(i).size == "Disabled")<br />                {<br />                    obj.tabtext = "Disabled";<br />                    obj.isDisabled = true;<br />                }<br />                else<br />                {<br />                   obj.tabtext = xmlTabModel.get(i).name;<br />                }<br />            }<br />        }<br />    }<br /><br />    function createTabs(num)<br />    {<br />       var i=0;<br /><br />       for(i=0;i<=num-1;i++)<br />       {<br />           var success = createTab();<br />           if(!success)<br />           {<br />               console.log("Failed to create tab #" + i);<br />           }<br />       }<br /><br />       recalculateTabProperties();<br />       applyXMLModel();<br /><br />       tabsRow.clearState();<br />    }<br /><br />    XmlListModel{<br />        id: xmlTabModel<br />        source: "tabs.xml"<br />        query: "/tabList/tab"<br />        XmlRole{name: "name"; query: "name/string()" }<br />        XmlRole{name: "size"; query: "size/string()"}<br /><br />        onCountChanged: {<br />            createTabs(count);<br />        }<br />    }<br /><br />Rectangle {<br />    id: backRect<br />    radius: 10<br />    width: parent.width<br />    height: parent.height - 50       // need to expand to free space<br />    color: grayColor<br />    anchors.top: parent.top<br />    anchors { leftMargin: 10; bottomMargin: 10; topMargin: 10; rightMargin:10 }<br /><br />Rectangle{<br />    id: tabsRect<br />    radius: 10<br />    width: parent.width<br />    height: 80<br />    anchors.top: parent.top<br /><br />    Row{<br />        id:tabsRow<br />        width: parent.width<br />        height: parent.height<br /><br />        function clearState()<br />        {<br />            var j=0;<br />            for(j=0;j<= tabsRow.children.length - 1;j++)<br />            {<br />                children[j].isSelected = false;<br />                children[j].state = "unselected";<br />                children[j].applyState();<br />            }<br />        }<br />      }<br />    }<br />  }<br /><br />  Rectangle{<br />     id: buttonRect<br />     height: 40<br />     width:  75<br />     border.width: 1<br />     border.color: "black"<br />     anchors.bottom: parent.bottom<br /><br />     Text{<br />         text: "Click Here"<br />         x:5<br />         y:10<br />     }<br /><br />     MouseArea{<br />         anchors.fill: parent<br />         onClicked: {<br />            addOneMoreTab();<br />         }<br />     }<br />  }<br />}</pre>

 */ 

public const string content_07032012_b = ""; 
public const string content_07032012_r = ""; 

 /* 
<p>The next task is to remove all hard-coded <b>CustomTab</b> elements from the custom tab control and load them all through JavaScript. Furthermore, verify that any settings can be loaded from the XML file. For the start, let's use the simple XML file, suspiciously similar to the one I've recently used to playing with a ListView element.</p><pre class="brush: xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;<br />&lt;tabList&gt;<br /> &lt;tab&gt;<br />   &lt;name&gt;Tab 1&lt;/name&gt;<br />   &lt;size&gt;Medium&lt;/size&gt;<br /> &lt;/tab&gt;<br /> &lt;tab&gt;<br />   &lt;name&gt;Tab 2&lt;/name&gt;<br />   &lt;size&gt;Medium&lt;/size&gt;<br /> &lt;/tab&gt;<br /> &lt;tab&gt;<br />   &lt;name&gt;Tab 3&lt;/name&gt;<br />   &lt;size&gt;Medium&lt;/size&gt;<br /> &lt;/tab&gt;<br /> &lt;tab&gt;<br />   &lt;name&gt;Tab 4&lt;/name&gt;<br />   &lt;size&gt;Medium&lt;/size&gt;<br /> &lt;/tab&gt;<br /> &lt;tab&gt;<br />   &lt;name&gt;Tab 5&lt;/name&gt;<br />   &lt;size&gt;Medium&lt;/size&gt;<br /> &lt;/tab&gt;<br />&lt;/tabList&gt;</pre><p>Just like in a ListView example, the <b>XmlListModel</b> element will be used to read data from the XML file. The usage of the <b>XmlListModel</b> is not limited to lists - data can be accessed directly. When the <b>XmlListModel</b> element is just created, it has no data. Then, at some point, data is loaded and the <b>onCountChanged</b> event fires. This fact is used to trigger the creation of tabs.</p><pre class=\"brush: js\">XmlListModel{<br /> id: xmlTabModel<br /> source: "tabs.xml"<br /> query: "/tabList/tab"<br /> XmlRole{name: "name"; query: "name/string()" }<br /> XmlRole{name: "size"; query: "size/string()"}<br /><br /> onCountChanged: {<br />  createTabs(count);<br /> }<br />}</pre><p>This line</p><pre class=\"brush: js\">var tab = Qt.createComponent("CustomTab.qml");</pre><p>creates a <b>Component</b> object created using the QML file that is located at the address specified - can be a local file, or a URL, for example. The next point of interest,</p><pre class=\"brush: js\">var obj = tab.createObject(tabsRow);</pre><p>creates an object instance of that component. The parameter is the parent object. So, I want the tab to be a child of the <b>tabsRow</b>. Next, some simple JavaScript follows - I'm dynamically assigning properties to the object which were previously hard-coded and make sure the initial position of the tabs is correct. The line</p><pre class=\"brush: js\">obj.tabtext = xmlTabModel.get(i).name;</pre><p>confirms that my XML file was read correctly: I'm displaying the name property from the XML file on the tab. That's about all that's interesting about this example - the behavior or the visual layout did not change, just the way the tabs are created inside the tab control.</p><p>The <b>CustomTab.qml</b> did not change much. I only added a tabtext property that is used by a Text element to display some text that is retrieved from the XML file and confirms that the tab control works as expected. So all the code added to the <b>CustomTab.qml</b> is summarized below:</p><pre class=\"brush: js\">import QtQuick 1.0<br /><br />Rectangle {<br />    id: customTab<br /> ...<br /> <br />    property string tabtext;<br /><br />    Text{<br />        id: textOnTab;<br />        text: tabtext;<br />        y:30;<br />        z:1;<br />    }<br /> ...<br />}</pre><p>The screenshot is about the same.</p><a href=\"http://4.bp.blogspot.com/-S9e95rw4qA4/T1fVmp7cuZI/AAAAAAAAAtE/nzKPLCjspGM/s1600/1.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 296px;\" src=\"http://4.bp.blogspot.com/-S9e95rw4qA4/T1fVmp7cuZI/AAAAAAAAAtE/nzKPLCjspGM/s320/1.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5717273112037079442\" /></a><p align="center">The Tab Control - Looks the Same, but Dynamic</p><p>The full main QML file for reference, there's much more JavaScript and less QML layout:</p><pre class=\"brush: js\">import QtQuick 1.0<br /><br />Rectangle {<br />    id: screen<br />    width: 490; height: 400<br />    property int numTabs: 5<br />    property int margin: 2<br />    property string transparentColor : "transparent"<br />    property string redColor: "red"<br />    property string grayColor: "#B7B9BC" // "lightgray"<br /><br />    function createTab(i, num)<br />    {<br />        var tab = Qt.createComponent("CustomTab.qml");<br /><br />        if(tab.status == Component.Ready)<br />        {<br />            var obj = tab.createObject(tabsRow);<br /><br />            if(obj == null)<br />                return false;<br />            if(i == 0)<br />               obj.iPosition =  0;<br />            else if(i == num-1)<br />               obj.iPosition = 2;<br />            else<br />               obj.iPosition = 1;<br /><br />            obj.ctlHeight = tabsRow.height - margin;<br />            obj.isSelected = false;<br />            obj.anchors.bottom = tabsRow.bottom;<br />            obj.anchors.bottomMargin = margin;<br />            obj.tabtext = xmlTabModel.get(i).name;<br />            if(i == 0)<br />            {<br />                obj.ctlWidth = tabsRow.width/num;<br />                obj.anchors.left = tabsRow.left;<br />            }<br />            else<br />            {<br />                obj.ctlWidth = tabsRow.width/num - margin;<br />                obj.anchors.left = tabsRow.children[i-1].right;<br />                obj.anchors.leftMargin = margin;<br />            }<br />         }<br />         else<br />         {<br />            return false;<br />         }<br />         return true;<br />    }<br /><br />    function createTabs(num)<br />    {<br />       var i=0;<br /><br />       for(i=0;i<=num-1;i++)<br />       {<br />           var success = createTab(i, num);<br />           if(!success)<br />           {<br />               console.log("Failed to create tab #" + i);<br />           }<br />       }<br /><br />       tabsRow.clearState();<br />    }<br /><br />    XmlListModel{<br />        id: xmlTabModel<br />        source: "tabs.xml"<br />        query: "/tabList/tab"<br />        XmlRole{name: "name"; query: "name/string()" }<br />        XmlRole{name: "size"; query: "size/string()"}<br /><br />        onCountChanged: {<br />            createTabs(count);<br />        }<br />    }<br /><br />Rectangle {<br />    id: backRect<br />    radius: 10<br />    width: parent.width<br />    height: parent.height        // need to expand to free space<br />    color: grayColor<br />    anchors.top: parent.top<br />    anchors { leftMargin: 10; bottomMargin: 10; topMargin: 10; rightMargin:10 }<br /><br />Rectangle{<br />    id: tabsRect<br />    radius: 10<br />    width: parent.width<br />    height: 80<br />    anchors.top: parent.top<br /><br />    Row{<br />        id:tabsRow<br />        width: parent.width<br />        height: parent.height<br />        anchors.fill: parent<br /><br />        function clearState()<br />        {<br />            var j=1;<br />            for(j=0;j<= numTabs-1;j++)<br />            {<br />                children[j].isSelected = false;<br />                children[j].state = "unselected";<br />                children[j].applyState();<br />            }<br />        }<br />      }<br />    }<br />  }<br />}</pre><p>References</p><a href=\"http://qt-project.org/doc/qt-4.8/qdeclarativedynamicobjects.html">Dynamic Object Management in QML</a><br/><a href=\"http://www.pyside.org/docs/pyside/tutorials/qmladvancedtutorial/samegame2.html">QML Advanced Tutorial 2 - Populating the Game Canvas</a>

 */ 

public const string content_06032012_b = ""; 
public const string content_06032012_r = ""; 

 /* 
<p>As my next task, I'm developing a tab control that has to follow certain design standards. The end result is shown at the end of this post. The easiest way to do this would be just to use images as backgrounds for UI elements. However, the control also has to scale and in most cases the uneven stretching of images would lead to ugliness. Therefore, the whole control had to be developed by using QML design elements, such as <b>Rectangles</b>, <b>Rows</b> or <b>Grids</b>. There were two major issues to be considered: firstly, there is no way to round only certain corners of the rectangle, its either all or none. Secondly, when the tab is selected or moused over, a red line has to be displayed across the top of the tab.</p><p>Generally, the tab control is a rectangle which has a row at the top. A tab is a component which is specified in a separate QML file, <b>CustomTab.qml</b>. For now, tabs are hard-coded as child elements of the said row. Other than layout properties, that anchor the tab to a proper position, it also holds some properties that are important for visual display. <b>isSelected</b> defines if the tab is currently selected. If it is, it becomes slightly taller and displays a red line across the top. <b>isHighlighted</b> defines if the mouse is currently over the tab. If it is, a more narrow red line is displayed across the top, and the tab height does not change. The <b>iPosition</b> has three states and defines if the tab is rightmost, leftmost or is in between the tabs. Rightmost tab has the top right corner rounded, leftmost - the left, and the middle tabs are not rounded. When the tab is selected, both corners are rounded regardless of position. All of this logic was implemented in somewhat messy JavaScript functions.</p><p>From the design point of view, each tab is a 2x2 <b>Grid</b> element. A rectangular grid covers a rounded rectangle. By making top right or top left elements or both of the grid transparent, I make rounded corners visible, giving the impression of a tab with one or two rounded corners. Top elements of the grid are also used to change the height of the red line by modifying their height.</p><p>The most important function is the <b>applyState()</b>. After tab properties such as <b>isSelected</b> or <b>isHighlighted</b> were assigned, the function makes sure that the tab is visualised correctly.</p><pre class=\"brush: js\">function applyState()<br />{<br /> if(isSelected)<br /> {<br />  applyHeights(ctlHeight + redLineHeight/2, redLineHeight, ctlHeight + redLineHeight/2)<br />  customTab.color=redColor<br /> }<br /> else if(isHighlighted)<br /> {<br />  applyHeights(ctlHeight, redLineHeight/2, ctlHeight)<br />  customTab.color = redColor<br /> }<br /> else<br /> {<br />  applyHeights(ctlHeight, redLineHeight, ctlHeight)<br />  customTab.color=grayColor<br /> }<br /><br /> if(iPosition == "0")<br /> {<br />  elements.children[0].color = transparentColor;<br />  elements.children[1].color = getCorrectColor();<br /> }<br /> else if(iPosition == "1")<br /> {<br />  elements.children[0].color = getCorrectColor();<br />  elements.children[1].color = getCorrectColor();<br /> }<br /> else if(iPosition == "2")<br /> {<br />  elements.children[0].color = getCorrectColor();<br />  elements.children[1].color = transparentColor;<br /> }<br />}</pre><p>If the tab is selected, the height of the grid rows is increased as required, if it is highlighted the height of the top row is adjusted and if none of that, it is returned to the initial state. Next, the grid elements are colored appropriately or set to transparent according to the tab position in the tab control.</p><pre class=\"brush: js\">function clearState()<br />{<br /> var j=1;<br /> for(j=0;j<= numTabs-1;j++)<br /> {<br />  children[j].isSelected = false;<br />  children[j].state = "unselected";<br />  children[j].applyState();<br /> }<br />}</pre><p>The <b>clearState()</b> function just loops through the children of <b>tabRow</b>, which are individual tabs. It clears the <b>isSelected</b> tag and applies the proper <b>state</b> (see below). Then it applies the tab state, essentially resetting it to initial state.</p><pre class=\"brush: js\">MouseArea{<br /> hoverEnabled: true<br /> anchors.fill: parent<br /> onClicked: {<br />  parent.parent.clearState();<br />  parent.isSelected = true;<br />  parent.state = "selected"<br />  parent.applyState();<br /> }<br /> onEntered: {<br />  parent.isHighlighted = true;<br />  if(!parent.isSelected)<br />  {<br />   parent.applyState();<br />  }<br /> }<br /> onExited: {<br />  parent.isHighlighted = false;<br />  if(!parent.isSelected)<br />  {<br />   parent.applyState();<br />  }<br /> }<br />}</pre><p>Each tab has a <b>MouseArea</b>, which listens to three events: <b>onClicked</b>, <b>onEntered</b> and <b>onExited</b>. Note the usage of <b>hoverEnabled: true</b>, without which the <b>MouseArea</b> would just ignore the last two events mentioned. When the tab is clicked, all tabs are reset first, and then the clicked tab is set to be selected. When the tab is entered or exited, the <b>isHighlighted</b> attribute is toggled and the changes are applied to the tab - but only is it is not already selected. If it is, the event is ignored since the tab should not change if it is already selected, and the mouse is over it.</p><pre class=\"brush: js\">states: [<br /> State {<br />  name: "selected"<br />  PropertyChanges { target: customTab; anchors.bottomMargin: 0}<br /> },<br /><br /> State {<br />  name: "unselected"<br />  PropertyChanges {target: customTab; anchors.bottomMargin: margin}<br /> }<br />]</pre><p>And lastly, the <b>anchor.bottomMargin</b> can not be changed from JavaScript, therefore two states had to be created. Removing the margin when the tab is selected gives the "melding" effect, when the white line between the selected tab and the rest of the control disappears, and appears again when a different tab is selected. The state of the tab gets toggled by the <b>onClicked</b> event of the <b>MouseArea</b>, as shown above.</p><p>Finally, the full listing of the code - it is not yet overly huge.</p><pre class=\"brush: js\">// The main qml file<br /><br />import QtQuick 1.0<br /><br />Rectangle {<br />    id: screen<br />    width: 490; height: 400<br />    property int numTabs: 5<br />    property int margin: 2<br />    property string transparentColor : "transparent"<br />    property string redColor: "red"<br />    property string grayColor: "#B7B9BC" // "lightgray"<br /><br />Rectangle {<br />    id: backRect<br />    radius: 10<br />    width: parent.width<br />    height: parent.height       <br />    color: grayColor<br />    anchors.top: parent.top<br />    anchors { leftMargin: 10; bottomMargin: 10; topMargin: 10; rightMargin:10 }<br /><br />Rectangle{<br />    id: tabsRect<br />    radius: 10<br />    width: parent.width<br />    height: 80<br />    anchors.top: parent.top<br /><br />    Row{<br />        id:tabsRow<br />        width: parent.width<br />        height: parent.height<br />        anchors.fill: parent<br /><br />        function clearState()<br />        {<br />            var j=1;<br />            for(j=0;j<= numTabs-1;j++)<br />            {<br />                children[j].isSelected = false;<br />                children[j].state = "unselected";<br />                children[j].applyState();<br />            }<br />        }<br /><br />        CustomTab{<br />            id: customTab0<br />            ctlWidth: parent.width/numTabs<br />            ctlHeight: parent.height - margin<br />            tabIndex: 0<br />            isSelected: false;<br />            iPosition: 0<br />            anchors { left: parent.left; bottom: parent.bottom; bottomMargin: margin }<br />        }<br /><br />        CustomTab{<br />            id: customTab1<br />            ctlWidth: parent.width/numTabs-margin<br />            ctlHeight: parent.height - margin<br />            tabIndex: 1<br />            isSelected: false;<br />            iPosition: 1<br />            anchors { left: customTab0.right; bottom: parent.bottom; leftMargin: margin; bottomMargin: margin; }<br />        }<br /><br />        CustomTab{<br />            id: customTab2<br />            ctlWidth: parent.width/numTabs-margin<br />            ctlHeight: parent.height - margin<br />            tabIndex: 2<br />            isSelected: false;<br />            iPosition: 1<br />            anchors { left: customTab1.right; bottom: parent.bottom; leftMargin: margin; bottomMargin: margin; }<br />        }<br /><br />        CustomTab{<br />            id: customTab3<br />            ctlWidth: parent.width/numTabs-margin<br />            ctlHeight: parent.height - margin<br />            tabIndex: 3<br />            isSelected: false;<br />            iPosition: 1<br />            anchors { left: customTab2.right; bottom: parent.bottom; leftMargin: margin; bottomMargin: margin; }<br />        }<br /><br />        CustomTab{<br />            id: customTab4<br />            ctlWidth: parent.width/numTabs-margin<br />            ctlHeight: parent.height - margin<br />            tabIndex: 4<br />            isSelected: false;<br />            iPosition: 2<br />            anchors { left: customTab3.right; bottom: parent.bottom; leftMargin: margin; bottomMargin: margin; }<br />        }<br />      }<br />    }<br />  }<br />}</pre><pre class=\"brush: js\">// The CustomTab.qml file<br /><br />import QtQuick 1.0<br /><br />Rectangle {<br /><br />    id: customTab<br />    clip: true<br /><br />    property int ctlWidth;<br />    property int ctlHeight;<br />    property int redLineHeight: 20;<br />    property bool isSelected;<br />    property bool isHighlighted;<br />    property int tabIndex;<br />    property int iPosition; // 0 = left; 1 = middle; 2 = right<br /><br />    width: ctlWidth<br />    height: ctlHeight<br />    color:  "#B7B9BC"<br />    radius: 10<br /><br />    function applyHeights(customTabHeight, topHeight, bottomHeight)<br />    {<br />        customTab.height = customTabHeight<br /><br />        elements.children[0].height = topHeight<br />        elements.children[1].height = topHeight<br />        elements.children[2].height = bottomHeight<br />        elements.children[3].height = bottomHeight<br />    }<br /><br />    function clearChildState()<br />    {<br />        applyHeights(ctlHeight, redLineHeight, ctlHeight - redLineHeight)<br />    }<br /><br />    function getCorrectColor()<br />    {<br />        if(isSelected)<br />        {<br />            return transparentColor;<br />        }<br />        else if(isHighlighted)<br />        {<br />            return redColor;<br />        }<br />        else<br />        {<br />            return grayColor;<br />        }<br />    }<br /><br />    function applyState()<br />    {<br />        if(isSelected)<br />        {<br />            applyHeights(ctlHeight + redLineHeight/2, redLineHeight, ctlHeight + redLineHeight/2)<br />            customTab.color=redColor<br />        }<br />        else if(isHighlighted)<br />        {<br />            applyHeights(ctlHeight, redLineHeight/2, ctlHeight)<br />            customTab.color = redColor<br />        }<br />        else<br />        {<br />            applyHeights(ctlHeight, redLineHeight, ctlHeight)<br />            customTab.color=grayColor<br />        }<br /><br />        if(iPosition == "0")<br />        {<br />            elements.children[0].color = transparentColor;<br />            elements.children[1].color = getCorrectColor();<br />        }<br />        else if(iPosition == "1")<br />        {<br />            elements.children[0].color = getCorrectColor();<br />            elements.children[1].color = getCorrectColor();<br />        }<br />        else if(iPosition == "2")<br />        {<br />            elements.children[0].color = getCorrectColor();<br />            elements.children[1].color = transparentColor;<br />        }<br />    }<br /><br />    Component.onCompleted: {<br />            applyState();<br />        }<br /><br />    Grid{<br />        id:elements<br />        width: parent.width<br />        height: parent.height<br />        columns: 2<br />        rows: 2<br /><br />        Rectangle{id: topLeft; color: grayColor; width: parent.width/2; height: redLineHeight;}<br />        Rectangle{id: topRight; color: grayColor; width: parent.width/2; height: redLineHeight;}<br />        Rectangle{id: bottomLeft; color: grayColor; width: parent.width/2; height: parent.height - redLineHeight;}<br />        Rectangle{id: bottomRight; color: grayColor; width: parent.width/2; height: parent.height - redLineHeight;}<br />    }<br /><br />    MouseArea{<br />        hoverEnabled: true<br />        anchors.fill: parent<br />        onClicked: {<br />            parent.parent.clearState();<br />            parent.isSelected = true;<br />            parent.state = "selected"<br />            parent.applyState();<br />        }<br />        onEntered: {<br />            parent.isHighlighted = true;<br />            if(!parent.isSelected)<br />            {<br />                parent.applyState();<br />            }<br />        }<br />        onExited: {<br />            parent.isHighlighted = false;<br />            if(!parent.isSelected)<br />            {<br />                parent.applyState();<br />            }<br />        }<br />    }<br /><br />    states: [<br />        State {<br />            name: "selected"<br />            PropertyChanges { target: customTab; anchors.bottomMargin: 0}<br />        },<br /><br />        State {<br />            name: "unselected"<br />            PropertyChanges {target:customTab; anchors.bottomMargin: margin}<br />        }<br />    ]<br />}</pre><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://1.bp.blogspot.com/-wopR5wxnhUU/T1Z9b0apnMI/AAAAAAAAAss/4Hi1UnWDLAM/s1600/1.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 297px;\" src=\"http://1.bp.blogspot.com/-wopR5wxnhUU/T1Z9b0apnMI/AAAAAAAAAss/4Hi1UnWDLAM/s320/1.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5716894693873786050\" /></a><p align="center">Tabs Just Loaded, None Selected</p><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://4.bp.blogspot.com/-OiXsT7Ikngs/T1Z9cL1rQ9I/AAAAAAAAAs4/uoy6vJvF6M0/s1600/2.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 297px;\" src=\"http://4.bp.blogspot.com/-OiXsT7Ikngs/T1Z9cL1rQ9I/AAAAAAAAAs4/uoy6vJvF6M0/s320/2.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5716894700161156050\" /></a><p align="center">Tab Selected, Another Tab Highlighted</p><p>References</p><a href=\"http://doc.qt.nokia.com/4.7-snapshot/qdeclarativestates.html">QML States</a><br/><a href=\"http://doc.qt.nokia.com/4.7-snapshot/qml-propertychanges.html">QML PropertyChanges Element</a><br/><a href=\"https://qt-project.org/doc/qt-4.8/qml-anchor-layout.html">Anchor-based Layout in QML</a><br/><a href=\"http://www.quirksmode.org/js/function.html">JavaScript Functions</a>

 */ 

public const string content_05032012_b = ""; 
public const string content_05032012_r = ""; 

 /* 
<p>The <b>ListView</b> is similar to ListViews in other programming languages - it displays a list of items! There is some difference, of course, in the way it is implemented. The data to be displayed is called a <b>model</b>, and if it is some fixed data then it can be defined right in the code by adding a <b>ListModel</b> element like this:</p><pre class=\"brush: js\"><br />ListModel {<br />     ListElement {<br />         name: "Joe Bloggs"<br />         number: "123 1234"<br />     }<br />}</pre><p>That will be a list with just one element. Next, there is the <b>delegate</b>. The delegate defines the way data is displayed. Again, it can be very simple, for example</p><pre class=\"brush: js\">ListView{<br /> id: listView<br /> <br /> ...<br /><br /> delegate: Text{text: name}<br />}</pre><p>Such delegate will just display some text which is taken from the model.</p><p>To make this post slightly less boring, I will first make the <b>ListView</b> read its model from the xml file. For that purpose, the <b>XmlListModel</b> element is used. I will use this sample XML structure:</p><pre class="brush: xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;<br />&lt;listModel&gt;<br /> &lt;item&gt;<br />   &lt;name&gt;Item One&lt;/name&gt;<br />   &lt;size&gt;Medium&lt;/size&gt;<br />   &lt;desc&gt;Item One Detailed Description&lt;/desc&gt;<br /> &lt;/item&gt;<br /> &lt;item&gt;<br />   &lt;name&gt;Item Two&lt;/name&gt;<br />   &lt;size&gt;Large&lt;/size&gt;<br />   &lt;desc&gt;Item Three Detailed Description&lt;/desc&gt;<br /> &lt;/item&gt;<br /> &lt;item&gt;<br />   &lt;name&gt;Item Three&lt;/name&gt;<br />   &lt;size&gt;Small&lt;/size&gt;<br />   &lt;desc&gt;Item Three Detailed Description&lt;/desc&gt;<br /> &lt;/item&gt;<br /> &lt;item&gt;<br />   &lt;name&gt;Item Four&lt;/name&gt;<br />   &lt;size&gt;Small&lt;/size&gt;<br />   &lt;desc&gt;Item Four Detailed Description&lt;/desc&gt;<br /> &lt;/item&gt;<br /> &lt;item&gt;<br />   &lt;name&gt;Item Five&lt;/name&gt;<br />   &lt;size&gt;Small&lt;/size&gt;<br />   &lt;desc&gt;Item Five Detailed Description&lt;/desc&gt;<br /> &lt;/item&gt;<br />&lt;/listModel&gt;</pre><p>The <b>XMLListModel</b> that reads this file will be defined as follows:</p><pre class=\"brush: js\">XmlListModel{<br /> id: xmlTestListModel<br /> source: "listModel.xml"<br /> query: "/listModel/item"<br /> XmlRole{name: "name"; query: "name/string()" }<br /> XmlRole{name: "size"; query: "size/string()" }<br /> XmlRole{name: "desc"; query: "desc/string()" }<br />}</pre><p>I give the element the location where to look for the file, and the XPath to look for individual items. Next, I define all the tags I want to read into the model - in this case, name, size and description, but there can be more. The model will parse the XML file and read all this information, and if I want to use it or not - it's completely up to me. Next, I'll do something with the delegate to show that its activity is not limited to displaying lines of text, it is capable of more complex behaviour. Before that, a quick note about the <b>section</b> property of the ListView: it allows the list to be separated into different parts, and the sections can have a delegate specified. Additionally, QML allows breaking the code into multiple files. I will add the file called SectionHeading.qml and specify the delegate for the section in the following manner:</p><pre class=\"brush: js\">import QtQuick 1.0<br /><br />Component {<br />    id: sectionHeading<br />    Rectangle {<br />        width: listViewRect.width<br />        height: childrenRect.height<br />        color: "lightsteelblue"<br /><br />        Text {<br />            text: section<br />            font.bold: true<br />        }<br />    }<br />}</pre><p>This delegate displays the section as the rectangle with a background colour, and displays the text that is defined in the variable section, in bold. To reference this delegate I can use the QML file name: <b>section.delegate: SectionHeading{}</b>. At this point the "desc" property from the XML file is not used anywhere - but the XmlListModel already knows it and I can use it later. Here is the full code after making all these modifications:</p><pre class=\"brush: js\">import QtQuick 1.0<br /><br />Rectangle{<br /><br />    id: main<br />    color:  "lightGrey"<br />    property int rectWidth:  480<br />    property int rectHeight:  480<br /><br />    width:  rectWidth<br />    height: rectHeight<br /><br />    Rectangle{<br />        id: listViewPanel<br />        width: rectWidth/3<br />        height: rectHeight<br />        x: 0<br />        y: 0<br />        border.color: "black"<br />        color: "green"<br />        border.width: 1<br /><br />        Text{<br />            text: "Left panel"<br />        }<br /><br />        Rectangle{<br />            id: listViewRect<br />            state: "list"<br />            anchors.fill: parent<br />            width: parent.width<br />            height: parent.height<br />            anchors.margins: 15<br /><br />            XmlListModel{<br />                id: xmlTestListModel<br />                source: "listModel.xml"<br />                query: "/listModel/item"<br />                XmlRole{name: "name"; query: "name/string()" }<br />                XmlRole{name: "size"; query: "size/string()" }<br />                XmlRole{name: "desc"; query: "desc/string()" }<br />            }<br /><br />            ListView{<br />                id: listView<br /><br />                width: parent.width<br />                height:parent.height<br />                anchors.top: parent.top<br />                anchors.bottom: parent.bottom<br /><br />                model:  xmlTestListModel<br />                delegate: Text{text: name}<br /><br />                section.property: "size"<br />                section.criteria: ViewSection.FullString<br />                section.delegate: SectionHeading{}<br />            }<br />        }<br />    }<br /><br />    Rectangle{<br />        id: detailsPanel<br />        width: parent.width*2/3<br />        height: parent.height*2/3<br />        x: parent.width/3<br />        y: 0<br />        border.color: "black"<br />        color: "yellow"<br />        border.width: 1<br /><br />        Text{<br />            text:  "Details panel"<br />        }<br />    }<br /><br />    Rectangle{<br />        id: loggingPanel<br />        width:  parent.width*2/3<br />        height: parent.height/3<br />        border.color: "black"<br />        border.width: 1<br />        x: parent.width/3<br />        y: parent.height*2/3<br />        color: "blue"<br /><br />       Text{<br />           text: "Logging panel"<br />       }<br />    }<br />}</pre><p>The ListView is drawn inside a Rectangle. The XmlListModel then parses the XML file specified. The delegate for the ListView only displays the "name" property from the XML file for each item. The "size" property is assigned to the section. It is passed to the section.delegate as a parameter, which then displays it in bold, inside a Rectangle which has lightsteelblue background colour. The end result of the application is displayed below.</p><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://2.bp.blogspot.com/-_0UYsMhZXQE/T1U169aDo_I/AAAAAAAAAsg/o94gsUmrhT4/s1600/1.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 287px; height: 320px;\" src=\"http://2.bp.blogspot.com/-_0UYsMhZXQE/T1U169aDo_I/AAAAAAAAAsg/o94gsUmrhT4/s320/1.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5716534589049250802\" /></a><p align="center">The Example Application</p><p>References:</p><a href=\"http://doc.qt.nokia.com/4.7-snapshot/qml-listview.html">QML ListView Element</a><br/><a href=\"http://qt-project.org/doc/qt-4.8/qml-xmllistmodel.html">QML XmlListModel Element</a><br/><a href=\"http://qt-project.org/doc/qt-4.8/declarative-modelviews-listview-sections.html">Models and Views: Sections ListView Example</a><br/>

 */ 

public const string content_04032012_b = ""; 
public const string content_04032012_r = ""; 

 /* 
<p>Qt is a framework for developing software with a GUI (and other software, too). It uses C++. QML (Qt Meta Language) is a declarative language for developing UI, and is based on JavaScript. I'll be using QML to build a prototype of a UI for a certain device. For that purpose, I'll be using Qt Creator that is installed on the Ubuntu 11.10. There are some new experiences here. I'll move on to connecting QML applications with C++ plugins later, but for now just some plain QML.</p><p>To create a simple QML project, I select <b>File -> New File or Project</b> from Qt Creator menu. From Projects I select <b>Qt Quick Project</b> and <b>Qt Quick UI</b> on the right.</p><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://4.bp.blogspot.com/-Jvy_eii1dpQ/T1PalMYaXuI/AAAAAAAAAr8/PHeROfEfwDI/s1600/1.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 281px;\" src=\"http://4.bp.blogspot.com/-Jvy_eii1dpQ/T1PalMYaXuI/AAAAAAAAAr8/PHeROfEfwDI/s320/1.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5716152684576923362\" /></a><p align="center">New Qt Creator Project</p><p>Next I select the location for the project files and when I'm done, the project contains only one qml file and a project file with the extension "qmlproject" which I do not need to know much at that early stage. The qml file contains a simple "Hello World" application.</p><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://2.bp.blogspot.com/-zHnwyQ3wzOI/T1PalaC__xI/AAAAAAAAAsI/mfNvjXsHY6U/s1600/2.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 135px;\" src=\"http://2.bp.blogspot.com/-zHnwyQ3wzOI/T1PalaC__xI/AAAAAAAAAsI/mfNvjXsHY6U/s320/2.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5716152688245210898\" /></a><p align="center">Qt Creator Environment</p><p>Compared to my experience, QML appears to be somewhat similar to WPF, considering that I define the layout with the declarative part and then can apply scripts additionally to provide extra functionality. In this first post, I'll only look at some of the most basic layout elements. I'm starting with the UI that has three panels: the left panel takes up one third of the space, and the right side is divided into the top and bottom parts, the bottom being one third of the vertical space. The screen size is hard-coded at this point.</p><p>The most basic element is a <b>Rectangle</b>. It is just that - a UI element of a rectangular shape. It can be filled with a color and can hold other UI elements. For example, it can hold a <b>Text</b> element which is, essentially, a label.</p><pre class=\"brush:js\">Rectangle{<br /> id: listViewPanel<br /> width: 100<br /> height: 100<br /> x: 0<br /> y: 0<br /> border.color: "black"<br /> color: "green"<br /> border.width: 1<br /><br /> Text{<br />  text: "Left panel"<br /> }<br />}</pre><p>The <b>id</b> is optional, but will be used later to reference the element. Other parameters are self-explanatory.</p><p>Here is the first QML application - just a few rectangles that take up the screen.</p><pre class="brush:js<br />">import QtQuick 1.0<br /><br />Rectangle{<br /><br /> id: main<br /> color:  "lightGrey"<br /> property int rectWidth:  480<br /> property int rectHeight:  480<br /><br /> width:  rectWidth<br /> height: rectHeight<br /><br /> Rectangle{<br />  id: listViewPanel<br />  width: rectWidth/3<br />  height: rectHeight<br />  x: 0<br />  y: 0<br />  border.color: "black"<br />  color: "green"<br />  border.width: 1<br /><br />  Text{<br />   text: "Left panel"<br />  }<br /> }<br /><br /> Rectangle{<br />  id: detailsPanel<br />  width: parent.width*2/3<br />  height: parent.height*2/3<br />  x: parent.width/3<br />  y: 0<br />  border.color: "black"<br />  color: "yellow"<br />  border.width: 1<br /><br />  Text{<br />   text:  "Details panel"<br />  }<br /> }<br /><br /> Rectangle{<br />  id: loggingPanel<br />  width:  parent.width*2/3<br />  height: parent.height/3<br />  border.color: "black"<br />  border.width: 1<br />  x: parent.width/3<br />  y: parent.height*2/3<br />  color: "blue"<br /><br />    Text{<br />     text: "Logging panel"<br />    }<br /> }<br />}</pre><p>Rectangle <b>main</b> is the parent element, and defines the size of the screen. It defines two properties, which are screen height and width and are used by child elements to calculate their own sizes. A child element can access the parent's properties by using <b>parent.property</b> syntax (i.e. <b>parent.height</b>). Each child rectangle has a <b>Text</b> element inside, just to provide some visual feedback.</p><p>Here's the result of executing the application:</p><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://3.bp.blogspot.com/-6lDqP7GOKc4/T1PalbnUCII/AAAAAAAAAsQ/1lSwbmmJHNo/s1600/3.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 289px; height: 320px;\" src=\"http://3.bp.blogspot.com/-6lDqP7GOKc4/T1PalbnUCII/AAAAAAAAAsQ/1lSwbmmJHNo/s320/3.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5716152688665954434\" /></a><p align="center">First QML Application</p><p>References:</p><a href=\"http://qt.nokia.com/">Qt - Cross-platform application and UI framework</a><br/><a href=\"http://doc.qt.nokia.com/4.7-snapshot/qml-rectangle.html">QML Rectangle Element</a>

 */ 

public const string content_26022012_b = ""; 
public const string content_26022012_r = ""; 

 /* 

<p>I started with the goal of creating a custom XML file which would be somewhat a "data extract" across a set of files which, in my case, will be located in the same folder. However, understanding how web scripts work and writing a functional web script that provides some meaningful output took me a bit longer than I expected (about 6 hours total, but now I know a lot about luceneSearch function and Alfresco AVM Store API), so at least I got to the point where I can list all the files in the folder and render this data in the HTML file.</p><p>The web script required 3 files to run: a definition file, a javaScript file which gets the folder details from the AVM store and a ftl (FreeMarker template) file which renders HTML. It is also possible to render output in JSON format (and other formats, I guess) but I did not get there yet. The files are called <b>items.get.desc.xml</b>, <b>items.get.js</b> and <b>items.get.html.ftl</b>.</p><p>I placed these files into the Alfresco "classes" path, in the subfolder "items" under "webscripts". The full path on my PC is</p><p>C:\Alfresco\tomcat\webapps\alfresco\WEB-INF\classes\alfresco\extension\templates\webscripts\items</p><p>And the full path to the actual files I'm interested in is</p><p>Y:\hostingitems\HEAD\DATA\www\avm_webapps\ROOT\items</p><p>where Y is the drive I mapped AVM repository to. "hostingitems" is the name of the web project where files were created. Currently I'm getting back all files in the folder, so if I want to sort out only XML files I'll need to additional logic.</p><p><b>items.get.desc.xml</b> is a web script description file. Basically, it tells where the script is located and what it does.</p><pre class=\"brush:xml\">&lt;webscript&gt;<br />&lt;shortname&gt;Get all items&lt;/shortname&gt;<br />&lt;description&gt;Returns a list of items&lt;/description&gt;<br />&lt;url&gt;/items&lt;/url&gt;<br />&lt;url&gt;/items.json&lt;/url&gt;<br />&lt;url&gt;/items.html&lt;/url&gt;<br />&lt;format default="json"&gt;extension&lt;/format&gt;<br />&lt;authentication&gt;guest&lt;/authentication&gt;<br />&lt;transaction&gt;none&lt;/transaction&gt;<br />&lt;/webscript&gt;</pre><p><b>items.get.js</b> returns the AVM store and the particular folder. The "s" variable is the web project name, and the "p" variable is the path to the folder. They can be passed to the web script as arguments rather than being hardcoded, but again that's a future "TODO" task.</p><pre class=\"brush:js\">script: {<br />var s = "hostingitems";<br />var p = "/www/avm_webapps/ROOT/items/";<br /><br />// get avm node<br />var store = avm.lookupStore(s);<br />if (store == null || store == undefined) <br />{<br /> status.code = 404;<br /> status.message = "Store " + s + " not found.";<br /> status.redirect = true;<br /> break script;<br />}<br />// get items data folder<br />var itemsNode = avm.lookupNode(s + ":" + p);<br />if (itemsNode == undefined) <br />{<br /> status.code = 404;<br /> status.message = "Could not find items folder. Path:" + p + " Store:" + s;<br /> status.redirect = true;<br /> break script;<br />}<br /><br />// set store and folder in the model<br />model.store = store;<br />model.folder = itemsNode;<br />}</pre><p><b>items.get.html.ftl</b> is a template that renders html. Dead simple, it only loops through the folder contents and populates some settings of the files into an html table.</p><pre class=\"brush:xml\">&lt;#assign datetimeformat="EEE, dd MMM yyyy HH:mm:ss zzz"&gt;<br />&lt;html&gt;<br />&lt;head&gt;<br /> &lt;title&gt;Items in folder: ${folder.displayPath}/${folder.name}&lt;/title&gt;<br />&lt;/head&gt;<br />&lt;body&gt;<br />&lt;p&gt;&lt;a href="${url.serviceContext}/sample/avm/stores"&gt;AVM Store&lt;/a&gt;: ${store.id}&lt;/p&gt;<br />&lt;p&gt;AVM Folder: ${folder.displayPath}/${folder.name}&lt;/p&gt;<br />&lt;table&gt;<br />&lt;#list folder.children as child&gt;<br /> &lt;tr&gt;<br />  &lt;td&gt;${child.properties.creator}&lt;/td&gt;<br />  &lt;td&gt;${child.size}&lt;/td&gt;<br />  &lt;td&gt;${child.properties.modified?datetime}&lt;/td&gt;<br />  &lt;td&gt;<br />   &lt;a href="${url.serviceContext}/api/node/content/${child.nodeRef.storeRef.protocol}<br />   /${child.nodeRef.storeRef.identifier}/${child.nodeRef.id}/${child.name?url}"&gt;${child.name}<br />   &lt;/a&gt;<br />  &lt;/td&gt;<br /> &lt;/tr&gt;<br />&lt;/#list&gt;<br />&lt;/table&gt;<br />&lt;/body&gt;<br />&lt;/html&gt;</pre><p>Now when my files are ready I can go and check the Alfresco web scripts by logging in and naivgating to<br/>http://localhost:8080/alfresco/service/index<br/><br />I currently have 463 web scripts.</p><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://1.bp.blogspot.com/-SCVJ0otMvJM/T0qgIOhod_I/AAAAAAAAArM/Q-iDFqA0fSA/s1600/1.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 160px; height: 320px;\" src=\"http://1.bp.blogspot.com/-SCVJ0otMvJM/T0qgIOhod_I/AAAAAAAAArM/Q-iDFqA0fSA/s320/1.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5713555140471453682\" /></a><p align="center">Web Scripts Home</p><p>Browse all button shows me the list - fortunately the user defined web scripts are on the top so I do not have to scroll the whole list.</p><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://1.bp.blogspot.com/-7Y93hcRvRHk/T0qgIfLjLCI/AAAAAAAAArY/Vk_7BELeoI4/s1600/2.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 226px;\" src=\"http://1.bp.blogspot.com/-7Y93hcRvRHk/T0qgIfLjLCI/AAAAAAAAArY/Vk_7BELeoI4/s320/2.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5713555144942234658\" /></a><p align="center">Web Script Details</p><p>This data obviously comes from my description file. This would be displayed even if the script itself results with an error. For example, if I make a syntax error in my javaScript and navigate to the alfresco/service/items.html, I will get an error message.</p><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://3.bp.blogspot.com/-rzdG3O3rCGk/T0qgIiuI9AI/AAAAAAAAArk/GOado2esInY/s1600/3.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 144px;\" src=\"http://3.bp.blogspot.com/-rzdG3O3rCGk/T0qgIiuI9AI/AAAAAAAAArk/GOado2esInY/s320/3.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5713555145892623362\" /></a><p align="center">Web Script Error</p><p>Fortunately, the error messages have been mostly helpful - in this case, it's just a missing closing bracket after an if statement. So, I fix it, save js file, go back to web scripts page, press "Refresh web scripts" to pick up my changes and try again. And there's my list of files generated by a web script.</p><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://4.bp.blogspot.com/-U205P181Lug/T0qgI3yQZBI/AAAAAAAAArw/yzl2XzIdVvY/s1600/4.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 206px; height: 320px;\" src=\"http://4.bp.blogspot.com/-U205P181Lug/T0qgI3yQZBI/AAAAAAAAArw/yzl2XzIdVvY/s320/4.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5713555151547032594\" /></a><p align="center">Web Script Results</p><p>Reference:</p><p><a href=\"http://www.packtpub.com/alfresco-developer-guide/book">Alfresco Developer Guide</a><p>
 */ 

public const string content_23022012_b = ""; 
public const string content_23022012_r = ""; 

 /* 
<p><a href=\"http://www.google.com/patents/US20060063265">Advance programmed sample processing system and methods of biological slide processing</a></p><p>"A local area network for this type of system may also include features such as but not limited to: an Ethernet element, a token ring element, an arcnet element, a fiber distributed data interface element, an industry specification protocol, a bluetooth-based element <u>(named but not contemporary to King Harald Bluetooth of Denmark in the mid-tenth century!)</u>, a telecommunications industry specification" ...</p><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://1.bp.blogspot.com/-ezAJ3WIMvrM/T0a-VV-7-II/AAAAAAAAAoY/P9SODD5-MnQ/s1600/bluetooth.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 153px;\" src=\"http://1.bp.blogspot.com/-ezAJ3WIMvrM/T0a-VV-7-II/AAAAAAAAAoY/P9SODD5-MnQ/s320/bluetooth.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5712462451253704834\" /></a>

 */ 

public const string content_14022012_b = ""; 
public const string content_14022012_r = ""; 

 /* 
<p>A small exercise in restricting access to certain actions with content.</p><p>Create at least two users. To create users, login as admin (the only account that has the rights to manage users). Navigate to Company Home -> User Homes. In the top bar, select "Administration Console".</p><a href=\"http://1.bp.blogspot.com/-NSd2vY5IGDI/TzpGduWm1oI/AAAAAAAAAnY/J7pIYAHafxM/s1600/6.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 27px;\" src=\"http://1.bp.blogspot.com/-NSd2vY5IGDI/TzpGduWm1oI/AAAAAAAAAnY/J7pIYAHafxM/s320/6.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5708952954118526594\" /></a><p align="center">Link to Administration Console</p><p>In the Administrative Console, select Manage System Users. In the top ride part of the screen, select "Create User". The required fields are First Name, Last Name and Email. Other fields are optional. Select "Next".</p><a href=\"http://1.bp.blogspot.com/-vcLJHHypGlo/TzpGdyV1VAI/AAAAAAAAAno/bdfLSyWTvA8/s1600/7.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 177px;\" src=\"http://1.bp.blogspot.com/-vcLJHHypGlo/TzpGdyV1VAI/AAAAAAAAAno/bdfLSyWTvA8/s320/7.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5708952955189023746\" /></a><p align="center">New User Wizard</p><p>Assign the username and password and select Finish. Create another user in the same manner. Now we can assign these users to different roles and check if it makes any difference. Navigate to Company Home -> Web Projects. Select a Web Project. From Actions, select “Invite Web Project Users”. On the “Invite Web Project Users” screen, add one user as the Content Contributor, and another as a Content Reviewer. Click “Next”.</p><a href=\"http://1.bp.blogspot.com/-O74lQ8exrDY/TzpGecZLU5I/AAAAAAAAAnw/Nk-nypY4PTg/s1600/3.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 301px;\" src=\"http://1.bp.blogspot.com/-O74lQ8exrDY/TzpGecZLU5I/AAAAAAAAAnw/Nk-nypY4PTg/s320/3.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5708952966477337490\" /></a><p align="center">Invite Web Project Users</p><p>No need to sending emails at this stage. On the "Notify Users" screen, leave default option as "No" and select "Next". On the summary screen, review the information, use "Back" to make changes or select "Finish". Note that there are now 3 users working on the project: admin and the two users who were just invited.</p><a href=\"http://1.bp.blogspot.com/-L9rg0mC1eqA/TzpGejwSRyI/AAAAAAAAAn8/49MBVLZcoCM/s1600/4.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 206px;\" src=\"http://1.bp.blogspot.com/-L9rg0mC1eqA/TzpGejwSRyI/AAAAAAAAAn8/49MBVLZcoCM/s320/4.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5708952968453310242\" /></a><p align="center">Staging Sandbox</p><p>Log off as admin and log in as the Content Reviewer. Navigate to Company Home -> Web Projects, select the web project where user was invited. Note that the “Web Forms” section is not present in the user sandbox, preventing him from adding or modifying content to the web project.</p><a href=\"http://2.bp.blogspot.com/-KoXBLpWttHw/TzpGe-g6GEI/AAAAAAAAAoE/7magu4tEFTM/s1600/5.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 232px;\" src=\"http://2.bp.blogspot.com/-KoXBLpWttHw/TzpGe-g6GEI/AAAAAAAAAoE/7magu4tEFTM/s320/5.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5708952975636568130\" /></a><p align="center">No Modified Items</p><p>Log off and log on as the Content Contributor. Navigate to the same project and verify that the “Web Forms” section is present in the sandbox and the user can add and modify content.</p>

 */ 

public const string content_12022012_b = ""; 
public const string content_12022012_r = ""; 

 /* 
<p>Alfresco includes two types of workflow out of the box. The Simple Workflow is content-oriented, and the Advanced Workflow is task-oriented. Out of the box, the Simple Workflow has only two steps, one for approval and one for rejection.</p><p>Here is one way to assign a Simple Workflow to the Web Form, if it is associated with a Web Project.</p><p>Navigate to Company Home -> Web Projects, select the web project and choose Actions -> Edit Web Project Settings in the top right part of the screen. Select "Next" until you get to the "Configure Web Forms" screen. If the web form does not have a workflow associated with it, a small exclamation mark will be displayed.</p><a href=\"http://2.bp.blogspot.com/-N4WnX2RUF20/Tzeetayv8jI/AAAAAAAAAls/N5CqhV6IjNI/s1600/3.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 52px;\" src=\"http://2.bp.blogspot.com/-N4WnX2RUF20/Tzeetayv8jI/AAAAAAAAAls/N5CqhV6IjNI/s320/3.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5708205555838874162\" /></a><p align="center">Workflow not Configured</p><p>Select "Configure Workflow". On the "Configure Workflow", use "Search" option to display users. Choose a user which will be reviewing and approving content and select "Add to List".</p><a href=\"http://3.bp.blogspot.com/-2XH2gGPI2hY/Tzeetk4LvgI/AAAAAAAAAl4/trLSam11ikA/s1600/4.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 270px; height: 320px;\" src=\"http://3.bp.blogspot.com/-2XH2gGPI2hY/Tzeetk4LvgI/AAAAAAAAAl4/trLSam11ikA/s320/4.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5708205558546021890\" /></a><p align="center">Add Users to Workflow</p><p>Click "OK" on the right to complete the workflow configuration. The exclamation mark should no longer be displayed. Select "Next" to get to "Configure Workflow" screen. There should only be one workflow available, "Web Site Submission". Select "Add to list". Once again, the exclamation mark will be displayed.</p><a href=\"http://1.bp.blogspot.com/-K58eh2TP88U/Tzeet-YsGRI/AAAAAAAAAmE/VLLPgAh94sM/s1600/5.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 139px;\" src=\"http://1.bp.blogspot.com/-K58eh2TP88U/Tzeet-YsGRI/AAAAAAAAAmE/VLLPgAh94sM/s320/5.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5708205565393246482\" /></a><p align="center">Configure Web Project Workflow</p><p>Use the "Configure Workflow" in the same way as was done for a web form. Select "Finish" to save changes. Now it is time to create some content and check what the workflow does. On the Web Project screen, select "Create Content" against the web form for which the workflow was just configured. Create some content and on the last screen check the "Submit these X files when wizard finishes". Select "Finish". (I'm not exactly sure if that's the correct way to go - did I have to configure workflow twice, first on the web form and then on the web project? Maybe not. I think, the way to avoid it is to add workflow at the time of creation, both on a project and a form. That would likely be the best practice.)</p><a href=\"http://2.bp.blogspot.com/-c6KCzI-Vouc/TzeeuH10sHI/AAAAAAAAAmM/fRZW3_sfnUk/s1600/6.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 157px;\" src=\"http://2.bp.blogspot.com/-c6KCzI-Vouc/TzeeuH10sHI/AAAAAAAAAmM/fRZW3_sfnUk/s320/6.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5708205567931363442\" /></a><p align="center">Submit Items When Wizard Finishes</p><p>Now the wizard asks to provide some more details, so fill in the Label and Description for the items being submitted. Select "OK" to submit.</p><a href=\"http://2.bp.blogspot.com/-3VSNe1B2SXM/TzefAkOa48I/AAAAAAAAAmc/jU9fTRYmvc8/s1600/7.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 267px; height: 320px;\" src=\"http://2.bp.blogspot.com/-3VSNe1B2SXM/TzefAkOa48I/AAAAAAAAAmc/jU9fTRYmvc8/s320/7.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5708205884788368322\" /></a><p align="center">Submit Items</p><p>Next, log out from the user who created content and log in as a user who was specified as a Content Manager. "My Alfresco Dashboard" will be displayed, where under "My Tasks To Do" the task to review the submission should appear. Select "Manage Task" to review the submission.</p><a href=\"http://3.bp.blogspot.com/-dAwz4P_XY-A/TzefA0wKHEI/AAAAAAAAAmk/M4iPP8xPUuA/s1600/8.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 109px;\" src=\"http://3.bp.blogspot.com/-dAwz4P_XY-A/TzefA0wKHEI/AAAAAAAAAmk/M4iPP8xPUuA/s320/8.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5708205889224842306\" /></a><p align="center">My Tasks To Do</p><p>Let's first reject the submission. Provide the user with some helpful comment and select "Reject" on the right.</p><a href=\"http://4.bp.blogspot.com/-Rg0jajsr0GM/TzefA967yrI/AAAAAAAAAm0/CEFpJhG7zWs/s1600/9.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 292px; height: 320px;\" src=\"http://4.bp.blogspot.com/-Rg0jajsr0GM/TzefA967yrI/AAAAAAAAAm0/CEFpJhG7zWs/s320/9.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5708205891685960370\" /></a><p align="center">Review Workflow Task</p><p>Now you should be back on the "My Alfresco Dashboard" and you can notice that there are no more entries under "My Tasks To Do". This means that the hard job of the content reviewer is done for now. Log off as this user and log back on as the content creator. Now you'll be on the "My Alfresco Dashboard" and you'll see that you have a task to do, which has a "Rejected" type. Use "Manage Task" to fix this! On the "Manage Task" screen you can see joe's comment, so select "Edit" icon to modify the content. Make the changes and save them. Now on the "Manage Task" screen, select "Resubmit for Review" on the right. Logout as this user and log back on as the content reviewer. There's a task now in the "My Tasks To Do", with a small (2), which tells me how many times the content was submitted. Choose "Manage Task".</p><a href=\"http://3.bp.blogspot.com/-0fxe-1DWYm4/TzefBSU4WzI/AAAAAAAAAm8/rzGTmemysws/s1600/10.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 38px;\" src=\"http://3.bp.blogspot.com/-0fxe-1DWYm4/TzefBSU4WzI/AAAAAAAAAm8/rzGTmemysws/s320/10.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5708205897163496242\" /></a><p align="center">My Tasks To Do - 2</p><p>Now the content looks better (let's at least assume that) and the reviewer selects "Approve". Again, the task is gone - log out one last time and log back on as the content creator. There are no more tasks too, but navigate to the Company Home -> Web Projects, select the web project and expand "Recent Snapshots". Now there is the content there which can be deployed, as described in a previous post - feel free to deploy if you wish.</p><a href=\"http://1.bp.blogspot.com/-G0Bpbf53fCw/TzefBkDtbnI/AAAAAAAAAnM/hH-F5EdkS6M/s1600/11.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 89px;\" src=\"http://1.bp.blogspot.com/-G0Bpbf53fCw/TzefBkDtbnI/AAAAAAAAAnM/hH-F5EdkS6M/s320/11.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5708205901923315314\" /></a><p align="center">Recent Snapshots</p>

 */ 

public const string content_09022012_b = ""; 
public const string content_09022012_r = ""; 

 /* 
<p>Basic static reports can be generated in Alfresco by using XSLT (or FreeMarker) to build the static pages. As an example, I have created a simple list of all items generated by a web form. One approach would be to create a separate web form for this task. In this case a list can be generated an any time by using this form to create content. The approach I used requires slightly less work (no new web form is created), but also slightly less flexibility (an index is created only when a new item is created). For a start, I created a web form that adds simple items, using the following XSL file:</p><pre class="brush: xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br />&lt;xsl:stylesheet version="1.0" xmlns:xhtml="http://www.w3.org/1999/xhtml"<br /> xmlns:xsl="http://www.w3.org/1999/XSL/Transform"<br /> xmlns:fn="http://www.w3.org/2005/02/xpath-functions"<br /> exclude-result-prefixes="xhtml"&gt;<br /><br /> &lt;xsl:output method="html" encoding="UTF-8" indent="yes" doctype-public="-//W3C//DTD XHTML 1.0 Transitional//EN" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd" /&gt;<br /><br /> &lt;xsl:template match="/"&gt;<br />  &lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"&gt;<br />  &lt;head&gt;<br />  &lt;/head&gt;<br />  &lt;body&gt;<br />   &lt;div id="main_content"&gt;<br />    &lt;h1&gt;Item ID: &lt;xsl:value-of select="/item/id"/&gt;&lt;/h1&gt;  <br />    &lt;p&gt;Item Name: &lt;xsl:value-of select="/item/name"/&gt;&lt;/p&gt;<br />    &lt;p&gt;Expiry Date:&lt;xsl:value-of select="/item/expiryDate"/&gt;&lt;/p&gt;<br />   &lt;/div&gt;<br />  &lt;/body&gt;<br />  &lt;/html&gt;<br /> &lt;/xsl:template&gt;<br />&lt;/xsl:stylesheet&gt;</pre><p>Next step is to create an XSL template to redner an HTML list of items. This is the simplest I could come up with:</p><pre class="brush: xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br />&lt;xsl:stylesheet version="1.0" xmlns:xhtml="http://www.w3.org/1999/xhtml"<br /> xmlns:xsl="http://www.w3.org/1999/XSL/Transform"<br /> xmlns:fn="http://www.w3.org/2005/02/xpath-functions"<br /> exclude-result-prefixes="xhtml"&gt;<br /><br />&lt;xsl:output method="html" encoding="UTF-8" indent="yes" doctype-public="-//W3C//DTD XHTML 1.0 Transitional//EN" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd" /&gt;<br /><br />&lt;xsl:template match="/"&gt;<br /><br />&lt;xsl:variable name="itemList" select="alf:parseXMLDocuments('item', '/items')"/&gt;<br /><br /> &lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"&gt;<br /> &lt;head&gt;<br /> &lt;/head&gt;<br /> &lt;body&gt;<br />  &lt;ul&gt;<br />   &lt;xsl:for-each select="$itemList"&gt;<br />    &lt;xsl:variable name="selectedVar"&gt;<br />     &lt;xsl:choose&gt;<br />     &lt;xsl:when test="position() = 1"&gt;selected&lt;/xsl:when&gt;<br />     &lt;xsl:otherwise&gt;leaf&lt;/xsl:otherwise&gt;<br />     &lt;/xsl:choose&gt;<br />    &lt;/xsl:variable&gt;<br />    &lt;li class="{$selectedVar}"&gt;<br />     &lt;xsl:variable name="fileNameFixed"&gt;<br />      &lt;xsl:call-template name="fixFileName"&gt;<br />       &lt;xsl:with-param name="fileName"&gt;<br />        &lt;xsl:value-of select="@alf:file_name" /&gt;<br />       &lt;/xsl:with-param&gt;<br />      &lt;/xsl:call-template&gt;<br />     &lt;/xsl:variable&gt;<br />     &lt;a href="{$fileNameFixed}"&gt;&lt;xsl:value-of select="id" /&gt;&lt;span&gt;&nbsp;&lt;xsl:value-of select="name" /&gt;&lt;/span&gt;&lt;/a&gt;<br />    &lt;/li&gt;<br />   &lt;/xsl:for-each&gt;<br />  &lt;/ul&gt;<br /> &lt;/body&gt;<br /> &lt;/html&gt;<br />&lt;/xsl:template&gt;<br /><br />&lt;xsl:template name="fixFileName"&gt;<br /> &lt;xsl:param name="fileName" /&gt;<br />  &lt;xsl:value-of select="concat(substring-before($fileName, '.xml'), '.html')" /&gt;<br />&lt;/xsl:template&gt;<br />&lt;/xsl:stylesheet&gt;</pre><p>The template calls parseXMLDocuments function of AVMRemote API to get a list of items. Note the parameters. First parameter is the name of the web form that was used to generate items. If the parameter does not match to the web form name exactly, it is likely that an empty list will be generated. I spent some time struggling with that! The second parameter is just the location where to get items from. As I understand, it is optional and the whole repository may be searched if the parameter is omitted. Next the template goes through each item and generates a link to it. The fixFileName function only replaces the file extension.</p><p>When the template is complete, navigate to Data Dictionary > Web Forms > Edit Web Form (for the desired web form). Select "Next" to get to the Configure Templates dialog. Locate the saved template and set the correct output path, i.e. “/${webapp}/items/index.html”. Select "Add to list", then "Next" and "Finish". As the result, the web form will create an "Item" each time it is used. Also, it will recreate the "index.html" page, which will now contain the newly added item.</p><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://2.bp.blogspot.com/-cjsMUS5v-Js/T0qeGd30vxI/AAAAAAAAArA/M2c5d39S9ks/s1600/1_1.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 303px;\" src=\"http://2.bp.blogspot.com/-cjsMUS5v-Js/T0qeGd30vxI/AAAAAAAAArA/M2c5d39S9ks/s320/1_1.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5713552911208070930\" /></a><p>This is the sample HTML generated by the web form.</p><pre class="brush: xml">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br />&lt;html xmlns="http://www.w3.org/1999/xhtml" xmlns:fn="http://www.w3.org/2005/02/xpath-functions" xml:lang="en" lang="en"&gt;<br /> &lt;head /&gt;<br /> &lt;body&gt;<br />  &lt;ul&gt;<br />   &lt;li class="selected"&gt;&lt;a href="Item7.html"&gt;7&lt;span&gt;amazing achievement&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;<br />   &lt;li class="leaf"&gt;&lt;a href="Item6.html"&gt;6&lt;span&gt;a real item&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;<br />   &lt;li class="leaf"&gt;&lt;a href="item8.html"&gt;8&lt;span&gt;Improvement&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;<br />  &lt;/ul&gt;<br /> &lt;/body&gt;<br />&lt;/html&gt;<br /></pre><p>This is the simples example I managed to come up with. Another reporting option, which is more advanced, is to writh web scripts to define a REST API for the Alfresco database content. Then the API is used to create, read and delete data in the backend repository and return responses in HTML, XML or JSON.</p><p><b>Reference:</b></p><p><a href=\"http://www.amazon.com/Alfresco-Developer-Guide-ebook/dp/B0058TIC76/">Alfresco Developer Guide</a></p><p><a href=\"http://wiki.alfresco.com/wiki/WCM_roles">Web Content Management Roles</a></p>

 */ 

public const string content_06022012_b = ""; 
public const string content_06022012_r = ""; 

 /* 
<p>Alfresco uses the Web Forms to capture content and store it as XML in the repository. Web forms allow creation of structured XML based on the schema definition (XSD). An XSLT can be associated with the Web Form to convert Alfresco web form XML into other formats. Creating a web form is a good starting point for creating web content.</p><p>Run Alfresco Explorer, login as admin and navigate to Company Home > Data Dictionary > Web Forms. Select Create Web Form from the Create menu. The Create Web Form Wizard will start.</p><a href=\"http://1.bp.blogspot.com/-mBa_BVb0itQ/TzDTdOo6XBI/AAAAAAAAAjc/_JfH5XvgmlY/s1600/1.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 53px;\" src=\"http://1.bp.blogspot.com/-mBa_BVb0itQ/TzDTdOo6XBI/AAAAAAAAAjc/_JfH5XvgmlY/s320/1.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5706293226977778706\" /></a><p>I'll use this web form to create "items". The item has an id, a name and an expiry date. I prepared a simple XML schema definition that I will provide to the web form so it could later give me a user friendly way to create content.</p><pre class="brush: xml">&lt;?xml version="1.0"?&gt;<br />&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"<br /> xmlns:alf="http://www.alfresco.org"<br /> elementFormDefault="qualified"&gt;<br /><br /> &lt;xs:element name="item"&gt;<br />  &lt;xs:complexType&gt;<br />   &lt;xs:sequence&gt;<br />    &lt;xs:element name="id" type="xs:integer"/&gt;<br />    &lt;xs:element name="name" type="xs:normalizedString"/&gt;<br />    &lt;xs:element name="expiryDate" type="xs:date"/&gt;<br />   &lt;/xs:sequence&gt;<br />  &lt;/xs:complexType&gt;<br /> &lt;/xs:element&gt;<br />&lt;/xs:schema&gt;</pre><p>I'm providing this schema on the Web Form Details. The "Output path pattern" defines where the items will be created in the project structure. /${webapp}/items/${name}.xml will create xml files in the "items" folder.</p><a href=\"http://3.bp.blogspot.com/-UE5Qxsnr8EQ/TzDTdSGvQzI/AAAAAAAAAjo/8RPI2UzM5_g/s1600/2.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 176px;\" src=\"http://3.bp.blogspot.com/-UE5Qxsnr8EQ/TzDTdSGvQzI/AAAAAAAAAjo/8RPI2UzM5_g/s320/2.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5706293227908186930\" /></a><p>Alfresco stores the item details in the xml form, but can easily render it into html if I provide a template. I prepared a very simple template.</p><pre class="brush: xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br />&lt;xsl:stylesheet version="1.0" xmlns:xhtml="http://www.w3.org/1999/xhtml"<br /> xmlns:xsl="http://www.w3.org/1999/XSL/Transform"<br /> xmlns:pr="http://www.my.com/corp/pr"<br /> xmlns:fn="http://www.w3.org/2005/02/xpath-functions"<br /> exclude-result-prefixes="xhtml pr fn"&gt;<br /><br /> &lt;xsl:output method="html" encoding="UTF-8" indent="yes" doctype-public="-//W3C//DTD XHTML 1.0 Transitional//EN" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd" /&gt;<br /><br /> &lt;xsl:template match="/"&gt;<br />  &lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"&gt;<br />  &lt;head&gt;<br />  &lt;/head&gt;<br />  &lt;body&gt;<br />   &lt;div id="main_content"&gt;<br />    &lt;h1&gt;Item ID: &lt;xsl:value-of select="/item/id"/&gt;&lt;/h1&gt;  <br />    &lt;p&gt;Item Name: &lt;xsl:value-of select="/item/name"/&gt;&lt;/p&gt;<br />    &lt;p&gt;Expiry Date:&lt;xsl:value-of select="/item/expiryDate"/&gt;&lt;/p&gt;<br />   &lt;/div&gt;<br />  &lt;/body&gt;<br />  &lt;/html&gt;<br /> &lt;/xsl:template&gt;<br />&lt;/xsl:stylesheet&gt;</pre><p>I could choose to store XML and HTML files in separate locations, but for now I would not bother. After filling in the details, I need to press "Add to list" so my template is saved with the form.</p><a href=\"http://2.bp.blogspot.com/-bIfrnh6315s/TzDT1tMBjZI/AAAAAAAAAkM/yjES2CIlFEw/s1600/3.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 194px;\" src=\"http://2.bp.blogspot.com/-bIfrnh6315s/TzDT1tMBjZI/AAAAAAAAAkM/yjES2CIlFEw/s320/3.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5706293647494974866\" /></a><p>I could create a workflow for review and approval of the changes, but for now I'll leave it till later and select "No not now" on the "Configure Workflow" screen. Last screen is just a review of the details and after selecting "Finish" my web form is created.</p><a href=\"http://2.bp.blogspot.com/-ypzwDFQzIuU/TzDT1-4QhUI/AAAAAAAAAkU/F5ChCY06kt4/s1600/4.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 209px;\" src=\"http://2.bp.blogspot.com/-ypzwDFQzIuU/TzDT1-4QhUI/AAAAAAAAAkU/F5ChCY06kt4/s320/4.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5706293652243907906\" /></a><p>Next I need a web project that will utilize my form. Navigate to Company Home > Web Projects and select Create Web Project in the Create menu. The Create Web Project Wizard will start.</p><a href=\"http://3.bp.blogspot.com/-rNeG-7eD4fM/TzDT2CVIrhI/AAAAAAAAAkk/nXycqUjgpKM/s1600/5.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 61px;\" src=\"http://3.bp.blogspot.com/-rNeG-7eD4fM/TzDT2CVIrhI/AAAAAAAAAkk/nXycqUjgpKM/s320/5.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5706293653170335250\" /></a><p>Fill in the details, fields are really freetext and Use as a template is not required. In step two, choose "Create a new empty Web Project". In step three, add a deployment receiver. I will be using my local PC, hence the 'localhost'. I also found out that I can not make the receiver to work unless I use port 50500 and specify a Target Name of 'avm'.</p><a href=\"http://1.bp.blogspot.com/-1HLVzgGNzSo/TzDT2aHNPgI/AAAAAAAAAkw/XFHFi5aYMjs/s1600/6.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 227px; height: 320px;\" src=\"http://1.bp.blogspot.com/-1HLVzgGNzSo/TzDT2aHNPgI/AAAAAAAAAkw/XFHFi5aYMjs/s320/6.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5706293659554364930\" /></a><p>In step four, there should be at least one web form listed in "Select Web Forms" - the one created earlier. Select "Add to list" to associate the web form to the web project. Further steps are about workflow and users - something that can be configured later. After the last step, select "Finish" and the web project is created.</p><a href=\"http://1.bp.blogspot.com/-fsqpyWVQd0E/TzDULa6VxdI/AAAAAAAAAk8/_SFgsatNVTs/s1600/7.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 114px;\" src=\"http://1.bp.blogspot.com/-fsqpyWVQd0E/TzDULa6VxdI/AAAAAAAAAk8/_SFgsatNVTs/s320/7.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5706294020546086354\" /></a><p>All is ready to generate some content for the project. Click on the name of the project and you will see the sandboxes for the project. There should be at least two: Local sandbox of the user who's logged in and the Staging Sandbox. The user sandbox should now have a web form which has an action "Create Content". That's what I'll do.</p><a href=\"http://3.bp.blogspot.com/-bTsMZbMlkZs/TzDULu5GRRI/AAAAAAAAAlI/DtVlUoOu5M0/s1600/8.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 149px;\" src=\"http://3.bp.blogspot.com/-bTsMZbMlkZs/TzDULu5GRRI/AAAAAAAAAlI/DtVlUoOu5M0/s320/8.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5706294025909585170\" /></a><p>I'll create my first item, so I'll call it item1 and specify Type as Content and Content Type as xml. Next step gives me a way to enter content details - based on my XSD, Alfresco gives me a smaller box to enter an integer, a longer box to enter a string and a date picker for a date. How cute.</p><a href=\"http://2.bp.blogspot.com/-m8RlHemrIyM/TzDULxPg9BI/AAAAAAAAAlY/pClQmDrpeIk/s1600/9.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 171px;\" src=\"http://2.bp.blogspot.com/-m8RlHemrIyM/TzDULxPg9BI/AAAAAAAAAlY/pClQmDrpeIk/s320/9.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5706294026540479506\" /></a><p>When I'm done, item1.xml and item1.html are created. I can view them if I choose "Browse Website" and navigate to "items" folder.</p><a href=\"http://4.bp.blogspot.com/-HdD6gqgyWzc/TzDUMX8AoNI/AAAAAAAAAlg/w4Xq36Bk7tU/s1600/10.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 34px;\" src=\"http://4.bp.blogspot.com/-HdD6gqgyWzc/TzDUMX8AoNI/AAAAAAAAAlg/w4Xq36Bk7tU/s320/10.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5706294036927652050\" /></a><p>Here's how my XML and HTML files look like - more or less the way I expected them to be.</p><a href=\"http://4.bp.blogspot.com/-xkFW3PrGp2Q/TzDTqS1QalI/AAAAAAAAAj8/7uDOTlswUDU/s1600/11.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 119px;\" src=\"http://4.bp.blogspot.com/-xkFW3PrGp2Q/TzDTqS1QalI/AAAAAAAAAj8/7uDOTlswUDU/s320/11.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5706293451441597010\" /></a><a href=\"http://2.bp.blogspot.com/-we0waH35PiA/TzDTqRhiCAI/AAAAAAAAAj0/CsvGGjveZww/s1600/12.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 161px;\" src=\"http://2.bp.blogspot.com/-we0waH35PiA/TzDTqRhiCAI/AAAAAAAAAj0/CsvGGjveZww/s320/12.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5706293451090429954\" /></a>

 */ 

public const string content_03022012_b = ""; 
public const string content_03022012_r = ""; 

 /* 
<p>A fully functional trial version of Alfresco can be downloaded from the company website. Somewhat confusingly, there are two separate links, for <a href=\"http://www.alfresco.com/products/document-management/">Document Management</a> and for <a href=\"http://www.alfresco.com/products/web-content-management/">Web Content Management</a>, but the downloads seem to be identical. It appears that the difference may be in the modules that are installed if "Easy" option is used.</p><p>Additionally, the Community version of the product is freely available. Both Community and Enterprise versions are Open Source, but Enterprise also offers support and certain extensions. There is a comparison of the functionality, but it is fairly high-level.</p><p>I'm using a local PC as both a server and a client for my evaluation experiments. The installation process was fairly straightforward.</p><ul><li>Select language</li><li>Select "Advanced" installation type</li><li>Check all boxes</li><li>Leave all the settings default on next screens up to the admin password screen</li><li>Create admin password</li><li>Leave all the settings default on next screens up to the service startup configuration</li><li>Select "Auto" option – configure servers to start automatically</li><li>Wait for the installation to complete</li></ul><br /><br /><a href=\"http://4.bp.blogspot.com/-Vq_3HvGbrWY/Tyyxijnfb-I/AAAAAAAAAjU/XVBobbQGHs8/s1600/AlfrescoCustomInstall.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 238px;\" src=\"http://4.bp.blogspot.com/-Vq_3HvGbrWY/Tyyxijnfb-I/AAAAAAAAAjU/XVBobbQGHs8/s320/AlfrescoCustomInstall.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5705130035206123490\" /></a><p style="text-align: center">"Advanced Install" options</p><a href=\"http://3.bp.blogspot.com/-c7t2mw1t6s8/TyyxiVSnFaI/AAAAAAAAAjE/CUVdDnLKVl4/s1600/AlfrescoServer1.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 175px;\" src=\"http://3.bp.blogspot.com/-c7t2mw1t6s8/TyyxiVSnFaI/AAAAAAAAAjE/CUVdDnLKVl4/s320/AlfrescoServer1.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5705130031360447906\" /></a><p style="text-align: center">Alfresco Share</p><a href=\"http://4.bp.blogspot.com/--hd60GRQUAg/Tyyxh5SSDkI/AAAAAAAAAi4/LnjK5KMs6yo/s1600/AlfrescoClient1.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 98px;\" src=\"http://4.bp.blogspot.com/--hd60GRQUAg/Tyyxh5SSDkI/AAAAAAAAAi4/LnjK5KMs6yo/s320/AlfrescoClient1.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5705130023842876994\" /></a><p style="text-align: center">Alfresco Explorer</p><p>After installation, the Alfresco Share is located at <u>http://127.0.0.1:8080/share/page/user/admin/dashboard</u> and Alfresco Explorer at <u>http://127.0.0.1:8080/alfresco</u>.</p><p>Share and Explorer is a separate topic, which I do not yet understand thoroughly - the Explorer provides means to create, modify and publish content. All my experiments so far have been done using Explorer. The purpose of Alfresco Share appears to be team collaboration so it may become useful when (and if) at some stage more than one person will be working on the content.</p><p><strong>References:</strong></p><a href=\"http://www.scribd.com/doc/77087023/Open-Source-Web-Content-Management-in-Alfresco">Open Source Web Content Management in Alfresco</a>

 */ 

public const string content_02022012_b = ""; 
public const string content_02022012_r = ""; 

 /* 
<p>I've just started at the new role and the first 'real' task I've been given was to identify if the Content Management System is suitable for storing some data which was previously stored in the database. This is quite a new concept for me and there are a lot of questions to answer. User friendly display? Editing and saving? Versioning? Approval? Trail of changes? Referential integrity?</p><p>What I need out of an CMS is</p><ul><li>Ability to store data in XML form</li><li>Ability to display data in a user-friendly manner</li><li>Ability to edit and save data</li><li>Ability to apply scripts or rules on check-in of data</li><li>Keeping an audit trail of changes made to data</li><li>Version control and options available to keep release history and versioning of documents</li><li>Ability to keep multiple edits or branches of documents</li><li>Ability to extract data</li><li>Ability to apply a workflow to a document such as make a review mandatory before the document is released</li></ul><p>As an example of a CMS, we chose <a href=\"http://www.alfresco.com">Alfresco</a>. Alfresco is an enterprise content management system that includes content repository, an out-of-the-box web portal framework, a CIFS interface that provides file system compatibility, a web content management system and a workflow.</p><p>There are two different repository implementations within Alfresco. They are DM store and WCM store (Data Management and Web Content Management). They are not equivalent in terms of functionality.</p><p>WCM is built on top of the core products and adds some functionality. However, it was developed in such way that it created a separation between DM and WCM from an API perspective, so WCM is not always a subset of DM functionality. Some features are only available in WCM.</p><p>Main differences:</p><ul><li>DM uses a proprietary XML-based description of the content model, while WCM uses XML schema. Main idea – not to have a mix between two models.</li><li>Data entered into a WCM web form is saved as XML that conforms to the XSD defined by the user. There is no similar facility for capturing data as XML within DM.</li><li>XSLT (or Freemaker) can be used to transform WCM data into other formats. In DM, no such functionality exist out-of-the-box.</li><li>WCM does not allow configuration of rules (trigger actions against newly-added, updated or deleted documents).</li><li>DM allows assigning users and groups to roles at folder and file level. WCM only allows doing that on a project level, no lower, but can be implemented by writing custom code using API.</li></ul><p>General advice on choosing between DM and WCM:</p><p>Choose WCM if:</p><ul><li>Authors are comfortable with Alfresco Web Client and Web Forms</li><li>Minimal time to be spent on presentation tier</li><li>Need the ability to rollback change sets</li><li>Only need to link content to basic URLs</li><li>Need to have a staging environment</li><li>Simple workflow is sufficient</li></ul><p>Choose DM if:</p><ul><li>Workflow must be exposed via the portal</li><li>Developers are experienced with XML/XSLT, WYSIWYG editors and jBPM</li><li>Can spend time upfront designing a robust presentation tier</li><li>Custom solution is desired and the overall solution is simple</li></ul><p>References</p><a href=\"http://ecmarchitect.com/archives/2009/08/31/1038">Understanding the differences between Alfresco repository implementations</a><br><a href=\"http://blogs.captechconsulting.com/blog/philip-kedy/alfresco-wcm-or-dm-what-the-best-choice-your-enterprise-portal">Alfresco WCM or DM: What is the best choice for your enterprise portal?</a>

 */ 

public const string content_09012012_b = ""; 
public const string content_09012012_r = ""; 

 /* 

<p>With Team Foundation Server 2010, Microsoft still did not provide a fully automated tool for migration from Visual SourceSafe.</p><p>In fact, the MSDN guide on migration from Visual SourceSafe is about 14 screens long on my monitor and does not cover in much detail some related actions such as backing up and restoring single projects from a SourceSafe database or creating a new Team Project, only providing links to other MSDN guides and articles.</p><p>We have a huge Visual SourceSafe database here which, quite frankly, may fall over any time due to sheer size or the fact that it has not been analysed for a few years. There is no way it is going to be converted to TFS fully, as it holds heaps of stuff that just does not belong there. So each developer will probably move projects he or she is responsible for.</p><p>Below is my take on a complete instruction for migrating a project from Visual SourceSafe to TFS 2010, using Visual Studio 2010, that I prepared for other developers.</p><p style="font-size:5;font-weight:bold">1. Before you begin</p><p style="font-size:4;font-weight:bold">1.1. Machine configuration</p><p><ul><li>Install Visual Studio on the machine that will perform the migration</li><li>Install Visual SourceSafe 2005</li><li>Install the <a href=\"http://archive.msdn.microsoft.com/KB950185/Release/ProjectReleases.aspx?ReleaseId=1123">update that is associated with article 950185 in Microsoft Knowledge Base</a></li><li>Make sure you know the SourceSafe database admin password</li></ul></p><p style="font-size:4;font-weight:bold">1.2. Permissions</p><p><ul><li>Know the Admin password to the Visual SourceSafe database</li><li>Be an Administrator of your PC</li><li>Be a member of TFS Server Administrators or Collection Administrators</li></ul></p><p style="font-size:5;font-weight:bold">2. Backup and restore SourceSafe project</p><p style="font-size:4;font-weight:bold">2.1. Backup SourceSafe project</p><p style="font-size:3;font-style:italic;font-weight:bold">2.1.1. Use the command line tool</p><p>For this example, the \\Server\VSS\database\VSS-DB SourceSafe database and $/MyRoot/MyProject projects were used.</p><p>The backup and restore tools, ssarc and ssrestor are located in the SourceSafe folder, usually C:\Program Files\Microsoft Visual SourceSafe. From the command prompt, navigate to that folder and run the command</p><p><b>ssarc -d- -i -yadmin,password -s\\Server\VSS\database\VSS-DB CodeProject.ssa "$/MyRoot/MyProject"</b> (replace password with SourceSafe admin password, and specify the desired SourceSafe database location and backup database name).</p><p>If the warning "For reliability and performance reasons using the analyze, archive and restore utilities over network is not recommended. Do you want to continue? (Y/N)", select Y.</p><p>The command will create a backup database CodeProject.ssa in the Visual SourceSafe folder.</p><p style="font-size:3;font-style:italic;font-weight:bold">2.1.2. Use the Visual SourceSafe Administration UI</p><ul><li>Run Start &rarr; Programs &rarr; Microsoft Visual SourceSafe &rarr; Microsoft Visual SourceSafe Administration</li><li>Select Archive &rarr; Archive Projects from menu</li><li>Select a project to back up</li><li>Select "Next"</li><li>Select "Save Data to File", point to the location of the file</li><li>Select "Next"</li><li>Select "Archive all of the data"</li><li>Select "Finish"</li><li>The message box "Archive/restore successfully completed" will appear</li></ul><a href=\"http://1.bp.blogspot.com/-pme2KytgLA4/TwuUSVCKccI/AAAAAAAAAhU/ASuKLUIeUFo/s1600/backup1.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 234px;\" src=\"http://1.bp.blogspot.com/-pme2KytgLA4/TwuUSVCKccI/AAAAAAAAAhU/ASuKLUIeUFo/s320/backup1.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5695809196344897986\" /></a><p style="font-size:4;font-weight:bold">2.2. Create an empty local SourceSafe database</p><ul><li>Create a folder for a new SourceSafe database (i.e. "D:\VSSTFSTransfer")</li><li>Start Visual SourceSafe 2005</li><li>Select File &rarr; Open SourceSafe database</li><li>Choose "Add"</li><li>"Add SourceSafe Database" wizard will start</li><li>Select "Next"</li><li>Select "Create a New Database"</li><li>Select "Next"</li><li>Browse to the folder you created, select it and select "Next"</li><li>Specify the name for the database (can use default) and select "Next"</li><li>Leave default Team Version Control model and select "Next"</li><li>Choose "Finish"</li><li>Close Visual SourceSafe 2005</li></ul><a href=\"http://4.bp.blogspot.com/-nUQ1lHG1g9I/TwuUtfR1oPI/AAAAAAAAAhw/cfR_hXtBcHs/s1600/restore2.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 246px;\" src=\"http://4.bp.blogspot.com/-nUQ1lHG1g9I/TwuUtfR1oPI/AAAAAAAAAhw/cfR_hXtBcHs/s320/restore2.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5695809662951465202\" /></a><a href=\"http://2.bp.blogspot.com/-YENFVLHijAc/TwuUtSiHiZI/AAAAAAAAAhg/Lcbh5Dbd0fw/s1600/restore1.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 246px;\" src=\"http://2.bp.blogspot.com/-YENFVLHijAc/TwuUtSiHiZI/AAAAAAAAAhg/Lcbh5Dbd0fw/s320/restore1.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5695809659530086802\" /></a><p style="font-size:4;font-weight:bold">2.3. Restore a project to an empty SourceSafe database</p><p style="font-size:3;font-style:italic;font-weight:bold">2.3.1. Use the command line tool</p><p>From the command prompt, navigate to Visual SourceSafe folder and run the command</p><p><b>ssrestor "-p$/MyRoot/MyProject" -sD:\VSSTFSTransfer -yadmin,password CodeProject.ssa "$/MyRoot/MyProject"</b></p><p>The command will restore the project into the SourceSafe database located in D:\VSSTFSTransfer.</p><p>Open the database with Visual SourceSafe to verify files were restored.</p><p style="font-size:3;font-style:italic;font-weight:bold">2.3.2. Use the Visual SourceSafe Administration UI</p><ul><li>Run Start &rarr; Programs &rarr; Microsoft Visual SourceSafe &rarr; Microsoft Visual SourceSafe Administration</li><li>Select Archive &rarr; Restore Projects</li><li>Point to the location where the backup database was saved</li><li>Select "Next"</li><li>Click "OK" on the warning</li><li>Select the project to restore</li><li>Select "Next"</li><li>Leave the default choice "Restore to the project the item was archived from"</li><li>Select "Finish"</li><li>Click "OK" on the warning</li><li>The message box "Archive/restore successfully completed" will show</li></ul><a href=\"http://1.bp.blogspot.com/-0KfajmCWKmQ/TwuVDx1UOWI/AAAAAAAAAiQ/YO7nfQi06YA/s1600/restore5.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 235px;\" src=\"http://1.bp.blogspot.com/-0KfajmCWKmQ/TwuVDx1UOWI/AAAAAAAAAiQ/YO7nfQi06YA/s320/restore5.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5695810045889231202\" /></a><a href=\"http://2.bp.blogspot.com/-oi40XIxrX04/TwuVDsC-WiI/AAAAAAAAAiI/cKRyTuCIla0/s1600/restore4.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 73px;\" src=\"http://2.bp.blogspot.com/-oi40XIxrX04/TwuVDsC-WiI/AAAAAAAAAiI/cKRyTuCIla0/s320/restore4.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5695810044335905314\" /></a><a href=\"http://2.bp.blogspot.com/-kQ8RuP0V2so/TwuVDUwbnII/AAAAAAAAAh4/HHuifOm-8D4/s1600/restore3.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 235px;\" src=\"http://2.bp.blogspot.com/-kQ8RuP0V2so/TwuVDUwbnII/AAAAAAAAAh4/HHuifOm-8D4/s320/restore3.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5695810038084115586\" /></a><p style="font-size:5;font-weight:bold">3. Create a new Team Project</p><p>In Visual Studio 2010 open the "Team Explorer" tab. If you are not connected to the server, select "Connect to Team Project". If the server is not in the list, select "Servers". On "Add/Remove Team Foundation Server" select "Add". Fill in the TFS credentials.</p><a href=\"http://3.bp.blogspot.com/-4wmJ3zcJ4cE/TwuVPHoBEOI/AAAAAAAAAic/czrfj9y86u0/s1600/bnewtfs.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 238px;\" src=\"http://3.bp.blogspot.com/-4wmJ3zcJ4cE/TwuVPHoBEOI/AAAAAAAAAic/czrfj9y86u0/s320/bnewtfs.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5695810240717590754\" /></a><p>On the "Connect to Team Project" screen choose the collection and project(s) to connect to and select "Connect".</p><p>In the "Team Explorer" tab, right-click the TFS server and select "New Team Project". Specify the name of the project and select "Next". Choose the process template and select "Next". Specify source control settings ("Create an empty source control folder" for a conversion project) and select "Finish". Visual Studio will create a new Team Project.</p><a href=\"http://1.bp.blogspot.com/-4goEc0y09kA/TwuVU2WQ1DI/AAAAAAAAAio/PVNxVamxtAM/s1600/newprojtfs.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 206px;\" src=\"http://1.bp.blogspot.com/-4goEc0y09kA/TwuVU2WQ1DI/AAAAAAAAAio/PVNxVamxtAM/s320/newprojtfs.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5695810339158938674\" /></a><p style="font-size:5;font-weight:bold">4. Analyse SourceSafe database</p><p>Before migrating the data, Visual SourceSafe Converter tool should be used to analyse any issues with the data.</p><p style="font-size:3;font-style:italic;font-weight:bold">4.1.1. Create a settings file</p><p>A settings file to use for the example above:</p><pre class=\"brush:xml\">&lt;?xml version="1.0" encoding="utf-8"?&gt;<br />&lt;SourceControlConverter&gt;<br /> &lt;ConverterSpecificSetting&gt;<br />  &lt;Source name="VSS"&gt;<br />   &lt;VSSDatabase name="D:\VSSTFSTransfer"&gt;&lt;/VSSDatabase&gt;<br />   &lt;UserMap name="D:\VSSTFSTransfer\UserMap.xml"&gt;&lt;/UserMap&gt;<br />  &lt;/Source&gt;<br />  &lt;ProjectMap&gt;<br />   &lt;Project Source="$/MyRoot/MyProject/"&gt;&lt;/Project&gt;<br />  &lt;/ProjectMap&gt;<br /> &lt;/ConverterSpecificSetting&gt;<br /> &lt;Settings&gt;<br />   &lt;Output file="D:\VSSTFSTransfer\Analysis.xml"&gt;&lt;/Output&gt;<br /> &lt;/Settings&gt;<br />&lt;/SourceControlConverter&gt;</pre><p>VSSDatabase is the path to the SourceSafe database to be converted.</p><p>UserMap is the path to the user map file to be created</p><p>ProjectMap lists all the projects to be converted. To convert the whole SourceSafe database, use the following:</p><pre class=\"brush:xml\">&lt;ProjectMap&gt;<br /> &lt;Project From="$/"&gt;&lt;/Project&gt;<br />&lt;/ProjectMap&gt;</pre><p>Output file is the result of the analysis report.</p><p style="font-size:3;font-style:italic;font-weight:bold">4.1.2. Analyse the data</p><p>The VSSConverter utility is located in the Visual Studio 2010 Common folder, usually C:\Program Files\Microsoft Visual Studio 10.0\Common7\IDE</p><p>Save the settings file as settings.xml and run VSSConverter in the analysis mode, specifying the path to the settings file, i.e.</p><p><b>VSSConverter Analyze D:\VSSTFSTransfer\settings.xml</b></p><p>Enter the SourceSafe database password. If the process completes successfully, the Analysis.xml and UserMap.xml will be created in the D:\VSSTFSTransfer folder. Review and resolve issues found by the Analyze feature, if applicable.</p><p style="font-size:3;font-style:italic;font-weight:bold">4.1.3. Create a migration settings file</p><p>Modify the UserMap.xml. Here is the sample user map which is the output from the previous step:</p><pre class=\"brush:xml\">&lt;?xml version="1.0" encoding="utf-8"?&gt;<br />&lt;UserMappings xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;<br />  &lt;UserMap From="Admin" To="" /&gt;<br />  &lt;UserMap From="abc123" To="" /&gt;<br />  &lt;UserMap From="def456" To="" /&gt;<br />  &lt;UserMap From="ghi789" To="" /&gt;<br />&lt;/UserMappings&gt;</pre><p>For correct history migration, provide the "To" users in the user map. These are the valid Team Foundation Server users. Example:</p><pre class=\"brush:xml\">&lt;?xml version="1.0" encoding="utf-8"?&gt;<br />&lt;UserMappings xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;<br />  &lt;UserMap From="Admin" To="MYDOMAIN\administrator" /&gt;<br />  &lt;UserMap From="abc123" To="MYDOMAIN\abc123" /&gt;<br />  &lt;UserMap From="def456" To="MYDOMAIN\def456" /&gt;<br />  &lt;UserMap From="ghi789" To="MYDOMAIN\ghi789" /&gt;<br />&lt;/UserMappings&gt;</pre><p>Modify the settings file for migration.</p><pre class=\"brush:xml\">&lt;?xml version="1.0" encoding="utf-8"?&gt;<br />&lt;SourceControlConverter&gt;<br /> &lt;ConverterSpecificSetting&gt;<br />  &lt;Source name="VSS"&gt;<br />   &lt;VSSDatabase name="D:\VSSTFSTransfer"&gt;&lt;/VSSDatabase&gt;<br />   &lt;UserMap name="D:\VSSTFSTransfer\UserMap.xml"&gt;&lt;/UserMap&gt;<br />  &lt;/Source&gt;<br />  &lt;ProjectMap&gt;<br />   &lt;Project Source="$/MyRoot/MyProject" Destination="$/MyProject"&gt;&lt;/Project&gt;<br />  &lt;/ProjectMap&gt;<br /> &lt;/ConverterSpecificSetting&gt;<br /> &lt;Settings&gt;<br />  &lt;TeamFoundationServer name="MYTFServer" port="8080" protocol="http" collection="tfs/MyCol"&gt;&lt;/TeamFoundationServer &gt;<br />  &lt;Output file="D:\VSSTFSTransfer\Migrate.xml"&gt;&lt;/Output&gt;<br /> &lt;/Settings&gt;<br />&lt;/SourceControlConverter&gt;</pre><p>The Project Destination is the project name in the TFS.</p><p>The TeamFoundationServer settings are set according to the TFS Setup as shown in the screenshot.</p><p>Specify a name for the migration file output.</p><p style="font-size:5;font-weight:bold">5. Run the migration process</p><p style="font-size:4;font-weight:bold">5.1. Run the process</p><p>Run the converter tool with the migrate attribute.</p><p><b>VSSConverter Migrate D:\VSSTFSTransfer\settings.xml</b></p><p style="font-size:4;font-weight:bold">5.2. Analyse the output and resolve issues</p><p>Check the errors and warnings in the Migrate.xml which was created by the migration too.</p><p style="font-size:5;font-weight:bold">6. If something went wrong</p><p>If you’re not happy with the results, you can always delete the project from TFS 2010. Use on your own risk! Check the parameters, make sure that the spelling is correct, make backups, check again and make a local backup of everything just in case.</p><p><b>TFSDeleteproject /force /collection:http://MYTFServer:8080/tfs/MyCol MyProject</b></p><p>Read the warning and decide. Press Y to continue. Press enter.</p><p>Now you can start from scratch.</p><p style="font-size:4;font-weight:bold">7. References and further information</p><a href=\"http://msdn.microsoft.com/en-us/library/ms253060.aspx">Migrate from Visual SourceSafe</a><br><a href=\"http://msdn.microsoft.com/en-us/library/ms252587.aspx">Team Foundation Server Permissions</a><br><a href=\"http://msdn.microsoft.com/en-us/library/ms252477.aspx">Configuring Users, Groups, and Permissions</a><br><a href=\"http://msdn.microsoft.com/en-us/library/ms253090(VS.90).aspx">VSSConverter Command-Line Utility for Source Control Migration</a><br><a href=\"http://msdn.microsoft.com/en-us/library/ms181482(v=VS.100).aspx">TFSDeleteProject: Deleting Team Projects</a>
 */ 

public const string content_15122011_b = ""; 
public const string content_15122011_r = ""; 

 /* 
<p>I tried uploading my MVC application on the web server for the first time. That proved to be slightly more complicated compared to using a server in the local network. I chose www.discountasp.net as a provider due to several positive reviews I've found. Registration, of course, was easy, and accessing the "control panel" too. The machine I develop on, however, is behind the proxy and the corporate firewall, so for deployment I had to choose publish to local PC and then copy the files over to my home pc and then to the provider's ftp. Doing the application part was really easy - just copied the files to the ftp, deleted the default "index.htm" page, stopped and started the web site from the control panel, and I could see the application main page straight away. The troubles, as I expected, started with database. I tried modifying connection strings to point correctly to the corresponding folders on the host, but sometimes I got back the 500 error, and sometimes something slightly more meaningful like that one:</p><a href=\"http://1.bp.blogspot.com/-VQwybpBrYRU/Tunvk3yiPaI/AAAAAAAAAdg/3yVOjzC4aKs/s1600/1.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 146px;\" src=\"http://1.bp.blogspot.com/-VQwybpBrYRU/Tunvk3yiPaI/AAAAAAAAAdg/3yVOjzC4aKs/s320/1.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5686339421262200226\" /></a><p>I was slowly going through the host's manuals and the knowledge base, but what solved all my issues was the <a href=\"http://sqlcemembership.codeplex.com/">SQL Compact ASP.NET Membership, Role and Profile provider</a>. Essentially, that's just four files that need to be added to the project's App_Code folder. Next, the web.config file has to be modified according to instructions on <a href=\"http://sqlcemembership.codeplex.com/">Codeplex</a> or in the <a href=\"http://erikej.blogspot.com/2010/08/sql-server-compact-40-aspnet-membership.html">author's blog</a>.</p><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://4.bp.blogspot.com/-i96BNGGHYZs/Tun0O6zdR2I/AAAAAAAAAd4/LVa6LnGPpHM/s1600/1.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 306px;\" src=\"http://4.bp.blogspot.com/-i96BNGGHYZs/Tun0O6zdR2I/AAAAAAAAAd4/LVa6LnGPpHM/s320/1.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5686344541672392546\" /></a><p>And then it just works - no need for SQL Express, no additional configuration - just copied the files over to the host. Extremely positive experience.</p>

 */ 

public const string content_09122011_b = ""; 
public const string content_09122011_r = ""; 

 /* 

<p>After spending some time trying to apply a somewhat decent layout to the site, I decided to put some common information in the sidebar. This information would be the same on every page, but will be visible only to logged in users. Initially I rendered it as a section, but that's clearly inefficient as the section tag has to be added to each and every view. That's against the DRY principle of MVC - Do not Repeat Yourself. Much more obvious decision is to place the common part into the partial view, and render this view right in the master page layout. I had to overcome a few obstacles, however, before I achieved the desired result. Here's the outcome:</p><p>First step was to create a partial view, which I called "Stats.cshtml" and placed under "Shared" folder together with other common views. Here is the initial Stats.cshtml:</p><pre class=\"brush:xml\">&lt;div id="sidebar" role="complementary"&gt;<br />&lt;div class="callout"&gt;<br /> &lt;h3&gt;Stats:&lt;/h3&gt;<br />&lt;/div&gt;<br />&lt;section class="tbl"&gt;<br /> &lt;table cellspacing="0"&gt;<br /> &lt;caption&gt;Your Things To Do&lt;/caption&gt;<br />  &lt;tr&gt;<br />   &lt;th scope="col"&gt;<br />    In Basket Items:<br />   &lt;/th&gt;<br />   &lt;th scope="col"&gt;<br />      <br />   &lt;/th&gt;<br />  &lt;/tr&gt;<br /> &lt;/table&gt;<br />&lt;/section&gt;<br />&lt;/div&gt;</pre><p>Which can be rendered from the _layout.cshtml using several methods, such as Render or RenderPartial. More about which one to choose in references below. Let's say I use RenderPartial the following way:</p><pre class=\"brush:xml\">&lt;content&gt;<br />&lt;div id="main" role="main"&gt;<br /> @RenderBody()<br />&lt;/div&gt;<br />    <br /> @if(Request.IsAuthenticated){<br />  Html.RenderPartial("Stats");<br /> }<br />&lt;/content&gt;</pre><p>This solves the bit where the sidebar is rendered properly, and only visible to the logged in users. Now to the second part - how to display user-specific information? Currently the layout knows nothing about it. One of the ways is to create a controller for the partial view. I created a controller "StatsController" and placed some pretty basic code in it:</p><pre class=\"brush:csharp\">public class StatsController : Controller<br />{<br /> private modelGTDContainer db = new modelGTDContainer();<br /> private InBasketRepository repository = new InBasketRepository();<br /> //<br /> // GET: /Stats/<br /><br /> [Authorize]<br /> public PartialViewResult Stats(Users user)<br /> {<br />  var inbasket = repository.FindUserInBasketItems(user.UserID);<br />  return PartialView(inbasket.ToList());<br /> }<br />}</pre><p>Note the use of PartialViewResult instead of the usual ViewResult. When I used a ViewResult I got a fairly nasty infinite loop. Now my RenderPartial is not so useful anymore, because it does not accept a controller as a parameter. So I have to change it to either Html.Action or Html.RenderAction. One of the overloads accepts a view name and a controller name, this is the one I need:</p><pre class=\"brush:xml\">&lt;content&gt;<br />&lt;div id="main" role="main"&gt;<br /> @RenderBody()<br />&lt;/div&gt;<br />    <br /> @if(Request.IsAuthenticated){<br />  Html.RenderAction("Stats", "Stats");<br /> }<br />&lt;/content&gt;</pre><p>And that's about it. The last bit is to specify the model in the Stats.cshtml and to pass some output to the page - at least a simple label:</p><pre class=\"brush:xml\">@model IEnumerable&lt;GTD.Models.InBasket&gt;<br />           <br />@if (Request.IsAuthenticated)<br />{<br />    &lt;div id="sidebar" role="complementary"&gt;<br />    &lt;div class="callout"&gt;<br />     &lt;h3&gt;Stats:&lt;/h3&gt;<br />    &lt;/div&gt;<br />    &lt;section class="tbl"&gt;<br /> &lt;table cellspacing="0"&gt;<br /> &lt;caption&gt;Your Things To Do&lt;/caption&gt;<br />    &lt;tr&gt;<br />        &lt;th scope="col"&gt;<br />            In Basket Items:<br />        &lt;/th&gt;<br />        &lt;th scope="col"&gt;<br />       @Html.Label(Model.Count().ToString())<br />           <br />        &lt;/th&gt;<br />    &lt;/tr&gt;<br />    &lt;/table&gt;<br />    &lt;/section&gt;<br />    &lt;/div&gt;<br />}</pre><p>And that's what the user will see:</p><a href=\"http://3.bp.blogspot.com/-nIAQFycoV8k/TuIHpuyQfbI/AAAAAAAAAbc/4JJGdorfgHc/s1600/1.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 126px;\" src=\"http://3.bp.blogspot.com/-nIAQFycoV8k/TuIHpuyQfbI/AAAAAAAAAbc/4JJGdorfgHc/s320/1.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5684114093209845170\" /></a><p>References:</p><a href=\"http://www.arrangeactassert.com/when-to-use-html-renderpartial-and-html-renderaction-in-asp-net-mvc-razor-views/">When to use Html.RenderPartial and Html.RenderAction in ASP.NET MVC Razor Views</a><br><a href=\"http://stackoverflow.com/questions/4692977/asp-net-mvc-3-layout-cshtml-controller">ASP.NET MVC 3 _Layout.cshtml Controller</a><br><a href=\"http://forums.asp.net/t/1742396.aspx/1">Passing data from View to Partial View</a><br><a href=\"http://stackoverflow.com/questions/4247950/asp-net-mvc3-razor-syntax-help-im-getting-stuck-in-an-infinite-loop">ASP.NET MVC3 Razor syntax help - I'm getting stuck in an infinite loop</a>
 */ 

public const string content_06122011_b = ""; 
public const string content_06122011_r = ""; 

 /* 
<p>Today I tried applying a lesson from "Bulletproof Web Design" to scalable navigation. The goal, essentially is to avoid code wherever possible, avoid using images and allow the size of the tabs to be scalable.</p><p>The "bulletproof" approach, in short, is to use the nav element from HTML5 and wrap a list of tabs into it. Here's the whole of the HTML:</p><pre class=\"brush:xml\">&lt;nav role="navigation"&gt;<br /> &lt;ul id="menu"&gt;<br />  &lt;li id="nav-home"&gt;@Html.ActionLink("Home", "Index", "Home")&lt;/li&gt;<br />  &lt;li id="nav-about"&gt;@Html.ActionLink("About", "About", "Home")&lt;/li&gt;<br /> &lt;/ul&gt;<br />&lt;/nav&gt;</pre><p>And here's the css that I applied following the book (and had to adjust some things here and there):</p><pre class="brush:css">nav[role="navigation"] <br />{ <br />  display: block;<br />  margin: 0; <br />  padding: 10px 0 0 0px; <br />  list-style: none; <br />  background: #FFCB2D;<br />}<br /><br />nav[role="navigation"] li <br />{ <br />  float: left; <br />  margin: 0 1px 0 0; <br />  padding: 0; <br />  font-family: "Lucida Grande", sans-serif; <br />  font-size: 80%; <br />}<br /><br />nav[role="navigation"] ul  <br />{<br />  float:left;<br />  width:100%;<br />  margin: 0; <br />  padding: 10px 0 0 0px; <br />  list-style: none; <br />  background: #FFCB2D url(images/nav_bg.gif) repeat-x bottom left; <br />}<br /><br />nav[role="navigation"] ul li a { <br />  float: right; <br />  display: block; <br />  margin: 0; <br />  padding: 4px 8px; <br />  color: #333; <br />  text-decoration: none; <br />  border: 1px solid #9B8748; <br />  border-bottom: none; <br />  background: #F9E9A9 url(img/off_bg.gif) repeat-x top left; <br />} <br />  <br />nav[role="navigation"] ul li a:hover<br />{ <br />  color: #333; <br />  padding-bottom: 5px; <br />  border-color: #727377; <br />  background: #FFF url(images/on_bg.gif) repeat-x top left; <br />}</pre><p>And if anyone's interested, the gif files I used are as follows:</p><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://1.bp.blogspot.com/-tMhnZt-B55M/Tt7-a5bNQMI/AAAAAAAAAZY/_AGWWQGARd4/s1600/on_bg.gif\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 10px; height: 23px;\" src=\"http://1.bp.blogspot.com/-tMhnZt-B55M/Tt7-a5bNQMI/AAAAAAAAAZY/_AGWWQGARd4/s320/on_bg.gif\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5683259517833134274\" /></a><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://2.bp.blogspot.com/-Yh4E8VaplGw/Tt7-arR7kyI/AAAAAAAAAZQ/6JWKpVbtBoU/s1600/off_bg.gif\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 10px; height: 22px;\" src=\"http://2.bp.blogspot.com/-Yh4E8VaplGw/Tt7-arR7kyI/AAAAAAAAAZQ/6JWKpVbtBoU/s320/off_bg.gif\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5683259514036130594\" /></a><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://1.bp.blogspot.com/-3LDmyPeDjOE/Tt7-amTS3AI/AAAAAAAAAZA/vUoVqrJL5T0/s1600/nav_bg.gif\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 37px; height: 1px;\" src=\"http://1.bp.blogspot.com/-3LDmyPeDjOE/Tt7-amTS3AI/AAAAAAAAAZA/vUoVqrJL5T0/s320/nav_bg.gif\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5683259512699673602\" /></a><br /><p>And I got to the point where the tabs were functional and nicely displayed fairly quickly.</p><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://1.bp.blogspot.com/-1zfTBz-Irbc/Tt7-OHcofaI/AAAAAAAAAY0/poTUm4KrffM/s1600/1.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 83px;\" src=\"http://1.bp.blogspot.com/-1zfTBz-Irbc/Tt7-OHcofaI/AAAAAAAAAY0/poTUm4KrffM/s320/1.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5683259298258910626\" /></a><p>Now I got to the point where I had to make the tab "stick" in the selected state, so it would be visible which tab is currently selected. And the way it was done in the book was by adding an id element to the body and assigning a value to it. The css was then modified like this:</p><pre class="brush:css">nav[role="navigation"] ul li a:hover, body#home #nav-home a, body#about #nav-about a, body#inbasket #nav-inbasket a<br />{ <br />  color: #333; <br />  padding-bottom: 5px; <br />  border-color: #727377; <br />  background: #FFF url(images/on_bg.gif) repeat-x top left; <br />}</pre><p>So in this case the hovering and selection is combined in one css declaration. However, the problem I had was that I could not just go to individual pages and set the correct id elements in page bodies. The way the Razor engine works, of course, is by rendering all the common HTML in the _Layout.cshtml, including the body tag. To achieve my goal, I had to modify the body tag after the page was rendered. That was not as hard a I expected - I wrote a small HTML helper which added a couple of javaScript lines to the page</p><pre class=\"brush:csharp\">public static IHtmlString BodyTagUpdate(this HtmlHelper helper, string text)<br />{<br /> return new HtmlString(@"&lt;script type=""text/javascript""&gt;<br />       document.body.id ='" + text + "';" +<br />       "&lt;/script&gt;");<br />}</pre><p>and then I added a call to this helper on any page that I had to.</p><pre class=\"brush:csharp\">@Html.BodyTagUpdate("about")</pre><p>And it worked. Now I was at this stage.</p><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://1.bp.blogspot.com/-Ewb9IIpT6XU/Tt7-n13hn0I/AAAAAAAAAZk/Z-81t5WRLrY/s1600/2.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 59px;\" src=\"http://1.bp.blogspot.com/-Ewb9IIpT6XU/Tt7-n13hn0I/AAAAAAAAAZk/Z-81t5WRLrY/s320/2.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5683259740216467266\" /></a><p>The last thing I added was displaying certain tabs only for the users that are logged on. This turned out to be extremely easy. This is the modified HTML of a navigation element:</p><pre class=\"brush:xml\">&lt;nav role="navigation"&gt;<br /> &lt;ul id="menu"&gt;<br />  &lt;li id="nav-home"&gt;@Html.ActionLink("Home", "Index", "Home")&lt;/li&gt;<br />  &lt;li id="nav-about"&gt;@Html.ActionLink("About", "About", "Home")&lt;/li&gt;<br />  @if(Request.IsAuthenticated) {<br />  &lt;li id="nav-inbasket"&gt;@Html.ActionLink("In Basket", "../InBasket/Index")&lt;/li&gt;<br />  }<br /> &lt;/ul&gt;<br />&lt;/nav&gt;</pre><p><p>And the very last thing was to get rid of the built-in Log On/Log Off div and move it into the last tab. It involved writing a couple extra HTML helpers - one to render correct text, and the other is essentially an extension to the ActionLink which allows to pass HTML in and out so the link can be formatted. It is not critical but may become more useful later.</p><pre class=\"brush:csharp\">public static IHtmlString LogOnOff(this HtmlHelper helper, string text, bool isLogon)<br />{<br /> if (isLogon)<br /> {<br />  text = "Log On";<br /> }<br /> else<br /> {<br />  text = @"&lt;strong&gt;" + text + @"&lt;/strong&gt; - Log Off";<br /> }<br /><br /> return new HtmlString(text);<br />}<br /><br />public static IHtmlString ActionHTML(this HtmlHelper helper, string action, string controller, string text)<br />{<br /> var url = new UrlHelper(helper.ViewContext.RequestContext);<br /><br /> var linkWriter = new HtmlTextWriter(new StringWriter());<br /> linkWriter.AddAttribute(HtmlTextWriterAttribute.Href, url.Action(action, controller));<br /> linkWriter.RenderBeginTag(HtmlTextWriterTag.A);<br /> linkWriter.Write(text);<br /> linkWriter.RenderEndTag(); //A<br /><br /> return new HtmlString(linkWriter.InnerWriter.ToString());<br />}</pre><p>The partial view _LogOnPartial is now a bit simplified:</p><pre class=\"brush:csharp\">@if(Request.IsAuthenticated) {<br /> string s = @User.Identity.Name;<br /> IHtmlString t = Html.LogOnOff(s, false);<br />    @Html.ActionHTML("LogOff", "Account", t.ToString())<br />}<br />else {<br /> @Html.ActionHTML("LogOn", "Account", "Log On")<br />}</pre><p>And the div that was rendering it into the _Layout.cshtml has now moved into the navigation area:</p><pre class=\"brush:xml\">&lt;nav role="navigation"&gt;<br /> &lt;ul id="menu"&gt;<br />  &lt;li id="nav-home"&gt;@Html.ActionLink("Home", "Index", "Home")&lt;/li&gt;<br />  &lt;li id="nav-about"&gt;@Html.ActionLink("About", "About", "Home")&lt;/li&gt;<br />  @if(Request.IsAuthenticated) {<br />  &lt;li id="nav-inbasket"&gt;@Html.ActionLink("In Basket", "../InBasket/Index")&lt;/li&gt;<br />  }<br />  &lt;li id="nav-log"&gt;@Html.Partial("_LogOnPartial")&lt;/li&gt;<br /> &lt;/ul&gt;<br />&lt;/nav&gt;</pre><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://1.bp.blogspot.com/-oPQen3aQx14/Tt7-8aCHg2I/AAAAAAAAAZ8/AJk2CkY12zw/s1600/4.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 58px;\" src=\"http://1.bp.blogspot.com/-oPQen3aQx14/Tt7-8aCHg2I/AAAAAAAAAZ8/AJk2CkY12zw/s320/4.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5683260093521953634\" /></a><p>Reference:</p><a href=\"http://www.amazon.com/Bulletproof-Web-Design-flexibility-protecting/dp/0321808355">Bulletproof Web Design: Improving flexibility and protecting against worst-case scenarios with HTML5 and CSS3 (3rd Edition)</a>

 */ 

public const string content_03122011_b = ""; 
public const string content_03122011_r = ""; 

 /* 
<p>Html helpers are used to render HTML and, in most cases, return a string which is then rendered as part of web page. The underlying idea is to reduce development work, decrease the amount of typing and generally provide a readable markup. However, I quickly found that the helpers provided with the MVC framework are small in number. Fortuantely, it is relatively easy to write your own html helpers. There are several ways to do it, but so far I liked extending the HtmlHelper class the best. There are a couple of "gotchas" there, but after that it looks elegant and efficient.</p><p>I started with creating a folder in my solution called "HtmlHelpers" and creating the Helpers.cs class there. The class is part of the namespace "HtmlHelpers". The first "gotcha", or two, is to add the namespace to the Web.config file. The second, smaller "gotcha" is that it may not be enough to add it to the main Web.config class. If, for example, the helper is used by the view which resides in the Views folder, then the Web.config in the Views folder (if it exists) also needs to have the namespace registered.</p><pre class=\"brush:xml\">&lt;pages&gt;<br />  &lt;namespaces&gt;<br /> &lt;add namespace="System.Web.Helpers"/&gt;<br /> &lt;add namespace="System.Web.Mvc"/&gt;<br /> &lt;add namespace="System.Web.Mvc.Ajax"/&gt;<br /> &lt;add namespace="System.Web.Mvc.Html"/&gt;<br /> &lt;add namespace="System.Web.Routing"/&gt;<br /> &lt;add namespace="System.Web.WebPages"/&gt;<br /> &lt;add namespace="HtmlHelpers"/&gt;<br />  &lt;/namespaces&gt;<br />&lt;/pages&gt;</pre><p>Both the class and the extension methods have to be static. The type of the extension method can not be "string" - that's another "gotcha". The engine will escape all the HTML tags by default. This is why the HtmlString should be returned. That was my last "gotcha". Here's the whole class:</p><br /><pre class=\"brush:csharp\">namespace HtmlHelpers<br />{<br />    public static class Helpers<br />    {<br />        public static IHtmlString BulletedList(this HtmlHelper helper, string data)<br />        {<br />            string[] items = data.Split('|');<br /><br />            var writer = new HtmlTextWriter(new StringWriter());<br />            writer.RenderBeginTag(HtmlTextWriterTag.Ul);<br /><br />            foreach (string s in items)<br />            {<br />                writer.RenderBeginTag(HtmlTextWriterTag.Li);<br />                writer.Write(helper.Encode(s));<br />                writer.RenderEndTag();<br />            }<br /><br />            writer.RenderEndTag();<br />            return new HtmlString(writer.InnerWriter.ToString());<br />        }<br /><br />        public static IHtmlString Paragraph(this HtmlHelper helper, string text)<br />        {<br />            return new HtmlString("&lt;p&gt;" +text + "&lt;/p&gt;");<br />        }<br />    }<br />}</pre><p>The first method takes strings delimited by "|" character and creates a bulleted list from them. Here I used HtmlTextWriter. In the second method I've shown that the HtmlTextWriter is not absolutely necessary - it is possible to just add tags "by hand".</p><p>This kind of usage</p><p>@Html.Paragraph("A custom paragraph")<br>@Html.BulletedList("Item 1|Item 2|Item 3|Item 4")</p><p>Provides the following output</p><a href=\"http://3.bp.blogspot.com/-rJEM_nboSo4/TtrSiokk1hI/AAAAAAAAAYo/7J2W9kW9-8s/s1600/1.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 186px; height: 194px;\" src=\"http://3.bp.blogspot.com/-rJEM_nboSo4/TtrSiokk1hI/AAAAAAAAAYo/7J2W9kW9-8s/s320/1.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5682085372329514514\" /></a><p>References:</p><a href=\"http://stackoverflow.com/questions/6950887/custom-htmlhelper-renders-text-and-not-markup">Custom HtmlHelper Renders Text and not Markup</a><br><a href=\"http://stephenwalther.com/blog/archive/2009/03/03/chapter-6-understanding-html-helpers.aspx">Understanding HTML Helpers</a>

 */ 

public const string content_02122011_b = ""; 
public const string content_02122011_r = ""; 

 /* 
<p>I added the autocomplete function to one of the views. Turned out to be a simple task if I use the jQuery-provided function. Initially I tried to use Dylan Verheul's plugin, but inevitably ended up with the "Object does not support this property or method" the reason for which I still did not find. Very frustrating. Anyway.</p><p>First I added the following line to the _Layout.shtml under Views/Shared</p><pre class=\"brush:js\"><script src=\"@Url.Content("~/Scripts/jquery-ui-1.8.11.min.js")" type="text/javascript"></script></pre><p>Next, I used the Named Sections to place the javascript that I want to be in my view. In the _Layout.shtml file I added the following line:</p><pre class=\"brush:js\">@RenderSection("JavaScript", required: false)</pre><p>Now I can add the "JavaScript" section to any view in the following manner:</p><pre class=\"brush:js\">@section JavaScript<br />{<br />&lt;script type="text/javascript"&gt;<br />  $(function () {<br />   $("#Title").autocomplete({<br />    source: "/InBasket/Find",<br />    minLength: 1,<br />    select: function (event, ui) {<br />     if (ui.item) {<br />      $("#Title").val(ui.item.value);<br />     }<br />    }<br />   });<br />  });<br /> &lt;/script&gt;}</pre><p>and the section will be added to the view when it's rendered. The script above binds the autocomplete function to the Title input field. The "/InBasket/Find" calls the Find method in the InBasketController (which I'll write a bit later). The minLength specifies how many characters have to be in the box before the autocomplete fires. If my database is large, I may set it to 3, 5 or more to avoid huge responses where everything starting with "a" is returned. But for now I just want to test the functionality, so I set it to "1". And then, when I select an item from the autocomplete list, it sets the value of my Title input box to this item.</p><p>So that's the View part, now the Controller part. I started in my repository and added a function to return all user's InBasket item titles that start with a particular string, and the results should not be case-sensitive.</p><pre class=\"brush:csharp\">//used by autocomplete: return all inbasket items where Title starts with a string provided<br />public IQueryable<InBasket> FindUserInBasketItemsByTitle(string title, int userID)<br />{<br /> var inBaskets = db.InBaskets.Where(item => item.UserID == userID);<br /> inBaskets = inBaskets.Where(item => item.Title.ToLower().StartsWith(title.ToLower()));<br /> return inBaskets;<br />}</pre><p>Next, I added the Find method to the View. The method gets the value from the Title input box and returns the JSON array of values. One thing to note: it is important that the string parameter is called "term". I didn't know that initially and was wondering for a while why my parameter "s" is always null. Here is the whole Find method:</p><pre class=\"brush:csharp\">public JsonResult Find(string term, Users user)<br />{<br /> var inBaskets = repository.FindUserInBasketItemsByTitle(term, user.UserID);<br /> var titles = new List<string>();<br /> foreach(InBasket inBasket in inBaskets)<br /> {<br />  titles.Add(inBasket.Title);<br /> }<br /> return Json(titles, JsonRequestBehavior.AllowGet);<br />}</pre><p>And that's all - it only takes a dozen or two lines of code. The result is horribly ugly at the moment, but it's a proof of concept:</p><a href=\"http://3.bp.blogspot.com/-dJSTCK3AMQ8/TtmN_JFT7PI/AAAAAAAAAYc/-tuw7kw3u94/s1600/1.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 261px; height: 320px;\" src=\"http://3.bp.blogspot.com/-dJSTCK3AMQ8/TtmN_JFT7PI/AAAAAAAAAYc/-tuw7kw3u94/s320/1.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5681728520814062834\" /></a><p>References:</p><a href=\"http://volaresystems.com/Blog/post/Autocomplete-dropdown-with-jQuery-UI-and-MVC.aspx">Autocomplete dropdown with jQuery UI and MVC</a><br><a href=\"http://weblogs.asp.net/scottgu/archive/2010/12/30/asp-net-mvc-3-layouts-and-sections-with-razor.aspx">ASP.NET MVC 3: Layouts and Sections with Razor</a><br><a href=\"http://stackoverflow.com/questions/4311783/asp-net-mvc-3-razor-include-js-file-in-head-tag">ASP.Net MVC 3 Razor: Include js file in Head tag</a>

 */ 

public const string content_01122011_b = ""; 
public const string content_01122011_r = ""; 

 /* 
<p>Today I tried installing the MVC application on IIS 7.</p><p>It was not an extremely complicated task, as long as understood the prerequisites. I installed the .NET Framework 4 on the server that has IIS7. I then registered the .NET Framework with IIS by running the registration tool (aspnet_regiis.exe)</p><a href=\"http://3.bp.blogspot.com/-BJ6i-xNFB80/Ttc6TrOriVI/AAAAAAAAAXI/ZUXZJCTMPno/s1600/8.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 121px;\" src=\"http://3.bp.blogspot.com/-BJ6i-xNFB80/Ttc6TrOriVI/AAAAAAAAAXI/ZUXZJCTMPno/s320/8.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5681073564647393618\" /></a><p>Before publishing a project, it is a good idea to use the "Add Deployable Dependencies" to make sure all required libraries are added to the published application. Initially I missed this step and started getting errors like the one below.</p><a href=\"http://4.bp.blogspot.com/-JhTmdQHr6eA/Ttc6bKZORdI/AAAAAAAAAXU/4RvtW7z2pW8/s1600/9.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 302px; height: 320px;\" src=\"http://4.bp.blogspot.com/-JhTmdQHr6eA/Ttc6bKZORdI/AAAAAAAAAXU/4RvtW7z2pW8/s320/9.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5681073693272196562\" /></a><p>Initially I tried to solve them by manually copying the required dlls to the bin folder of the application, but got tired quickly and found a better solution, as mentioned above.</p><a href=\"http://3.bp.blogspot.com/-LEBA17SN2yE/Ttc6iNG5vLI/AAAAAAAAAXg/K8EKxEmLqno/s1600/1.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 168px; height: 320px;\" src=\"http://3.bp.blogspot.com/-LEBA17SN2yE/Ttc6iNG5vLI/AAAAAAAAAXg/K8EKxEmLqno/s320/1.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5681073814259743922\" /></a><a href=\"http://1.bp.blogspot.com/-m9lzb_7Fh2k/Ttc6oRGSynI/AAAAAAAAAXs/zztqPjvWVkg/s1600/2.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 147px;\" src=\"http://1.bp.blogspot.com/-m9lzb_7Fh2k/Ttc6oRGSynI/AAAAAAAAAXs/zztqPjvWVkg/s320/2.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5681073918410148466\" /></a><p>It generated a rather long list of files, it probably would not be a good idea to copy them all manually one by one.</p><a href=\"http://1.bp.blogspot.com/-483eM4uxou4/Ttc6v7hk5mI/AAAAAAAAAX4/dM7MxQDvUBU/s1600/3.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 166px; height: 320px;\" src=\"http://1.bp.blogspot.com/-483eM4uxou4/Ttc6v7hk5mI/AAAAAAAAAX4/dM7MxQDvUBU/s320/3.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5681074050057954914\" /></a><p>Next, I published the project to a file system.</p><a href=\"http://4.bp.blogspot.com/-kiqxzQ387jE/Ttc62ZjJWhI/AAAAAAAAAYE/FjK4Bj0EjoY/s1600/10.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 306px;\" src=\"http://4.bp.blogspot.com/-kiqxzQ387jE/Ttc62ZjJWhI/AAAAAAAAAYE/FjK4Bj0EjoY/s320/10.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5681074161196816914\" /></a><p>Created a directory on the server that is running IIS under wwwroot/test, copied the published application to the server, created the virtual directory on the Default Web Site and pointed it to my wwwroot/test folder. That was enough to be able to start the application and see the welcome page. Unfortunately, that is not the end of it. At this point I can navigate to the "Register" page, but the App_Data folder does not yet exist and also when I try to go my InBasket page directly, I get a server error. Additionally, my local version of the application, which worked fine, now displays the same behaviour. Quite a few things to fix!</p><a href=\"http://1.bp.blogspot.com/-1wwwF8bDCSc/Ttc6-dB-peI/AAAAAAAAAYQ/KhBqntFuR3w/s1600/11.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 171px;\" src=\"http://1.bp.blogspot.com/-1wwwF8bDCSc/Ttc6-dB-peI/AAAAAAAAAYQ/KhBqntFuR3w/s320/11.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5681074299570398690\" /></a><p>References</p><a href=\"http://iwantmymvc.com/2011-03-23-bin-deploy-aspnet-mvc-3-visual-studio">Bin deploy required dependencies for MVC 3 projects with Visual Studio 2010 SP1</a><br><a href=\"http://haacked.com/archive/2008/11/26/asp.net-mvc-on-iis-6-walkthrough.aspx">ASP.NET MVC on IIS 6 Walkthrough</a><br><a href=\"http://msdn.microsoft.com/en-us/library/k6h9cz8h.aspx">ASP.NET IIS Registration Tool (Aspnet_regiis.exe)</a><br><a href=\"http://www.hanselman.com/blog/BINDeployingASPNETMVC3WithRazorToAWindowsServerWithoutMVCInstalled.aspx">BIN Deploying ASP.NET MVC 3 with Razor to a Windows Server without MVC installed</a>

 */ 

public const string content_28112011_b = ""; 
public const string content_28112011_r = ""; 

 /* 

<p>A model binder is a powerful concept in MVC. Implementing a model binder allows to pass an object to the controller methods automatically by the framework. In my case, I was looking for a way to get the id of the currently logged in user. This has to be checked any time user-specific data is accessed - which is, essentially, always. Placing extra code into each and every method of every controller does not look like a good solution. Here's how a model binder can be used:</p><p>First, implement IModelBinder. I only need it to return an int, and I get this int from my Users table.</p><pre class=\"brush:csharp\">public class IUserModelBinder : IModelBinder<br />{<br /> public object BindModel(ControllerContext controllerContext, ModelBindingContext bindingContext)<br /> {<br />  int userID = 0;<br />  if (controllerContext == null) <br />  {<br />   throw new ArgumentNullException("controllerContext");<br />  }<br />  if (bindingContext == null)<br />  {<br />   throw new ArgumentNullException("bindingContext");<br />  }<br />  if (Membership.GetUser() != null)<br />  { <br />   MembershipUser member = Membership.GetUser();<br />   string guid = member.ProviderUserKey.ToString();<br /><br />   using (modelGTDContainer db = new modelGTDContainer())<br />   {<br />    userID = db.Users.Single(t => t.UserGUID == guid).UserID;<br />   }<br />  }<br />  return userID;<br /> }<br />}</pre><p>Next, I need to register the model binder when the application starts - in the global.asax.cs I only need to add one line to Application_Start</p><pre class=\"brush:csharp\">protected void Application_Start()<br />{<br /> AreaRegistration.RegisterAllAreas();<br /><br /> RegisterGlobalFilters(GlobalFilters.Filters);<br /> RegisterRoutes(RouteTable.Routes);<br /> ModelBinders.Binders[typeof(int)] = new IUserModelBinder();<br />}</pre><p>And finally, I add an int parameter to any controller method that needs a userID to be passed. And, by the magics of MVC, it is there! This is a huge saving of work by adding just a few lines of code.</p><pre class=\"brush:csharp\">//<br />// GET: /InBasket/<br />[Authorize]<br />public ViewResult Index(int userID)<br />{<br /> var inbasket = repository.FindUserInBasketItems(userID);<br /> return View(inbasket.ToList());<br />}</pre><p>What's bad - I have to hit a database every time I access any data to get the user ID, and then hit a database again when I select the actual data for the user. How to fix it? Well, one way is to use the user Guid as a primary key for the Users table. However, it is a string, not an int. Performance may suffer anyway, and the indexing will be affected. But, thanks to a model binder, if I want to change this in the future, it will only have to be done in one place.</p><p>References:</p><a href=\"http://www.hanselman.com/blog/IPrincipalUserModelBinderInASPNETMVCForEasierTesting.aspx">IPrincipal (User) ModelBinder in ASP.NET MVC for easier testing</a><br><br><a href=\"http://stackoverflow.com/questions/5195027/multi-user-app-with-mvc3-asp-net-membership-user-authentication-data-separa">Multi User App with MVC3, ASP.NET Membership - User Authentication / Data Separation</a>
 */ 

public const string content_27112011_b = ""; 
public const string content_27112011_r = ""; 

 /* 
<p>What is the easiest way to validate class properties that have to be stored in a database - for example, if a database field "Title" has a limit of 50 characters, how do I enforce it best? I could set a "Required" attribute directly on the class property, but the Visual Studio Designer that generated this class may not like it. And anyway, if ever need to change the model and regenerate the database, the attribute is likely to be wiped anyway.</p><p>A better idea may be to specify a special class that will handle validation ("buddy class" - funny name which seems to be an official term). I can add a partial declaration to the existing class which will not be wiped if the model changes, and in this declaration I will specify the class that handles validation. As long as the property names of the buddy class exactly match those of the actual class, I should be fine and the valiation will be handled for me by my model!</p><p>The code looks like that:</p><pre class=\"brush:csharp\">[MetadataType(typeof(InBasket_Validation))]<br />public partial class InBasket<br />{<br /><br />}<br /><br />public class InBasket_Validation<br />{<br /> [Required(ErrorMessage = "Title is Required")]<br /> [StringLength(100, ErrorMessage = "Title can not be longer than 100 characters")]<br /> public string Title { get; set; }<br /><br /> [Required(ErrorMessage = "Content is Required")]<br /> [StringLength(5000, ErrorMessage = "Content can not be longer than 5000 characters")]<br /> public string Content { get; set; }<br />}</pre><p>The Metadata attribute specifies the buddy class, and the buddy class specifies validation requirements. The partial InBasket class is empty cause I don't want to add anything to the actual class functionality. The code builds (why wouldn't it? It's more important if it works), and I'll test it when I'm done with the views.</p>

 */ 

public const string content_26112011_b = ""; 
public const string content_26112011_r = ""; 

 /* 
<p>A repository is just a place where data querying is encapsulated. There are several main reasons for a repository:</p><ul><li>Avoid repetition. If I need to write a query, I will first check the repository - maybe it was already implemented</li><li>Encapsulation. Keep all data related code in the same place. Makes refactoring easier and separates logic from data</li><li>Unit testing. Tests can be written against the repository and, if necessary, in such way that the real database is not required</li></ul><p>For the purpose of my sample application, which I explain later, I will now add a repository for the "In Basket". It's extremely simple: each user can have multiple items in the basket. A user can view, edit and delete any of his items. So I need a small number of methods:</p><pre class=\"brush:csharp\">public class InBasketRepository<br />{<br />    private modelGTDContainer db = new modelGTDContainer();<br /><br />    //return all in basket items for a certain user<br />    public IQueryable<InBasket> FindUserInBasketItems(int userID)<br />    { <br />        return db.InBaskets.Where(item => item.UserID == userID);<br />    }<br /><br />    public InBasket GetInBasketItem(int id)<br />    {<br />        return db.InBaskets.Single(item => item.InBasketID == id);<br />    }<br /><br />    public void AddInBasketItem(InBasket item)<br />    {<br />        db.InBaskets.AddObject(item);<br />    }<br /><br />    public void DeleteInBasketItem(InBasket item)<br />    {<br />        db.InBaskets.DeleteObject(item);<br />    }<br /><br />    //persistence<br />    public void Save()<br />    {<br />        db.SaveChanges();<br />    }<br />}</pre><p>It seems logical for the repository to exist in the Models folder.</p><p>And that's it for now - the next step is to create view(s) which will use the repository.</p>

 */ 

public const string content_23112011_b = "<p>As a first experiment with MVC framework, I decided to consider the application that has multiple users where each user has some information stored in the local database. I.e. his \"To Do List\", to which no one else should have access. The problem, then, is to find a way to uniquely identify the user when he logs on (and, on a later stage, to select data that belongs to this user). Here's a bit of a naive first approach.</p>"; 
public const string content_23112011_r = "<p>Create a database to hold the users, with the GUID being the primary key and ID being an identity and autoincremental. I used SQL CE 4.</p><p>App_Data -> Add -> New Item -> SQL Server Compact 4.0 Local Database -> dbUsers.sdf</p><p>Tables -> Create Table</p><a href=\"http://1.bp.blogspot.com/-AEjQ9VcIXk0/Ts3wlreTUHI/AAAAAAAAAVk/uA60srKmNrU/s1600/1.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 298px;\" src=\"http://1.bp.blogspot.com/-AEjQ9VcIXk0/Ts3wlreTUHI/AAAAAAAAAVk/uA60srKmNrU/s320/1.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5678459235299709042\" /></a><p>Create a model from database. Project -> Add New Item -> Data -> ADO.NET Entity Data Model -> modelUsers.edmx -> Add -> Generate From Database -> dbUsers.mdf -> specify the tblUsers table and Finish.</p><a href=\"http://1.bp.blogspot.com/-0wt2Wnst0y4/Ts3wrwDucaI/AAAAAAAAAVw/wIqoNi5UUY4/s1600/2.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 247px; height: 249px;\" src=\"http://1.bp.blogspot.com/-0wt2Wnst0y4/Ts3wrwDucaI/AAAAAAAAAVw/wIqoNi5UUY4/s320/2.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5678459339609633186\" /></a>" + 
    "<p>Create a Controller to work with the Users class</p><a href=\"http://4.bp.blogspot.com/-NNTBlKMjRl8/Ts3wyRq3gMI/AAAAAAAAAV8/kCGJR2EXXUM/s1600/4.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 214px;\" src=\"http://4.bp.blogspot.com/-NNTBlKMjRl8/Ts3wyRq3gMI/AAAAAAAAAV8/kCGJR2EXXUM/s320/4.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5678459451711389890\" /></a><p>Some useful bits of code in the controller:</p><p>To create a user</p><pre class=\"brush:csharp\">" + 
    @"[HttpPost]<br />public ActionResult Create(tblUser tbluser)<br />{<br /> if (ModelState.IsValid)<br /> {<br />  db.tblUsers.AddObject(tbluser);<br />  db.SaveChanges();<br />  return RedirectToAction(""Index"");  <br /> }<br /><br /> return View(tbluser);<br />}" + 
    "</pre><p>To get user details</p><pre class=\"brush:csharp\">public ViewResult Details(int id)<br />{<br /> tblUser tbluser = db.tblUsers.Single(t => t.UserID == id);<br /> return View(tbluser);<br />}</pre><p>Next, I'm going to try and stick some code into the AccountController.cs provided by the MVC application template. I want to insert a new user into my database table when the new user is registered and I want to get the user ID from the database when the user is authenticated successfully. In the future, probably, user ID may not be required at all and I can make the User GUID a primary key.</p><p>So that's how it looks in the Register method of the AccountController:</p><pre class=\"brush:csharp\">" + 
    @"if (createStatus == MembershipCreateStatus.Success)<br />{<br /> //Insert a user into the database<br /><br /> tblUser user = new tblUser();<br /><br /> MembershipUser mUser = Membership.GetUser(model.UserName);<br /> if (mUser != null)<br /> {<br />  user.UserGUID = mUser.ProviderUserKey.ToString();<br /><br />  using (dbUsersEntities db = new dbUsersEntities())<br />  {<br />   db.tblUsers.AddObject(user);<br />   db.SaveChanges();<br />  }<br /> }<br /><br /> FormsAuthentication.SetAuthCookie(model.UserName, false /* createPersistentCookie */);<br /> return RedirectToAction(""Index"", ""Home"");<br />}" + 
    "</pre><p>And this is in the LogOn method of the AccountController:</p><pre class=\"brush:csharp\">" + 
    @"if (Membership.ValidateUser(model.UserName, model.Password))<br />{<br /> //user is valid, find his ID in the tblUsers<br /> tblUser tbluser;<br /> using (dbUsersEntities db = new dbUsersEntities())<br /> {<br />  MembershipUser mUser = Membership.GetUser(model.UserName);<br />  if (mUser != null)<br />  {<br />   string guid = mUser.ProviderUserKey.ToString();<br />   tbluser = db.tblUsers.Single(t => t.UserGUID == guid);<br />  }<br /> }<br /><br /> FormsAuthentication.SetAuthCookie(model.UserName, model.RememberMe);<br /> if (Url.IsLocalUrl(returnUrl) && returnUrl.Length > 1 && returnUrl.StartsWith(""/"")<br />  && !returnUrl.StartsWith(""//"") && !returnUrl.StartsWith(""/\\""))<br /> {<br />  return Redirect(returnUrl);<br /> }<br /> else<br /> {<br />  return RedirectToAction(""Index"", ""Home"");<br /> }<br />}" + 
    "</pre><p>And a quick Index view for the UsersController to verify that the users are actually inserted in the database:</p><pre class=\"brush:html\">" + 
    "@foreach (var item in Model) {<br />    &lt;tr&gt;<br />  &lt;td&gt;<br />   @Html.DisplayFor(modelItem =&gt; item.UserID)<br />  &lt;/td&gt;<br />  &lt;td&gt;<br />   @Html.DisplayFor(modelItem =&gt; item.UserGUID)<br />  &lt;/td&gt;<br />    &lt;/tr&gt;<br />}" + 
    "</pre><p>Register a user</p><a href=\"http://2.bp.blogspot.com/-my_3hX6EzVU/Ts3w6nV0yuI/AAAAAAAAAWI/eVOCfRsXOBM/s1600/5.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 150px;\" src=\"http://2.bp.blogspot.com/-my_3hX6EzVU/Ts3w6nV0yuI/AAAAAAAAAWI/eVOCfRsXOBM/s320/5.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5678459594967665378\" /></a><p>And then verify that a user with that ID and GUID is now present in the tblUsers.</p><a href=\"http://4.bp.blogspot.com/-x2nrphFM5sY/Ts3xCTtTWrI/AAAAAAAAAWU/043fLUgznVk/s1600/6.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 238px; height: 320px;\" src=\"http://4.bp.blogspot.com/-x2nrphFM5sY/Ts3xCTtTWrI/AAAAAAAAAWU/043fLUgznVk/s320/6.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5678459727136381618\" /></a><p>The concept looks feasible, now on to refining and improving it.</p>"; 

public const string content_22112011_b = ""; 
public const string content_22112011_r = ""; 

 /* 
<p>NuGet is a "Package Manager" that can and should be used with Visual Studio 2010 because it makes installing and updating the libraries, frameworks and extensions so much easier. To install NuGet, I go to Tools -> Extension Manager within Visual Studio and search for the NuGet in the online gallery. In the search results, all I have to do is click "Install".</p><a href=\"http://3.bp.blogspot.com/-TanS2555gLA/TsuVBOh5RwI/AAAAAAAAAUE/FosetopicPg/s1600/1.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 265px; height: 320px;\" src=\"http://3.bp.blogspot.com/-TanS2555gLA/TsuVBOh5RwI/AAAAAAAAAUE/FosetopicPg/s320/1.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5677795603543312130\" /></a><a href=\"http://4.bp.blogspot.com/-UXblff22tks/TsuVGX8FndI/AAAAAAAAAUQ/OcpyAzIvTFU/s1600/1.5.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 221px;\" src=\"http://4.bp.blogspot.com/-UXblff22tks/TsuVGX8FndI/AAAAAAAAAUQ/OcpyAzIvTFU/s320/1.5.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5677795691968437714\" /></a><p>Now, what if I have Entity Framework installed and want to update version 4 to 4.2? I don't have to search it somewhere on download.microsoft.com or elsewhere. Right within my project I go to References, right-click and select "Add library package reference".</p><a href=\"http://4.bp.blogspot.com/-Wc_Y0TdosTA/TsuVOhvoP3I/AAAAAAAAAUc/b6L8zhrUsoo/s1600/1.6.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 186px;\" src=\"http://4.bp.blogspot.com/-Wc_Y0TdosTA/TsuVOhvoP3I/AAAAAAAAAUc/b6L8zhrUsoo/s320/1.6.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5677795832039489394\" /></a><p>The Entity Framework is installed, but it's version 4.1.</p><a href=\"http://4.bp.blogspot.com/-kCaxkafPogo/TsuVpq_Y20I/AAAAAAAAAU0/XW_nUCzPSf8/s1600/1.7.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 214px;\" src=\"http://4.bp.blogspot.com/-kCaxkafPogo/TsuVpq_Y20I/AAAAAAAAAU0/XW_nUCzPSf8/s320/1.7.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5677796298377976642\" /></a><p>I select "Updates" from the menu on the left and immediately see that 4.2 is available. I select "Update", accept terms and conditions and I'm done.</p><a href=\"http://1.bp.blogspot.com/-UN_r9sVqSDg/TsuVzSbic4I/AAAAAAAAAVA/EMNzyyLmI3o/s1600/2.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 214px;\" src=\"http://1.bp.blogspot.com/-UN_r9sVqSDg/TsuVzSbic4I/AAAAAAAAAVA/EMNzyyLmI3o/s320/2.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5677796463583851394\" /></a><p>Steps that are not required: searching for an update package, manual download of the package, manual uninstall of the previous version, manual install of the new version, verifying that I save the downloaded package in an easily accessible location in case anyone in my team also needs it ... Time saved per package update: anywhere between 3 and 30 minutes.</p><p>However, it does not always go smoothly. Just today I tried to add a package "on the fly". Right-click my model, go to "Add code generation item", select "ADO.NET C# DbContext Generator" and click "Install". And here Visual Studio stopped responding.</p><a href=\"http://4.bp.blogspot.com/-Q44iDJO103k/TsuV6T-tGjI/AAAAAAAAAVM/Mt454KLGoZc/s1600/3.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 304px; height: 314px;\" src=\"http://4.bp.blogspot.com/-Q44iDJO103k/TsuV6T-tGjI/AAAAAAAAAVM/Mt454KLGoZc/s320/3.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5677796584258869810\" /></a><a href=\"http://4.bp.blogspot.com/-zSsQQiwuOzI/TsuWAI0S2dI/AAAAAAAAAVY/FdL8fHZFc3w/s1600/4.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 221px;\" src=\"http://4.bp.blogspot.com/-zSsQQiwuOzI/TsuWAI0S2dI/AAAAAAAAAVY/FdL8fHZFc3w/s320/4.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5677796684341631442\" /></a><p>I killed it, repeated the sequence of actions and it stopped responding again. So I started it and added the package through the Tools -> Extension Manager as described above and it worked perfectly. So, don't ask too much from your favourite IDE.</p>

 */ 

public const string content_18112011_b = ""; 
public const string content_18112011_r = ""; 

 /* 
<p>While I did not have a chance to properly configure my GitHub access yet (I think my corporate network is blocking some connections, so I'll try from home) I needed to checkout some code from code.google.com.</p><a href=\"http://4.bp.blogspot.com/-Pk8aRE_T4gc/TsZEv2Dka8I/AAAAAAAAASg/7yd5lhCWyA8/s1600/0.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 73px;\" src=\"http://4.bp.blogspot.com/-Pk8aRE_T4gc/TsZEv2Dka8I/AAAAAAAAASg/7yd5lhCWyA8/s320/0.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5676299969102113730\" /></a><p>Following the advice, I searched around for a Windows SVN client and downloaded Tortoise SVN</p><p><a href=\"http://tortoisesvn.net/downloads.html">Tortoise SVN</a></p><p>It does not have a UI as such.</p><a href=\"http://4.bp.blogspot.com/-rpozq5IozXQ/TsZE1h9VYTI/AAAAAAAAASs/1fRXnoywxUE/s1600/1.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 115px;\" src=\"http://4.bp.blogspot.com/-rpozq5IozXQ/TsZE1h9VYTI/AAAAAAAAASs/1fRXnoywxUE/s320/1.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5676300066786468146\" /></a><p>It is integrated into Windows Explorer and displays the menu on the right-click. To get code, I have to select "SVN Checkout".</p><a href=\"http://3.bp.blogspot.com/-aqLBrCm5eEs/TsZE8MHmr3I/AAAAAAAAAS4/xNW_rfe7Lh8/s1600/2.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 211px; height: 320px;\" src=\"http://3.bp.blogspot.com/-aqLBrCm5eEs/TsZE8MHmr3I/AAAAAAAAAS4/xNW_rfe7Lh8/s320/2.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5676300181183049586\" /></a><p>The checkout screen is quite self-explanatory.</p><a href=\"http://2.bp.blogspot.com/-eWbRN8f4DDg/TsZFCgiTU4I/AAAAAAAAATE/1wpD-nXKn7U/s1600/3.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 263px;\" src=\"http://2.bp.blogspot.com/-eWbRN8f4DDg/TsZFCgiTU4I/AAAAAAAAATE/1wpD-nXKn7U/s320/3.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5676300289742951298\" /></a><p>However, my first attempt was unsuccessful.</p><a href=\"http://2.bp.blogspot.com/-C-UvHLyVORs/TsZFJXD8ftI/AAAAAAAAATQ/3WYMb8SPMPA/s1600/4.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 82px;\" src=\"http://2.bp.blogspot.com/-C-UvHLyVORs/TsZFJXD8ftI/AAAAAAAAATQ/3WYMb8SPMPA/s320/4.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5676300407458791122\" /></a><p>I immediately suspected the corporate proxy server. Tortoise SVN has settings that are accessed through Program Files, so after some digging around I came up with the correct network settings.</p><a href=\"http://3.bp.blogspot.com/-ZlOMoZiX8yM/TsZFP9ubptI/AAAAAAAAATc/8-Fw2mbKnWA/s1600/5.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 211px;\" src=\"http://3.bp.blogspot.com/-ZlOMoZiX8yM/TsZFP9ubptI/AAAAAAAAATc/8-Fw2mbKnWA/s320/5.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5676300520916756178\" /></a><p>Things went smoothly from there on.</p><a href=\"http://3.bp.blogspot.com/-RauN_z_d2Y0/TsZFWs_4xQI/AAAAAAAAATo/ajL6oHHLMDM/s1600/6.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 77px;\" src=\"http://3.bp.blogspot.com/-RauN_z_d2Y0/TsZFWs_4xQI/AAAAAAAAATo/ajL6oHHLMDM/s320/6.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5676300636685649154\" /></a><a href=\"http://4.bp.blogspot.com/-m7Vh8pIlDVA/TsZFeh_JepI/AAAAAAAAAT0/-Mgh1Y3CoHw/s1600/7.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 144px;\" src=\"http://4.bp.blogspot.com/-m7Vh8pIlDVA/TsZFeh_JepI/AAAAAAAAAT0/-Mgh1Y3CoHw/s320/7.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5676300771168713362\" /></a><p>Much easier than GitHub/GitExtensions so far! From zero knowledge about the application (Tortoise SVN) to a checked out solution in, probably, about 10 minutes - about as much as this post took, and even less if I was accessing it from home without any proxies. Next time I'll try to add some of my code to code.google.com</p><p>Reference:</p><p><a href=\"http://stackoverflow.com/questions/41766/how-do-i-download-code-using-svn-tortoise-from-google-code">How do I download code using SVN/Tortoise from Google Code?</a></p>

 */ 

public const string content_14112011_b = "<p>If a class structure is based on the underlying database, it may be useful to be able to automatically generate a class \"stub\" based on the SQL Server table. I looked up the ways to do it without too much upfront time investment, and decided to follow one of the approaches.</p>"; 
public const string content_14112011_r = "<p>First, a table have to be created to define the types in SQL Server and corresponding types in the language of choice - C# for me. The table is created by the following script:</p><pre class=\"brush:sql\">" + 
    @"/****** Object:  Table [dbo].[DbVsCSharpTypes]    Script Date: 03/20/2010 03:07:56 ******/<br />IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DbVsCSharpTypes]') <br />AND type in (N'U'))<br />DROP TABLE [dbo].[DbVsCSharpTypes]<br />GO<br /><br />/****** Object:  Table [dbo].[DbVsCSharpTypes]    Script Date: 03/20/2010 03:07:56 ******/<br />SET ANSI_NULLS ON<br />GO<br /><br />SET QUOTED_IDENTIFIER ON<br />GO<br /><br />CREATE TABLE [dbo].[DbVsCSharpTypes](<br /> [DbVsCSharpTypesId] [int] IDENTITY(1,1) NOT NULL,<br /> [Sql2008DataType] [varchar](200) NULL,<br /> [CSharpDataType] [varchar](200) NULL,<br /> [CLRDataType] [varchar](200) NULL,<br /> [CLRDataTypeSqlServer] [varchar](2000) NULL,<br /><br /> CONSTRAINT [PK_DbVsCSharpTypes] PRIMARY KEY CLUSTERED <br />(<br /> [DbVsCSharpTypesId] ASC<br />)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]<br />) ON [PRIMARY]<br /><br />GO<br /><br />SET NOCOUNT ON;<br />SET XACT_ABORT ON;<br />GO<br /><br />SET IDENTITY_INSERT [dbo].[DbVsCSharpTypes] ON;<br />BEGIN TRANSACTION;<br />INSERT INTO [dbo].[DbVsCSharpTypes]([DbVsCSharpTypesId], [Sql2008DataType], [CSharpDataType], [CLRDataType], [CLRDataTypeSqlServer])<br />SELECT 1, N'bigint', N'short', N'Int64, Nullable<Int64>', N'SqlInt64' UNION ALL<br />SELECT 2, N'binary', N'byte[]', N'Byte[]', N'SqlBytes, SqlBinary' UNION ALL<br />SELECT 3, N'bit', N'bool', N'Boolean, Nullable<Boolean>', N'SqlBoolean' UNION ALL<br />SELECT 4, N'char', N'char', NULL, NULL UNION ALL<br />SELECT 5, N'cursor', NULL, NULL, NULL UNION ALL<br />SELECT 6, N'date', N'DateTime', N'DateTime, Nullable<DateTime>', N'SqlDateTime' UNION ALL<br />SELECT 7, N'datetime', N'DateTime', N'DateTime, Nullable<DateTime>', N'SqlDateTime' UNION ALL<br />SELECT 8, N'datetime2', N'DateTime', N'DateTime, Nullable<DateTime>', N'SqlDateTime' UNION ALL<br />SELECT 9, N'DATETIMEOFFSET', N'DateTimeOffset', N'DateTimeOffset', N'DateTimeOffset, Nullable<DateTimeOffset>' UNION ALL<br />SELECT 10, N'decimal', N'decimal', N'Decimal, Nullable<Decimal>', N'SqlDecimal' UNION ALL<br />SELECT 11, N'float', N'double', N'Double, Nullable<Double>', N'SqlDouble' UNION ALL<br />SELECT 12, N'geography', NULL, NULL, N'SqlGeography is defined in Microsoft.SqlServer.Types.dll, which is installed with SQL Server and can be downloaded from the SQL Server 2008 feature pack.' UNION ALL<br />SELECT 13, N'geometry', NULL, NULL, N'SqlGeometry is defined in Microsoft.SqlServer.Types.dll, which is installed with SQL Server and can be downloaded from the SQL Server 2008 feature pack.' UNION ALL<br />SELECT 14, N'hierarchyid', NULL, NULL, N'SqlHierarchyId is defined in Microsoft.SqlServer.Types.dll, which is installed with SQL Server and can be downloaded from the SQL Server 2008 feature pack.' UNION ALL<br />SELECT 15, N'image', NULL, NULL, NULL UNION ALL<br />SELECT 16, N'int', N'int', N'Int32, Nullable<Int32>', N'SqlInt32' UNION ALL<br />SELECT 17, N'money', N'decimal', N'Decimal, Nullable<Decimal>', N'SqlMoney' UNION ALL<br />SELECT 18, N'nchar', N'string', N'String, Char[]', N'SqlChars, SqlString' UNION ALL<br />SELECT 19, N'ntext', NULL, NULL, NULL UNION ALL<br />SELECT 20, N'numeric', N'decimal', N'Decimal, Nullable<Decimal>', N'SqlDecimal' UNION ALL<br />SELECT 21, N'nvarchar', N'string', N'String, Char[]', N'SqlChars, SqlStrinG SQLChars is a better match for data transfer and access, and SQLString is a better match for performing String operations.' UNION ALL<br />SELECT 22, N'nvarchar(1), nchar(1)', N'string', N'Char, String, Char[], Nullable<char>', N'SqlChars, SqlString' UNION ALL<br />SELECT 23, N'real', N'single', N'Single, Nullable<Single>', N'SqlSingle' UNION ALL<br />SELECT 24, N'rowversion', N'byte[]', N'Byte[]', NULL UNION ALL<br />SELECT 25, N'smallint', N'smallint', N'Int16, Nullable<Int16>', N'SqlInt16' UNION ALL<br />SELECT 26, N'smallmoney', N'decimal', N'Decimal, Nullable<Decimal>', N'SqlMoney' UNION ALL<br />SELECT 27, N'sql_variant', N'object', N'Object', NULL UNION ALL<br />SELECT 28, N'table', NULL, NULL, NULL UNION ALL<br />SELECT 29, N'text', N'string', NULL, NULL UNION ALL<br />SELECT 30, N'time', N'TimeSpan', N'TimeSpan, Nullable<TimeSpan>', N'TimeSpan' UNION ALL<br />SELECT 31, N'timestamp', NULL, NULL, NULL UNION ALL<br />SELECT 32, N'tinyint', N'byte', N'Byte, Nullable<Byte>', N'SqlByte' UNION ALL<br />SELECT 33, N'uniqueidentifier', N'Guid', N'Guid, Nullable<Guid>', N'SqlGuidUser-defined type(UDT)The same class that is bound to the user-defined type in the same assembly or a dependent assembly.' UNION ALL<br />SELECT 34, N'varbinary ', N'byte[]', N'Byte[]', N'SqlBytes, SqlBinary' UNION ALL<br />SELECT 35, N'varbinary(1), binary(1)', N'byte', N'byte, Byte[], Nullable<byte>', N'SqlBytes, SqlBinary' UNION ALL<br />SELECT 36, N'varchar', N'string', N'String, Char[]', N'SqlChars, SqlStrinG SQLChars is a better match for data transfer and access, and SQLString is a better match for performing String operations.' UNION ALL<br />SELECT 37, N'xml', NULL, NULL, N'SqlXml'<br />COMMIT;<br />RAISERROR (N'[dbo].[DbVsCSharpTypes]: Insert Batch: 1.....Done!', 10, 1) WITH NOWAIT;<br />GO<br /><br />SET IDENTITY_INSERT [dbo].[DbVsCSharpTypes] OFF;" + 
    "</pre><p>Here is what results from the script:</p><a href=\"http://2.bp.blogspot.com/-jlHJHP1rmL0/TsFvUkXwLOI/AAAAAAAAARo/9RelmLcoeeQ/s1600/1.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 190px;\" src=\"http://2.bp.blogspot.com/-jlHJHP1rmL0/TsFvUkXwLOI/AAAAAAAAARo/9RelmLcoeeQ/s320/1.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5674939404614905058\" /></a><p>Next, a function that will return the C# type when the SQL Server type is passed to it will be required. It will take it from that table that was just created. This is the script for the function:</p><pre class=\"brush:sql\">" + 
    @"/****** Object:  UserDefinedFunction [dbo].[funcGetCLRTypeBySqlType]    <br />Script Date: 03/23/2010 15:25:09 ******/<br />IF  EXISTS (SELECT * FROM sys.objects <br />WHERE object_id = OBJECT_ID(N'[dbo].[funcGetCLRTypeBySqlType]') <br />AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))<br />DROP FUNCTION [dbo].[funcGetCLRTypeBySqlType]<br />GO <br />/****** Object:  UserDefinedFunction [dbo].[funcGetCLRTypeBySqlType]     <br />Script Date: 03/23/2010 15:25:09 ******/<br />SET ANSI_NULLS ON<br />GO <br />SET QUOTED_IDENTIFIER ON<br />GO <br />CREATE FUNCTION [dbo].[funcGetCLRTypeBySqlType]<br />(@SqlType [nvarchar] (200)) <br />RETURNS [varchar](200) <br />WITH EXECUTE AS CALLER<br />AS <br />BEGIN<br />declare @ClrType varchar(200) <br />SET @ClrType = ( SELECT  TOP 1 CSharpDataType FROM DbVsCSharpTypes <br />WHERE Sql2008DataType= @SqlType)<br />-- Return the result of the function<br />RETURN @ClrType END <br />/*<doc>Used for automatic conversation between tsql and C# types </doc>*/<br />GO" + 
    "</pre><p>Sample of the usage - nothing hard yet.</p><a href=\"http://1.bp.blogspot.com/-oYKCNSpkc5o/TsFveU9siXI/AAAAAAAAAR0/J54GZerQY-o/s1600/2.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 97px;\" src=\"http://1.bp.blogspot.com/-oYKCNSpkc5o/TsFveU9siXI/AAAAAAAAAR0/J54GZerQY-o/s320/2.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5674939572277774706\" /></a><p>A small function just because I want my private variable start from a lower case character</p><pre class=\"brush:sql\">" + 
    @"set ANSI_NULLS ON<br />set QUOTED_IDENTIFIER ON<br />go<br /><br />CREATE FUNCTION [dbo].[lowerCaseFirstCharacter]<br />(@Input [nvarchar] (200))<br />RETURNS [varchar](200) <br />WITH EXECUTE AS CALLER<br />AS <br />BEGIN<br />declare @Result varchar(200) <br />declare @Len int<br />SET @Len = LEN(@Input)<br />SET @Result = LOWER(SUBSTRING(@Input, 1, 1)) + SUBSTRING(@Input, 2, @Len-1)<br /><br />RETURN @Result <br />END" + 
    "</pre><p>And, finally, the stored procedure that generates some C# code:</p><pre class=\"brush:sql\">" + 
    @"IF  EXISTS (SELECT * FROM sys.objects <br />WHERE object_id = OBJECT_ID(N'[dbo].[procUtils_GenerateClass]') AND type in (N'P', N'PC'))<br />DROP PROCEDURE [dbo].[procUtils_GenerateClass]<br />GO <br />/****** Object:  StoredProcedure [dbo].[procUtils_GenerateClass]     <br />Script Date: 03/20/2010 13:10:40 ******/<br />SET ANSI_NULLS ON<br />GO <br />SET QUOTED_IDENTIFIER ON<br />GO  <br />CREATE PROCEDURE [dbo].[procUtils_GenerateClass]<br />@TableName [varchar](50)<br />WITH EXECUTE AS CALLER<br />AS<br />BEGIN -- proc start                                      <br />SET NOCOUNT ON;                                       <br />DECLARE @DbName nvarchar(200 ) <br />select @DbName = DB_NAME()               <br />declare @strCode nvarchar(max) <br />set @strCode = ''  <br /><br />BEGIN TRY        --begin try<br />set @strCode = @strCode +  'namespace ' + @DbName + '.Gen' + CHAR(13) + '{' + CHAR(13)<br />set @strCode = @strCode + CHAR(9) + 'public class ' + @TableName + CHAR(13) + CHAR(9) + '{ ' + CHAR(13)<br /><br />DECLARE @ColNames TABLE                                <br />(                                <br />Number [int] IDENTITY(1,1), --Auto incrementing Identity column<br />ColName [varchar](300) , --The string value                        ,         <br />DataType varchar(50) ,  --the datatype                       <br />IS_NULLABLE nvarchar(5) , --should we add =null in front         <br />CHARACTER_MAXIMUM_LENGTH INT        <br />)                                <br />--Decalre a variable to remember the position of the current delimiter                                <br />DECLARE @CurrentDelimiterPositionVar INT                                 <br />DECLARE @PkColName varchar(200)      <br />set @PkColName = ''<br />declare @ColumnName varchar(200)  <br />--Decalre a variable to remember the number of rows in the table                                <br />DECLARE @Count INT                                <br /><br />INSERT INTO @ColNames         <br />SELECT column_name ,  Data_type , IS_NULLABLE , CHARACTER_MAXIMUM_LENGTH  <br />from INFORMATION_SCHEMA.COLUMNS                             <br />where TABLE_NAME=@TableName                                <br />--Initialize the looper variable                                <br />SET @CurrentDelimiterPositionVar = 1                                <br />--Determine the number of rows in the Table                                <br />SELECT @Count=max(Number) from @ColNames                                <br />--A variable to hold the currently selected value from the table                                <br />DECLARE @ColName varchar(300);                                <br />DECLARE @DataType varchar(50)                      <br />DECLARE @IS_NULLABLE VARCHAR(5)        <br />DECLARE @CHARACTER_MAXIMUM_LENGTH INT        <br />--Loop through until all row processing is done              <br />WHILE @CurrentDelimiterPositionVar <= @Count --1st loop        <br />BEGIN                                <br />--Load current value from the Table                                <br />SELECT @ColName = ColName FROM @ColNames         <br />WHERE Number = @CurrentDelimiterPositionVar        <br />SELECT @DataType = DataType FROM @ColNames         <br />WHERE Number = @CurrentDelimiterPositionVar               <br />SELECT @IS_NULLABLE = IS_NULLABLE FROM @ColNames         <br />WHERE Number = @CurrentDelimiterPositionVar                    <br />SELECT @CHARACTER_MAXIMUM_LENGTH = CHARACTER_MAXIMUM_LENGTH FROM @ColNames         <br />WHERE Number = @CurrentDelimiterPositionVar                     <br />-- get the C# type based on the passed sqlType, )( needs the DbVsCSharpTypes table ) <br />set @DataType =( SELECT  dbo.funcGetCLRTypeBySqlType(@DataType) ) <br />IF @IS_NULLABLE = 'YES'        <br />set @DataType = @DataType + '?' <br />DECLARE @varPrivate nvarchar(200) <br />set @varPrivate = '_' + dbo.lowerCaseFirstCharacter(@ColName)<br /><br />--GENERATE THE PRIVATE MEMBER <br />SET @StrCode = @strCode + CHAR(9)+ CHAR(9) + 'private ' + @DataType + ' ' +  @varPrivate + ';' + CHAR(13) + CHAR(13) <br />-- GENERATE THE PUBLIC MEMBER <br />SET @StrCode = @strCode + CHAR(9)+ CHAR(9) + 'public ' + @DataType +  ' ' + @ColName + CHAR(13) + CHAR(9)+ CHAR(9) + '{' + CHAR(13)<br />SET @StrCode = @strCode + CHAR(9) + CHAR(9) + CHAR(9) + 'get { return ' + @varPrivate + ' } ' + CHAR(13)<br />SET @strCode = @strCode + CHAR(9) + CHAR(9) + CHAR(9) + 'set { ' + @varPrivate +' = value ; }' + CHAR(13) <br />SET @strCode = @strCode + CHAR(9) + CHAR(9) + '}' + CHAR(13) <br /><br />if @CurrentDelimiterPositionVar != @Count         <br />SET @StrCode = @StrCode + ''        <br />IF @DataType != 'timestamp'        <br /> <br />set @strCode = @strCode + char(13)     <br />SET @CurrentDelimiterPositionVar = @CurrentDelimiterPositionVar + 1;                                <br />END                                <br />set @strCode = + @strCode + char(9) + ' } //class ' + @TableName + CHAR(13)<br />set @strCode = + @strCode + ' } //namespace  ' + CHAR(13)<br /><br />PRINT @strCode<br />END TRY                                  <br />BEGIN CATCH                                  <br />print ' Error number: ' + CAST(ERROR_NUMBER() AS varchar(100)) +                         <br />'Error message: ' + ERROR_MESSAGE() + 'Error severity: ' +           <br />CAST(ERROR_SEVERITY() AS varCHAR(9)) +                         <br />'Error state: ' + CAST(ERROR_STATE() AS varchar(100)) +           <br />'XACT_STATE: ' + CAST(XACT_STATE() AS varchar(100))                                  <br />END CATCH                                   <br />END --procedure end                                       <br />/* <doc> Generates a C# class base on DataType conversion</doc>*/<br />GO" + 
    "</pre><p>Here's a test table I used to check the results:</p><a href=\"http://2.bp.blogspot.com/-QW8nJWNZU7c/TsFvteq1N-I/AAAAAAAAASM/SCtcBbmVi9U/s1600/4.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 288px; height: 119px;\" src=\"http://2.bp.blogspot.com/-QW8nJWNZU7c/TsFvteq1N-I/AAAAAAAAASM/SCtcBbmVi9U/s320/4.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5674939832581044194\" /></a><p>Here's the stored procedure output sample:</p><a href=\"http://2.bp.blogspot.com/-zmVIamRZe-Q/TsFvndi5qOI/AAAAAAAAASA/lNSek3OpXWs/s1600/3.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 208px; height: 320px;\" src=\"http://2.bp.blogspot.com/-zmVIamRZe-Q/TsFvndi5qOI/AAAAAAAAASA/lNSek3OpXWs/s320/3.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5674939729200130274\" /></a><p>References</p><p><a href=\"http://stackoverflow.com/questions/2488383/how-can-i-programatically-convert-sql-data-types-to-net-data-types\">How can I programatically convert SQL data-types to .Net data-types?</a></p><p><a href=\"http://ysgitdiary.blogspot.com/2010/03/how-to-generate-classes-based-on-tables.html\">how-to generate classes based on tables in ms sql 2008</a></p><p><a href=\"https://plus.google.com/113035264903177615519/posts/N4qLkwQPmFE#113035264903177615519/posts/N4qLkwQPmFE\">Function to get the C# type based on the tsql type</a></p>"; 

public const string content_11112011_b = ""; 
public const string content_11112011_r = ""; 

 /* 
<p>At this stage I would like learn how to use the GitHub.</p><p><a href=\"https://github.com/">GitHub - Social Coding</a></p><p>This is useful in case I want to make my code accessible to anyone over the Internet. Let's say I want to show someone the example of my work. I create a GitHub account, use Git as my code repository and somehow synchronise it with GitHub. Then any other person will be able to "get the latest version" (or should I say "pull"?) of my code via GitHub. Okay, I just summed up all my knowledge about Git and GitHub until today.</p><p>My goal is to be able to commit and update a Visual Studio project, so I looked and found out that everyone recommends GitExtensions.</p><p><a href=\"http://code.google.com/p/gitextensions/">Git Extensions</a></p><p>This tool allows to control Git without the command line (a handy thing for a long-time Windows user like me!), works well under Windows and has a plugin for Visual Studio. So far, sounds like a perfect tool for my purposes.</p><p>The first thing I did was created a GitHub account.</p><a href=\"http://2.bp.blogspot.com/-u3oHgGZ1SN8/Tr2t-CzuYjI/AAAAAAAAAQg/Xobb2eIb_1c/s1600/gitaccount.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 54px;\" src=\"http://2.bp.blogspot.com/-u3oHgGZ1SN8/Tr2t-CzuYjI/AAAAAAAAAQg/Xobb2eIb_1c/s320/gitaccount.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5673882386974007858\" /></a><p>And created a new repository</p><a href=\"http://2.bp.blogspot.com/-3NxvuZo3zao/Tr2uGyQbfvI/AAAAAAAAAQs/e2a0hZ1AWwE/s1600/repository.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 153px;\" src=\"http://2.bp.blogspot.com/-3NxvuZo3zao/Tr2uGyQbfvI/AAAAAAAAAQs/e2a0hZ1AWwE/s320/repository.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5673882537149824754\" /></a><p>Next, I installed the GitExtension using default settings, briefly checked the 58-page manual and started the gui. The program automatically checks my settings on startup and it looks all was good - I just had to create a username for myself.</p><a href=\"http://1.bp.blogspot.com/-VlcvoGqK7Bs/Tr2uOnNvqBI/AAAAAAAAAQ4/D_Yf5MVjhkM/s1600/gitextensions.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 218px;\" src=\"http://1.bp.blogspot.com/-VlcvoGqK7Bs/Tr2uOnNvqBI/AAAAAAAAAQ4/D_Yf5MVjhkM/s320/gitextensions.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5673882671624726546\" /></a><p>Looked around a little bit and found how to start the Git gui, then look at my repository.</p><a href=\"http://4.bp.blogspot.com/-H7O1POEf9CU/Tr2uWdyPoCI/AAAAAAAAARE/B-FGBB_6YHM/s1600/gitgui_4.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 188px;\" src=\"http://4.bp.blogspot.com/-H7O1POEf9CU/Tr2uWdyPoCI/AAAAAAAAARE/B-FGBB_6YHM/s320/gitgui_4.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5673882806532415522\" /></a><p>Found out how to check the items in. Go a rather scary message but decided to ignore it for now and see if it affects anything later.</p><a href=\"http://1.bp.blogspot.com/-4OxlH30uawU/Tr2ug22CnCI/AAAAAAAAARQ/gMf96zS7KOM/s1600/gitgui_5.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 218px;\" src=\"http://1.bp.blogspot.com/-4OxlH30uawU/Tr2ug22CnCI/AAAAAAAAARQ/gMf96zS7KOM/s320/gitgui_5.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5673882985057917986\" /></a><p>For now it looks like my files are in. Next time, I will explore the checking in and out.</p><a href=\"http://3.bp.blogspot.com/-JbDogUGa_Ac/Tr2uo2cc78I/AAAAAAAAARc/TkCbzrw2gtA/s1600/git_committed.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 234px;\" src=\"http://3.bp.blogspot.com/-JbDogUGa_Ac/Tr2uo2cc78I/AAAAAAAAARc/TkCbzrw2gtA/s320/git_committed.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5673883122389544898\" /></a>

 */ 

public const string content_09112011_b = ""; 
public const string content_09112011_r = ""; 

 /* 
<p>Now I have to use my WFPFlashLibrary I created in the last post in my main WPF view. I have to add the namespace for the project that contains my Flash control.</p><pre class=\"brush:csharp\">xmlns:Flash="clr-namespace:WPFFlashLibrary;assembly=WPFFlashLibrary"</pre><p>I place my control in the WPF markup and bind Movie and Play.</p><pre class=\"brush:xml\">&lt;Grid&gt;<br /> &lt;Flash:FlashControl Width="400" Height="400" Movie="{Binding Movie,UpdateSourceTrigger=PropertyChanged}" Play="{Binding Play,UpdateSourceTrigger=PropertyChanged}" /&gt;<br />&lt;/Grid&gt;</pre><p>This is the sample code which should be placed in the view. The Init will contain any code that needs to run on the ViewModel creation and will return the instance of the ViewModel. The PlayFlash will be then called right in the constructor of the view for simplicity, but of course it does not have to be there - it can be triggered whenever necessary.</p><pre class=\"brush:csharp\">public partial class TestFlashView : System.Windows.Controls.UserControl<br />{<br /> public TestFlash(IUnityContainer container)<br /> {<br />  InitializeComponent();<br /><br />  DataContext = container.Resolve<TestFlashViewModel>().Init(container);<br />  (DataContext as TestFlashViewModel).PlayFlash();<br /> }<br />}</pre><p>And this is the implementation of the ViewModel. As soon as the PlayFlash() assigns values to the Movie and Play, the control will play the Flash animation (assuming the file is in the specified location!).</p><pre class=\"brush:csharp\">public class TestFlashViewModel : ViewModelBase<br />{<br /> public TestFlashViewModel(IUnityContainer container):base(container)<br /> {<br /><br /> }<br /> <br /> virtual public TestFlashViewModel Init(IUnityContainer container)<br /> {<br />  //initialization - login etc.<br />  return this;<br /> }<br /><br /> //*****************************************************************************************<br /><br /> #region properties<br /><br /> string _movie;<br /> public string Movie<br /> {<br />  get { return _movie; }<br />  set { OnPropertyChanged(ref _movie , value,"Movie"); }<br /> }<br /><br /> bool _play;<br /> public bool Play<br /> {<br />  get { return _play; }<br />  set { OnPropertyChanged(ref _play, value, "Play"); }<br /> }<br /><br /> #endregion<br /><br /> public void PlayFlash()<br /> {<br />  Movie = @"c:\flash\flash.swf";<br />  Play = true;<br /> }<br />}</pre><p>And that's the end of my small investigation. Unfortunately I found out that the plans have changed, the scope has been reduced and the flash movie is not required any longer. So I won't play with this control for anymore for now and move on to other things. Still was worth the effort.</p>

 */ 

public const string content_05112011_b = ""; 
public const string content_05112011_r = ""; 

 /* 

<p>The Flash ActiveX control can not be added directly to the XAML file. Okay, the solution is well-known - just like with the Windows Forms control, you can use WindowsFormsHost to, well, host it - that's what the host is for. Then we add some code to the code-behind to load the movie and play it, and everything works. Right? Sort of. What if I'm trying my best to do the things the MVVM way? My code-behind file is usually empty, and all the business logic happens in the ViewModel. My XAML file does not have any button1_click event handlers, but rather is linked to the ViewModel by binding and is notified when something changes by means of OnPropertyChanged. What to do? The hard part is to come up with something that can be placed into the XAML file. The easy part is to place that something into the XAML file and bind it to the ViewModel. I'll start with the hard part, and use Visual Studio 2010.</p><p>Let's assume that the user controls are in a separate project. So I create a new project using the "WPF User Control Library" template and call it WPFControlLibrary. Let's delete UserControl1.xaml so it doesn't get in the way. First I'll add references to the COM components I may need.</p><p><a href=\"http://3.bp.blogspot.com/-djcefsKT5z0/TrNz7cHUXuI/AAAAAAAAAPg/judkrCV462I/s1600/1.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 262px;\" src=\"http://3.bp.blogspot.com/-djcefsKT5z0/TrNz7cHUXuI/AAAAAAAAAPg/judkrCV462I/s320/1.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5671003820785950434\" /></a></p><p>Now I add a User Control (not the User Control - WPF yet!) and call it FlashWrapper. I add the AxShockwaveFlash control to it and call it axShockwafeFlash. For now let's worry only about loading and playing a movie. That's all the code I'll need:</p><p><pre class=\"brush:csharp\">using System.Windows.Forms;<br /><br />namespace WPFControlLibrary<br />{<br />    public partial class FlashWrapper : UserControl<br />    {<br />        public FlashWrapper()<br />        {<br />            InitializeComponent();<br />        }<br /><br />        public void LoadMovie(string movie)<br />        {<br />            axShockwaveFlash.Movie = movie;<br />        }<br /><br />        public void Play()<br />        {<br />            axShockwaveFlash.Play();<br />        }<br /><br />        public void Stop()<br />        {<br />            axShockwaveFlash.Stop();<br />        }<br />    }<br />}</pre></p><p>Now is the time to add the User Control - WPF. I call it FlashWPF.xaml. The XAML file is where the WindowsFormsHost comes to play - here I will host my FlashWrapper. Don't forget to add a reference to WindowsFormsIntegration!</p><p><pre class=\"brush:xml\">&lt;UserControl x:Class="WPFControlLibrary.FlashWPF"<br />             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"<br />             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"<br />             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" <br />             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" <br />             xmlns:local="clr-namespace:WPFControlLibrary" <br />             mc:Ignorable="d" <br />             d:DesignHeight="300" d:DesignWidth="300"&gt;<br />    &lt;Grid  &gt;<br />        &lt;WindowsFormsHost &gt;<br />            &lt;WindowsFormsHost.Child&gt;<br />                &lt;local:FlashWrapper x:Name="FlashPlayer" /&gt;<br />            &lt;/WindowsFormsHost.Child&gt;<br />        &lt;/WindowsFormsHost&gt;<br />    &lt;/Grid&gt;<br />&lt;/UserControl&gt;</pre></p><p>And still not much of C# code yet.</p><p><pre class=\"brush:csharp\">using System.Windows.Controls;<br /><br />namespace WPFControlLibrary<br />{<br />    public partial class FlashWPF : UserControl<br />    {<br />        public FlashWPF()<br />        {<br />            InitializeComponent();<br />        }<br /><br />        public void LoadMovie(string movie)<br />        {<br />            FlashPlayer.LoadMovie(movie);<br />        }<br /><br />        public void Play(bool value)<br />        {<br />            if (value)<br />                FlashPlayer.Play();<br />            else<br />                FlashPlayer.Stop();<br />        }<br />    }<br />}</pre></p><p>Last, and the most complex and cryptic step is to add a custom control. This will be a link between the MVVM application and the WPF control which hosts the wrapper which wraps the ActiveX control.</p><p>This is the ViewModel.<br />That is bound to the WPF custom control.<br />That hosts the C# wrapper.<br />That wraps the ActiveX control.<br />That plays the movie.</p><p>I think I got carried away a bit.</p><p>Ok, let's add a Custom Control - WPF and call it FlashControl. That's how it looks if all was done correctly:</p><p><pre class=\"brush:csharp\">public class FlashControl : Control<br />{<br /> static FlashControl()<br /> {<br />  DefaultStyleKeyProperty.OverrideMetadata(typeof(FlashControl), new FrameworkPropertyMetadata(typeof(FlashControl)));<br /> }<br />}</pre></p><p>I have to modify it to expose three DependencyProperties: Movie, Play, and finally itself so it can be created in the MVVM application. And this is the end result:</p><p><pre class=\"brush:csharp\">public class FlashControl : Control<br />{<br /> static FlashControl()<br /> {<br />  DefaultStyleKeyProperty.OverrideMetadata(typeof(FlashControl), new FrameworkPropertyMetadata(typeof(FlashControl)));<br /> }<br /><br /> public FlashControl()<br /> {<br />  FlashPlayer = new FlashWPF();<br /> }<br /><br /> //*****************************************************************************************<br /><br /> //Movie property definition<br /><br /> public static readonly DependencyProperty MovieProperty = DependencyProperty.RegisterAttached("Movie", typeof(string), typeof(FlashControl), new PropertyMetadata(MovieChanged));<br /><br /> private static void MovieChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)<br /> {<br />  (d as FlashControl).Movie = (string)e.NewValue;<br /> }<br /><br /> //Play movie property definition<br /> public static readonly DependencyProperty PlayProperty = DependencyProperty.RegisterAttached("Play", typeof(bool), typeof(FlashControl), new PropertyMetadata(PlayChanged));<br /><br /> private static void PlayChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)<br /> {<br />  (d as FlashControl).Play = (bool)e.NewValue;<br /> }<br /><br /> //Flash player WindowFormHost<br /> public static readonly DependencyProperty FlashPlayerProperty = DependencyProperty.RegisterAttached("FlashPlayer", typeof(FlashWPF), typeof(FlashControl), new PropertyMetadata(FlashPlayerChanged));<br /><br /> private static void FlashPlayerChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)<br /> {<br />  (d as FlashControl).FlashPlayer = (FlashWPF)e.NewValue;<br /> }<br /><br /> //*****************************************************************************************<br /><br /> public string Movie<br /> {<br />  get { return (string)this.GetValue(MovieProperty); }<br />  set <br />  { <br />   this.SetValue(MovieProperty, value);<br />   FlashPlayer.LoadMovie(value);<br />  }<br /> }<br /><br /> public bool Play<br /> {<br />  get { return (bool)this.GetValue(PlayProperty); }<br />  set <br />  { <br />   this.SetValue(PlayProperty, value);<br />   FlashPlayer.Play(value);<br />  }<br /> }<br /><br /> public FlashWPF FlashPlayer<br /> {<br />  get { return (FlashWPF)this.GetValue(FlashPlayerProperty); }<br />  set { this.SetValue(FlashPlayerProperty, value); }<br /> }<br />}</pre></p><p>And the XAML file (which is for some reason called Generic.xaml and also when I tried to rename it I started getting errors, so I decided to leave the name alone) - I modified it slightly, but that's a matter of personal preference:</p><p><pre class=\"brush:xml\">&lt;ResourceDictionary<br />    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"<br />    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"<br />    xmlns:local="clr-namespace:WPFControlLibrary"&gt;<br />    &lt;Style TargetType="{x:Type local:FlashControl}"&gt;<br />        &lt;Setter Property="Template"&gt;<br />            &lt;Setter.Value&gt;<br />                &lt;ControlTemplate TargetType="{x:Type local:FlashControl}"&gt;<br />                    &lt;Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch"&gt;<br />                        &lt;ContentControl Content="{TemplateBinding FlashPlayer}" /&gt;<br />                    &lt;/Grid&gt;<br />                &lt;/ControlTemplate&gt;<br />            &lt;/Setter.Value&gt;<br />        &lt;/Setter&gt;<br />    &lt;/Style&gt;<br />&lt;/ResourceDictionary&gt;</pre></p><p>And the hard part is over!</p>
 */ 

public const string content_03112011_b = ""; 
public const string content_03112011_r = ""; 

 /* 
<p>While writing the previous post, I had to find out how to show the special HTML characters, like <b>&amp;nbsp;</b></p><p>Because if I just type <b>&amp;nbsp;</b> I will only see the space. The browser will automatically convert the <b>&amp;nbsp;</b> to space, the <b>&amp;amp;</b> to an ampersand and so on. But I wanted to display exactly what I had in my XML.</p><p>So, to display <b>&amp;nbsp;</b> just as it is, I have to type <b>&amp;amp;nbsp;</b> in my post. <b>&amp;amp;</b> gets converted to ampersand and the <b>nbsp;</b> part is just displayed as it is.</p><p>What did I type to display <b>&amp;amp;nbsp;</b> in the line above? Well, <b>&amp;amp;amp;nbsp;</b> of course. I'd better stop here before I confuse myself and everyone else.</p>

 */ 

public const string content_02112011_b = ""; 
public const string content_02112011_r = ""; 

 /* 
<p>Everyone knows that some symbols such as <strong>&lt;</strong>, <strong>&gt;</strong>, <strong>&amp;</strong>, <strong>&quot;</strong> "break" the XML. That's why Server.HtmlEncode is used to replace them with correct HTML code, like <strong>&amp;amp;</strong> for the ampersand and so on. After that replacement the XML is supposed to be "safe". However, not under every possible condition. One of the applications I work on prints barcodes on tickets. The number is encoded using Interleaved 2 of 5 format. The encoding is performed by a function provided by the company IDAutomation and the output generally looks like this: <strong>"Ë'Zj`!/ÉI?!&!Ì"</strong>. The output is then passed through the Server.HtmlEncode and added to the XML, which is fed to a printer.</p><p>However, yesterday I received a bug report and the error essentially boiled down to</p><blockquote>Type : System.Xml.XmlException, System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=blah Message : An error occurred while parsing EntityName. Line 1, position 2832.<br />Source : System.Xml<br />Help link :<br />LineNumber : 1<br />LinePosition : 2832<br />SourceUri :<br />Data : System.Collections.ListDictionaryInternal<br />TargetSite : Void Throw(System.Exception)<br />Stack Trace :    at System.Xml.XmlTextReaderImpl.Throw(Exception e)<br />   at System.Xml.XmlTextReaderImpl.Throw(String res, String arg)<br />   at System.Xml.XmlTextReaderImpl.Throw(String res)<br />   at System.Xml.XmlTextReaderImpl.ParseEntityName()<br />   at System.Xml.XmlTextReaderImpl.ParseEntityReference()<br />   at System.Xml.XmlTextReaderImpl.Read()<br />   at System.Xml.XmlLoader.LoadNode(Boolean skipOverWhitespace)<br />   at System.Xml.XmlLoader.LoadDocSequence(XmlDocument parentDoc)<br />   at System.Xml.XmlLoader.Load(XmlDocument doc, XmlReader reader, Boolean preserveWhitespace)<br />   at System.Xml.XmlDocument.Load(XmlReader reader)<br />   at System.Xml.XmlDocument.LoadXml(String xml)<br />   at PrintController.AddDoc(String xmlString)</blockquote><p>And, fortunately, I got two XML samples, one of those was causing an error, and the other one was not.</p><p>This bit in the encoded XML did not cause any problems:</p><pre class=\"brush:xml\">&lt;text x="centre" y="620" font="IDAutomationHI25L" size="20" bold="false" italic="false" underline="false"&gt;<br />&amp;#203;'Zj`!/&amp;#201;I5!'!&amp;#204;&lt;/text&gt;</pre><p>This one, however, did, regardless of the "safely encoded" ampersand</p><pre class=\"brush:xml\">&lt;text x="centre" y="620" font="IDAutomationHI25L" size="20" bold="false" italic="false" underline="false"&gt;<br />&amp;#203;'Zj`!/&amp;#201;I?!&amp;amp;!&amp;#204;&lt;/text&gt;</pre><p>Solution? I had to think about it and that's what I came up with.</p><p><pre class="brush:vb">xmlData = xmlData.Replace("barcode", Server.HtmlEncode(mybarcode).Replace("&amp;amp;", "&amp;#038;"))</pre></p><p>Because <strong>"&amp;#038;"</strong> is the HTML ASCII value for <strong>"&"</strong>. And it worked like a charm. Now I just need to convert it to a small function instead which takes care of all "strange" characters: <, >, & and "</p><p>References</p><p><a href=\"http://msdn.microsoft.com/en-us/library/ms525347(v=vs.90).aspx">Server.HTMLEncode Method</a></p><p><a href=\"http://www.nationalfinder.com/html/char-asc.htm">HTML ASCII Characters</a></p>

 */ 

public const string content_25102011_b = ""; 
public const string content_25102011_r = ""; 

 /* 
<p>It's time to step back from working on bits and pieces of something large and remind myself how to create a MVVM project from scratch. There are probably templates available now but I'll start with an empty C# WPF project and call it MVVM for simplicity. Renamed MainWindow to Shell everywhere in the solution because Shell is the conventional name for a top-level window in the application built in the Composite Application Library.</p><p>Composite Application Library displays and hides controls through the use of Regions. Several controls can be displayed as regions, one of them is ItemsControl.</p><p>An attached property RegionManager.RegionName indicates which region is associated with the control. So, in the Shell.xaml I replaced the Grid element with the ItemsControl element:</p><pre class=\"brush:xml\">&lt;ItemsControl Name="MainRegion" cal:RegionManager.RegionName="MainRegion"/&gt;</pre><p>For the code to compile, the following line has to be added to the Window tag</p><pre class=\"brush:xml\">xmlns:cal="http://www.codeplex.com/CompositeWPF"</pre><p>and the Microsoft.Practices.Prism dll has to be referenced in the project which contains the definition of RegionManager.RegionName</p><p>The bootstrapper initializes the application build using the Composite Application Library. At this point the bootstrapper only returns the new instance of a Shell class. Added the Bootstrapper class to the solution:</p><pre class=\"brush:csharp\">class Bootstrapper : UnityBootstrapper<br />{<br /> protected override DependencyObject CreateShell()<br /> {<br />  return this.Container.Resolve<Shell>();<br /> }<br /><br /> protected override void InitializeShell()<br /> {<br />  base.InitializeShell();<br /><br />  App.Current.MainWindow = (Window)this.Shell;<br />  App.Current.MainWindow.Show();<br /> }<br /><br /> protected override void ConfigureModuleCatalog()<br /> {<br /> }<br />}</pre><p>At this point, the reference to Microsoft.Practices.Prism.UnityExtensions is required (for UnityBootstrapper). And not to forget the</p><pre class=\"brush:csharp\">using Microsoft.Practices.Unity;</pre><p>otherwise the container would not resolve! Basically, Container.Resolve constructs an instance of the concrete class, resolving any dependencies that it has.</p><p>Now the bootstrapper has to run when the application starts. To achieve this, the Startup event of the application is handled in the App.xaml.cs file.</p><pre class=\"brush:csharp\">public partial class App : Application<br />{<br /> protected override void OnStartup(StartupEventArgs e)<br /> {<br />  base.OnStartup(e);<br />  Bootstrapper bootstrapper = new Bootstrapper();<br />  bootstrapper.Run();<br /> }<br />}</pre><p>And since the instance of the Shell is manually created by the bootstrapper, the StartupUri attribute is not needed anymore in the App.xaml Application tag.</p><pre class=\"brush:xml\">&lt;Application x:Class="MVVM.App"<br />             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"<br />             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;<br />    &lt;Application.Resources&gt;<br />         <br />    &lt;/Application.Resources&gt;<br />&lt;/Application&gt;</pre><p>The application is fully functional now!</p><p>References:</p><p><a href=\"http://msdn.microsoft.com/en-us/library/ff921141(v=PandP.20).aspx">WPF Hands-On Lab: Getting Started with the Composite Application Library</a></p><p><a href=\"http://stackoverflow.com/questions/634459/what-does-this-mean-in-prism-unity-container-resolveshellpresenter">What does this mean in Prism/Unity: Container.Resolve<ShellPresenter>()</a></p><p><a href=\"http://msdn.microsoft.com/en-us/library/microsoft.practices.composite.unityextensions.unitybootstrapper.aspx">UnityBootstrapper Class</a></p><p><a href=\"http://msdn.microsoft.com/en-us/library/ff921139(v=pandp.20).aspx">Bootstrapper</a></p>

 */ 

public const string content_24102011_b = ""; 
public const string content_24102011_r = ""; 

 /* 
<b><p>Drop a Default Constraint on a Table Before Dropping the Table.</p></b><p>Trying to drop the colum from a database via a simple script</p><p><pre class=\"brush:sql\">ALTER TABLE [dbo].MYTABLENAME DROP COLUMN MYCOLUMNNAME</pre></p><p>I came across the error I did not quite expect.</p><p><pre class=\"brush:sql\">Msg 5074, Level 16, State 1, Line 1<br />The object 'DF__MYTABLENAME__MYCOL__42ACE4D4' is dependent on column 'MYCOLUMNNAME'.<br />Msg 4922, Level 16, State 9, Line 1<br />ALTER TABLE DROP COLUMN MYCOLUMNNAME failed because one or more objects access this column.</pre></p><p>Turns out it is not possible to drop the column this way because there is a default constraint set on it.<br />However, the constraint name is 'DF__MYTABLENAME__MYCOL__42ACE4D4', which is fine if I'm doing it in the database I have full access to. I could even use the visual tool like Management Studio to just right-click and drop.</p><p>That's not possible, however, in my case, because the database is in the remote location and I need to write a script that I can send over and ask the person in charge to run it. I don't want to ask him 'hey, could you please run sp_help on the table MYTABLENAME and let me know what it tells you'.<br />That's where this little script comes handy:</p><p><pre class=\"brush:sql\">declare @default sysname, @sql nvarchar(max)<br /><br />select @default = name <br />from sys.default_constraints <br />where parent_object_id = object_id('MYTABLENAME')<br />AND type = 'D'<br />AND parent_column_id = (<br /> select column_id <br /> from sys.columns <br /> where object_id = object_id('MYTABLENAME')<br /> and name = 'MYCOLUMNNAME'<br /> )<br /><br />set @sql = N'alter table MYTABLENAME drop constraint ' + @default<br />exec sp_executesql @sql<br /><br />alter table MYTABLENAME drop column MYCOLUMNNAME<br /><br />go</pre></p>

 */ 

public const string content_16102011_b = "<p>I'm working on deeper understanding on how commands work in WPF. How do RoutedCommands work? First, I add a class to my solution and call it Commands.</p>"; 
public const string content_16102011_r = "<pre class=\"brush:csharp\">" + 
    @"public static class Commands<br />{<br /> public static readonly RoutedCommand MyClick = new RoutedCommand();<br />}" + 
    "</pre><p>Next, I declare the command and add a binding in my User Control.</p><pre class=\"brush:xml\">" + 
    @"&lt;Button <br /> Command=""{x:Static my:Commands.MyClick}"" <br /> Grid.Column=""2"" Height=""23"" HorizontalAlignment=""Left"" Margin=""0"" <br /> Name=""button1"" VerticalAlignment=""Top"" Width=""75"" Content=""Button""/&gt;<br />   <br />&lt;UserControl.CommandBindings&gt;<br /> &lt;CommandBinding <br />  Command=""{x:Static my:Commands.MyClick}"" <br />  CanExecute=""CommandBinding_CanExecute"" <br />  Executed=""CommandBinding_Executed""&gt;<br /> &lt;/CommandBinding&gt;       <br />&lt;/UserControl.CommandBindings&gt;" + 
    "</pre><p>Next, I add the handlers for the CommandBinding_CanExecute and CommandBinding_Executed.</p><pre class=\"brush:csharp\">" + 
    @"private void CommandBinding_CanExecute(object sender, System.Windows.Input.CanExecuteRoutedEventArgs e)<br />{<br /> e.CanExecute = true;<br />}<br /><br />private void CommandBinding_Executed(object sender, System.Windows.Input.ExecutedRoutedEventArgs e)<br />{<br /> System.Windows.Forms.MessageBox.Show(""Executed in DimensionsView"");<br />}" + 
    "</pre><p>So far, so good - the button is clicked, the message appears. However, that's too simple - next, I need to make sure my other user control will be notified when the button is clicked. This is the bit I was not able to do quickly on my first attempt. It appears that I need to implement a MVVM pattern to achieve this.</p><p>Fist I will implement the pattern in the simplest possible way. I'll create a ViewModel for my User Control. The ViewModel provides the mechanics of creating a command. The two functions serve the following purpose: CanClick() checks if the button click can happen. Some logic can be placed there and, if it returns false, the button will in fact be disabled. DoClick() actually runs the code that should happen on button click.</p><pre class=\"brush:csharp\">" + 
    @"public class DimensionsViewModel<br />{<br /> private DelegateCommand _clickCommand;<br /><br /> public ICommand ClickCommand<br /> {<br />  get<br />  {<br />   if (_clickCommand == null)<br />   {<br />    _clickCommand = new DelegateCommand(new Action(DoClick), new Func<bool>(CanClick));<br />   }<br />   return _clickCommand;<br />  }<br /> }<br /><br /> private bool CanClick()<br /> {<br />  /* code to check if the button can be clicked */<br />  return true;<br /> }<br /><br /> private void DoClick()<br /> {<br />  System.Windows.Forms.MessageBox.Show(""Click in DimensionsView"");<br /> }<br />}" + 
    "</pre><p>The Button in the xaml file needs to know which command to run.</p><pre class=\"brush:xml\">" + 
    @"&lt;Button <br />    Command=""{Binding Path=ClickCommand}""<br />    Grid.Column=""2"" Height=""23"" HorizontalAlignment=""Left"" Margin=""0"" <br />    Name=""button1"" VerticalAlignment=""Top"" Width=""75"" Content=""Button""/&gt;&lt;/pre&gt;&lt;p&gt;" + 
    "And finally, the User Control needs to know which ViewModel to use:&lt;/p&gt;&lt;pre class=\"brush:xaml\"&gt;&lt;" + 
    @"UserControl x:Class=""DynamicGrid.DimensionsView""<br /><br /> ...<br />    xmlns:my=""clr-namespace:DynamicGrid""&gt;<br /> &lt;UserControl.DataContext&gt;<br />  &lt;my:DimensionsViewModel/&gt;<br /> &lt;/UserControl.DataContext&gt;<br /> ...<br />&lt;/UserControl&gt;" + 
    "</pre><p>And this is it! What I have achieved so far: there is absolutely no code in the xaml.cs file. Here's proof, the whole contents of the DimensionsView.xaml.cs:</p><pre class=\"brush:csharp\">" + 
    @"public partial class DimensionsView : UserControl<br />{<br /> public DimensionsView()<br /> {<br />  InitializeComponent();<br /> }<br />}" + 
    "</pre><p>Now someone can work on the UI and edit the xaml file, and someone can work on the business logic and work with the ViewModel, and they would not even need to check out the same file and then merge their changes or bump into one another in any way.</p>"; 

public const string content_13102011_b = ""; 
public const string content_13102011_r = ""; 

 /* 
<p>The EventAggregator is the pattern that may be used in multiple scenarios, but in my case I have a WPF application that uses several User Control. When an action happens in a particular User Control (i.e. a user clicks the button), another User Controls or several User Controls react (i.e. draw an image). At first it looked like Routed Events and Commands are the way to go but I found out that could not easily build a working prototype so I decided to learn them at a later stage.</p><p>I found the explanation and a sample implementation here:</p><p><a href=\"http://www.minddriven.de/index.php/technology/development/design-patterns/event-aggregator-implementation">Simple message-based Event Aggregator</a></p><p>My prototype included two user controls, and I used the implementation of IEventAggregator and ISubscription from the link above.</p><p>That's the solution structure:</p><p><a href=\"http://2.bp.blogspot.com/-Cr8dBp8nQAk/TpfKUvxqztI/AAAAAAAAAOY/cK2MNzWZ50w/s1600/ea.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 191px; height: 320px;\" src=\"http://2.bp.blogspot.com/-Cr8dBp8nQAk/TpfKUvxqztI/AAAAAAAAAOY/cK2MNzWZ50w/s320/ea.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5663217514212675282\" /></a></p><p>The user control that publishes the event does it in the following way:</p><pre class=\"brush:csharp\">public partial class DimensionsView : UserControl<br />    {<br />        private EventAggregator _eventAggregator = null;<br /><br />        private EventAggregator EventAggregator<br />        {<br />            get <br />            {<br />                if (_eventAggregator == null)<br />                {<br />                    _eventAggregator = new EventAggregator();<br />                }<br />                return _eventAggregator;<br />            }<br />        }<br /><br />        public DimensionsView()<br />        {<br />            InitializeComponent();<br />        }<br /><br />        private void button1_Click(object sender, RoutedEventArgs e)<br />        {<br />            //publish a message that will be subscribed to in another user control<br />            EventAggregatorInstance.EAggregator.Publish(new BasicMessage("test"));<br />        }</pre><p>And the subscribing user control declares an action it's interested in explicitly and subscribes to it.</p><pre class=\"brush:csharp\">public partial class GridView : UserControl<br />    {<br />        private Action<BasicMessage> someAction;<br /><br />        private EventAggregator _eventAggregator = null;<br /><br />        private EventAggregator EvengAggregator<br />        {<br />            get <br />            {<br />                if (_eventAggregator == null)<br />                {<br />                    _eventAggregator = new EventAggregator();<br />                }<br />                return _eventAggregator;<br />            }<br />        }<br /><br />        public GridView()<br />        {<br />            InitializeComponent();<br />            someAction = message => Test(message);<br />            var subscription = EventAggregatorInstance.singletonAggregator.Subscribe(someAction);<br />        }<br /><br />        private void Test(BasicMessage msg)<br />        {<br />            PerformAction();<br />        }<br /><br />        public void PerformAction()<br />        {<br />            System.Windows.Forms.MessageBox.Show("Action Performed");<br />        }<br />    }</pre><p>That's pretty much all that's required to build a working prototype. Of course, an instance of the EventAggregator has to be created for the application to work. This can be done in multiple ways, I chose one of the simplest - a singleton.</p><pre class=\"brush:csharp\">public static class EventAggregatorInstance<br />    {<br />        public static EventAggregator EAggregator = null;<br /><br />        public static EventAggregator singletonAggregator<br />        {<br />            get<br />            {<br />                if (EAggregator == null)<br />                {<br />                    EAggregator = new EventAggregator();<br />                }<br />                return EAggregator;<br />            }<br />        }<br />    }</pre><p>I haven't given up on the Routed Events and Commands, that's my next subject to explore!</p>

 */ 

public const string content_12102011_b = ""; 
public const string content_12102011_r = ""; 

 /* 

<p>I need to make sure that a couple of internal applications are working properly under Windows 7. That includes installing all required hardware drivers and documenting the process. It has been reasonably frustrating so far since not many drivers are installed without problems and some COM components are not registered properly and in general the process is very far from smooth. I don't think I've ever dealt with so many errors in one day, here's a subset. (There's nothing particularly interesting here except they all happened today under various circumstances).</p><a href=\"http://2.bp.blogspot.com/-89k8WUYktJ4/TpVESqPMOBI/AAAAAAAAAOQ/4f1bfkJmkO8/s1600/8.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 111px;\" src=\"http://2.bp.blogspot.com/-89k8WUYktJ4/TpVESqPMOBI/AAAAAAAAAOQ/4f1bfkJmkO8/s320/8.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5662507193854605330\" /></a><br /><a href=\"http://2.bp.blogspot.com/-Z86ZIjlnPSk/TpVESvegxPI/AAAAAAAAAN8/vwVvYR0o8c0/s1600/7.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 143px;\" src=\"http://2.bp.blogspot.com/-Z86ZIjlnPSk/TpVESvegxPI/AAAAAAAAAN8/vwVvYR0o8c0/s320/7.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5662507195261043954\" /></a><br /><a href=\"http://3.bp.blogspot.com/-CSZIZnuPIx8/TpVESSPWvyI/AAAAAAAAAN0/pKD_I4QKpvU/s1600/6.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 150px;\" src=\"http://3.bp.blogspot.com/-CSZIZnuPIx8/TpVESSPWvyI/AAAAAAAAAN0/pKD_I4QKpvU/s320/6.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5662507187412844322\" /></a><br /><a href=\"http://4.bp.blogspot.com/-MgpUV_jREyQ/TpVELCAkUbI/AAAAAAAAANk/Exj2o-iGjDw/s1600/5.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 135px;\" src=\"http://4.bp.blogspot.com/-MgpUV_jREyQ/TpVELCAkUbI/AAAAAAAAANk/Exj2o-iGjDw/s320/5.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5662507062796767666\" /></a><br /><a href=\"http://2.bp.blogspot.com/-KrLDnh51TdI/TpVEK8c3mZI/AAAAAAAAANc/Cr1DVgEOG4k/s1600/4.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 134px;\" src=\"http://2.bp.blogspot.com/-KrLDnh51TdI/TpVEK8c3mZI/AAAAAAAAANc/Cr1DVgEOG4k/s320/4.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5662507061304859026\" /></a><br /><a href=\"http://4.bp.blogspot.com/-C5FK5f9MgBA/TpVEKjDKS9I/AAAAAAAAANM/iRc6k3xdO9s/s1600/3.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 153px;\" src=\"http://4.bp.blogspot.com/-C5FK5f9MgBA/TpVEKjDKS9I/AAAAAAAAANM/iRc6k3xdO9s/s320/3.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5662507054486146002\" /></a><br /><a href=\"http://4.bp.blogspot.com/-vGj191a3YHw/TpVEKY4XY1I/AAAAAAAAANA/5XsjXpM8wwc/s1600/2.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 138px;\" src=\"http://4.bp.blogspot.com/-vGj191a3YHw/TpVEKY4XY1I/AAAAAAAAANA/5XsjXpM8wwc/s320/2.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5662507051756512082\" /></a><br /><a href=\"http://1.bp.blogspot.com/-tFm52O_R2V0/TpVEKFkth_I/AAAAAAAAAM4/Pw6UKylUYhk/s1600/1.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 122px;\" src=\"http://1.bp.blogspot.com/-tFm52O_R2V0/TpVEKFkth_I/AAAAAAAAAM4/Pw6UKylUYhk/s320/1.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5662507046573803506\" /></a>
 */ 

public const string content_11102011_b = ""; 
public const string content_11102011_r = ""; 

 /* 
<p>Since we have several environments - development, testing etc., and each environment uses a separate web service it is helpful to be able to specify which environment to use as an installation step. The alternative is to manually edit the app.config whenever needed.</p><p>Turns out it can be easily done (in just about 10 minutes if you know how to, plus some additional time to find the relevant information) using the Visual Studio Setup and Deployment project. Here's my walkthrough, I'm still using Visual Studio 2005:</p><p>- Under "Setup and Deployment project", in the "Solution Explorer", select "View->User Interface".</p><p><a href=\"http://3.bp.blogspot.com/-RaFDaNVpvYM/TpQTkzgVKtI/AAAAAAAAALY/XWmlWsQaaHM/s1600/1.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 271px;\" src=\"http://3.bp.blogspot.com/-RaFDaNVpvYM/TpQTkzgVKtI/AAAAAAAAALY/XWmlWsQaaHM/s320/1.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5662172154533587666\" /></a></p><p>- Right-click "Start", select "Add Dialog", select the appropriate dialog. In my case, I chose "RadioButtons - 4 buttons".</p><p><a href=\"http://1.bp.blogspot.com/-YYnOwsef_zg/TpQTw1FTstI/AAAAAAAAALk/ZJy4yTzQMCg/s1600/2.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 218px;\" src=\"http://1.bp.blogspot.com/-YYnOwsef_zg/TpQTw1FTstI/AAAAAAAAALk/ZJy4yTzQMCg/s320/2.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5662172361115546322\" /></a></p><p>- Set the properties for the dialog. These are mostly self-explanatory: ButtonXLabel is what the user will see, ButtonXValue is what the ButtonProperty will be set to if this option is selected.</p><p><a href=\"http://1.bp.blogspot.com/-rFtSffMwGHI/TpQT8-TDkmI/AAAAAAAAALw/WY-gIg2jIao/s1600/3.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 232px;\" src=\"http://1.bp.blogspot.com/-rFtSffMwGHI/TpQT8-TDkmI/AAAAAAAAALw/WY-gIg2jIao/s320/3.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5662172569747559010\" /></a></p><p>- Move the "RadioButtons" element up in the tree to the position just after "Welcome"</p><p>- Under "Setup and Deployment project", in the "Solution Explorer", select "View->Custom Actions"</p><p><a href=\"http://1.bp.blogspot.com/-KM-_hsKmM08/TpQUJQuJSvI/AAAAAAAAAL8/M4B5wDGMZKc/s1600/4.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 305px;\" src=\"http://1.bp.blogspot.com/-KM-_hsKmM08/TpQUJQuJSvI/AAAAAAAAAL8/M4B5wDGMZKc/s320/4.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5662172780851448562\" /></a></p><p>- Right-click "Custom Actions", select "Add Custom Action". Navigate to Application Folder and select "Add Output". Select Primary Output for the main project.</p><p><a href=\"http://4.bp.blogspot.com/-ah-jYxEWgTE/TpQUVJCp36I/AAAAAAAAAMI/QLBDDbSJSeQ/s1600/5.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 170px;\" src=\"http://4.bp.blogspot.com/-ah-jYxEWgTE/TpQUVJCp36I/AAAAAAAAAMI/QLBDDbSJSeQ/s320/5.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5662172984948416418\" /></a></p><p>- Set the CustomActionData to the value similar to the one in the screenshot. TARGETENV is what ButtonPropery is called, and the custom action assigns it to the TargetEnv</p><p><a href=\"http://3.bp.blogspot.com/-lRmsjF-3pTI/TpQUgtKmJkI/AAAAAAAAAMU/IC3RE-YO3Nc/s1600/6.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 122px;\" src=\"http://3.bp.blogspot.com/-lRmsjF-3pTI/TpQUgtKmJkI/AAAAAAAAAMU/IC3RE-YO3Nc/s320/6.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5662173183623964226\" /></a></p><p>That's it for the Setup and Deployment project.</p><p>Now to the code part. The section of my app.config file which I need looks like that:</p><pre class=\"brush:csharp\"><!-- Web Service --><br />  <add key="URL" value="http://test/MyWS.asmx" /><br />  <add key="URLLive" value="http://live/MyWS.asmx" /><br />  <add key="URLTest" value="http://test/MyWS.asmx" /><br />  <add key="URLSQA" value="http://sqa/MyWS.asmx" /><br />  <add key="URLDev" value="http://dev/MyWS.asmx" /></pre><p>I just need to read the appropriate value of the web service url and overwrite the "URL" setting with it. For that, I need the installer class.</p><p>- Right-click the main project and select "Add -> New Item". Add the Installer Class from the dialog window.</p><p><a href=\"http://2.bp.blogspot.com/-llBf7tR00Js/TpQU4Cn3kyI/AAAAAAAAAMg/FdI9mXtybrY/s1600/7.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 265px;\" src=\"http://2.bp.blogspot.com/-llBf7tR00Js/TpQU4Cn3kyI/AAAAAAAAAMg/FdI9mXtybrY/s320/7.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5662173584520876834\" /></a></p><p>- In the installer class, I need to override the Install function. Again, mostly self-explanatory. Read the value of the target directory and the target value, open the app.config file, read the appropriate setting from it, assign the correct value to the setting and save the configuration file. Build and run.</p><pre class=\"brush:csharp\"><br />    [RunInstaller(true)]<br />    public partial class MyInstaller : Installer<br />    {<br />        public MyInstaller()<br />        {<br />            InitializeComponent();<br />        }<br /><br />        public override void Install(System.Collections.IDictionary stateSaver)<br />        {<br />            base.Install(stateSaver);<br /><br />            string targetDirectory = Context.Parameters["TARGETDIR"];<br />            string buttonValue = Context.Parameters["TargetEnv"];<br />            string exePath = string.Format("{0}SetupSampleProject.exe", targetDirectory);<br />            Configuration config = ConfigurationManager.OpenExeConfiguration(exePath);<br /><br />            string url = string.Empty;<br /><br />            switch(buttonValue)<br />            {<br />                case "LIVE":<br />                    url = config.AppSettings.Settings["URLLive"].Value;<br />                    break;<br />                case "TEST":<br />                    url = config.AppSettings.Settings["URLTest"].Value;<br />                    break;<br />                case "SQA":<br />                    url = config.AppSettings.Settings["URLSQA"].Value;<br />                    break;<br />                case "DEV":<br />                    url = config.AppSettings.Settings["URLDev"].Value;<br />                    break;<br />            }<br /><br />            config.AppSettings.Settings["URL"].Value = url;<br /><br />            config.Save();<br />        }<br />    }<br /></pre><p>This is what the user will see during installation (well, obviously I missed the text labels on the dialog, but the rest is working).</p><p><a href=\"http://2.bp.blogspot.com/-9WDo53k-cz4/TpQVJBcvn5I/AAAAAAAAAMs/vk8NGcNDUcY/s1600/8.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 259px;\" src=\"http://2.bp.blogspot.com/-9WDo53k-cz4/TpQVJBcvn5I/AAAAAAAAAMs/vk8NGcNDUcY/s320/8.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5662173876263559058\" /></a></p><p>References:</p><p><a href=\"http://msdn.microsoft.com/en-us/library/taa17f7s(v=VS.80).aspx">RadioButtons User Interface Dialog Box</a></p><p>- Does not really give any more information compared to what is already visible in the IDE.</p><p><a href=\"http://devcity.net/Articles/339/1/article.aspx">Installer Class and Custom Actions</a></p><p>- Good, but spread over several pages and really gives too much detail for this simple task</p><p><a href=\"http://raquila.com/software/configure-app-config-application-settings-during-msi-install/">Configure App.config Application Settings During MSI Install</a></p><p>- Brief and informative, exactly what I needed.</p>

 */ 

public const string content_10102011_b = ""; 
public const string content_10102011_r = ""; 

 /* 
<p>I came across this great quote from Linus Torwalds (not even a quote, just more of a random thing he said):</p><p>This kind of "I broke things, so now I will jiggle things randomly until they unbreak" is not acceptable.</p><p><a href=\"http://thread.gmane.org/gmane.linux.kernel/1126136">Subject: Re: Linux 2.6.39-rc3</a></p><p>I feel a bit sad because that's what I'm doing a lot recently - "Oh, the API fails when I try to get visible image in JPG format? Well, how about infrared in BMP format? Oh, the API fails when I ask for a string? Well, I can live with a byte array, I'll do the conversion myself".</p><p>That's a bad practice and I'm trying not to do that - my only excuse is the poor documentation supplied with third-party API's and SDK's.</p>

 */ 

public const string content_04102011_b = ""; 
public const string content_04102011_r = ""; 

 /* 
<p>Spent about 6 hours today resolving the issue about writing events into the custom Event Log. Usual deal - application happily writes everything I ask it to write on my PC, but of course the client installs the application and nothing is logged. Turns out that the issue is well researched and is happening when the application is running under the account that does not have permissions to the EventLog entry in the registry, which can be verified by checking the "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Eventlog" node permissions</p><a href=\"http://4.bp.blogspot.com/-1aQQwg36JOM/Tor9J5JUlaI/AAAAAAAAALI/UOwtLHOtFi0/s1600/Registry.JPG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 282px;\" src=\"http://4.bp.blogspot.com/-1aQQwg36JOM/Tor9J5JUlaI/AAAAAAAAALI/UOwtLHOtFi0/s320/Registry.JPG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5659614228145018274\" /></a><p>The custom event log is not created and the events are not getting logged but there is no exception raised so it's not obvious at the first glance what is happening. And I had to obtain a separate test login to replicate the behaviour.</p><p>There are several approaches and details may vary.<ul><li>The easiest and probably the most dangerous is to just give the users full control to the registry key.</li><li>Or you could just tell the user to only run the application when a member of Administrators group is logged on.</li><li>Or you could create the event log and source manually or using some tool for each installation.</li><li>A more proper and not so straightforward approach is to create the custom event log when the application is being installed. Generally I followed the steps described here</li></ul></p><p><a href=\"http://kanakaiah.wordpress.com/2007/10/11/create-a-new-event-source-in-the-event-log/">Create a New Event Source in the Event Log</a></p><p><ul><li>Created a new project in my solution of the type Class Library</li><li>Added the code for the class that inherits from System.Configuration.Install.Installer and creates the event log</li><li>Built the project</li></ul></p><p>Next, however, the author suggested to directly use the resulting dll to create the event log by running the InstallUtil. That's not what I want my clients to go through, so I switched to another solution from here:</p><p><a href=\"http://msdn.microsoft.com/en-us/library/f5dcf6h3(vs.71).aspx">Walkthrough: Installing an Event Log Component</a></p><p><ul><li>Added the output from my Class Library to the Setup and Deployment project</li><li>Created a custom action and assigned the output to the custom action</li><li>Built the Setup and Deployment project</li></ul></p><p>Early testing shows so far that now you have to be an Administrator to install the application. But the event log is created at the time of installation, while previously it was not created until the event had to be logged first time. And in the future any user can use that event log.</p><p>This page, by the way, suggested overriding the Install and Uninstall methods in the class that creates the event log, unlike the one I used, where the log is created right in the class constructor. But I didn't get deep enough to understand the benefit of this approach:</p><p><a href=\"http://www.devx.com/dotnet/Article/20849/1954">Building Custom Installer Classes in .NET</a></p>

 */ 

public const string content_22082011_b = ""; 
public const string content_22082011_r = ""; 

 /* 
<p>I have to admit that I did not know this before today.</p><p>If I have a base class that have controls, I can not directly subscribe to the events invoked by the controls of this class (or, more generally, I can not directly subscribe to any events declared by the base class, but in my case I was interested in button click events).</p><p>I have to use a simple technique to achieve my goal: In the base class, provide and EventHandler (my button is called "Run Draw", hence the names)</p><pre class=\"brush:csharp\">public event EventHandler<eventargs> RunDrawClicked;<br />protected virtual void OnRunDrawClicked(EventArgs e)<br />{<br />  EventHandler<eventargs> handler = RunDrawClicked;<br />  if (handler != null)<br />  {<br />    handler(this, e);<br />  }<br />}</pre><p>base class can subscribe to its own button click, of course</p><pre class=\"brush:csharp\">protected void btnRunDraw_Click(object sender, System.EventArgs e)<br />{<br /> MessageBox.Show("base");<br /> OnRunDrawClicked(e);<br />}</pre><p>and the derived class can subscribe to the event provided by the base class</p><pre class=\"brush:csharp\">protected override void OnRunDrawClicked(EventArgs e)<br />{<br /> MessageBox.Show("derived");<br /> base.OnRunDrawClicked(e);<br />}</pre><p>Reference:</p><a href=\"http://msdn.microsoft.com/en-us/library/hy3sefw3(v=vs.80).aspx">How to: Raise Base Class Events in Derived Classes</a>

 */ 

public const string content_15082011_b = ""; 
public const string content_15082011_r = ""; 

 /* 
<p>I'm always very happy then a third party dll or SDK comes with a code sample, in any language. I think this is the best what developers can do to ensure that users of their libraries will not have problems. It helped me a number of times (Oh, so I have to pass THIS to the function ... why didn't they mention it in the manual?).</p><p>But I like it a bit less when the code comes as a neat Visual Studio solution which no one obviously tested to make sure it compiles.</p><a href=\"http://4.bp.blogspot.com/-MWXBQJKeFAI/TkkDnNnYfJI/AAAAAAAAAKs/UDe7Wdxvpu0/s1600/1.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 67px;\" src=\"http://4.bp.blogspot.com/-MWXBQJKeFAI/TkkDnNnYfJI/AAAAAAAAAKs/UDe7Wdxvpu0/s320/1.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5641043980462881938\" /></a><p>So I made an empty header file bc_Content_Decoder_Constants.h and added it to the project and commented out the body of a function that used the constants from the header.</p><p>Now I'm up to the next challenge: I can run the application in release mode, but not in debug mode.</p><a href=\"http://2.bp.blogspot.com/-YdYhme67h9A/TkkD6Se9Q9I/AAAAAAAAAK0/c649M-C2d7M/s1600/2.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 50px;\" src=\"http://2.bp.blogspot.com/-YdYhme67h9A/TkkD6Se9Q9I/AAAAAAAAAK0/c649M-C2d7M/s320/2.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5641044308187235282\" /></a><p>Looks a bit vague.</p><p>I spent a while playing with linker settings and application manifest, but eventually ended up debugging the application in my head. In this particular case it was not as hard as it may sound - just looked at what functions were called in what sequence and duplicated that in my C# "throwaway" app and found a workaround to my problem. Sill, sample code from the third party was better than nothing.</p>

 */ 

public const string content_17072011_b = ""; 
public const string content_17072011_r = ""; 

 /* 
<p>This is another cryptic error message the reason for which will go into the "mystery" basket for me.</p><a href=\"http://2.bp.blogspot.com/-KcCTeFONJ7E/Tgm7gSzx0iI/AAAAAAAAAJ0/1cOoIU0KgYg/s1600/setupbug.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 256px;\" src=\"http://2.bp.blogspot.com/-KcCTeFONJ7E/Tgm7gSzx0iI/AAAAAAAAAJ0/1cOoIU0KgYg/s320/setupbug.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5623231773227995682\" /></a><p>All I needed was to tweak a setup and deployment project a little, so I made a copy from an existing one, added and removed some files, compiled without errors and tried to install.</p><p>Well, I had to work around it for now since there is really not enough information to even start investigating.</p>

 */ 

public const string content_28062011_b = ""; 
public const string content_28062011_r = ""; 

 /* 
<p>I had to change the database and some code to allow for proper saving/reading of Unicode from the application. Changing the parameter type in the stored procedure from varchar to nvarchar and doing the same change to the appropriate database table columns was the easy part. Doing some adjustments to the code, well, was also the easy part but with a little trick hidden inside.</p><p>So, here's how the parameters are added to the collection:</p><pre class=\"brush:csharp\">_collParam.Add(DataManager.BuildSqlParameter("@MessageText", SqlDbType.VarChar,<BR> ParameterDirection.Input, Message.ToString()));</pre><p>Just change VarChar to NVarChar, should be easy as pie.</p><p>And I end up with the SqlException "Procedure or function 'udp_MyProcedure_ups' expects parameter '@MessageText', which was not supplied". So, where has my parameter gone if I can clearly see that I'm adding it? The answer lies within the DataManager.BuildSqlParameter() function. Here's part of what it does:</p><pre class=\"brush:csharp\">if (value != "")<br /> {<br />  if (paramType == SqlDbType.Int)<br />   param.Value = Convert.ToInt32(value);<br />  else if (paramType == SqlDbType.Bit)<br />   param.Value = Convert.ToBoolean(value);<br />  else if (paramType == SqlDbType.DateTime)<br />  {<br />   param.Value = Convert.ToDateTime(value);<br />  }<br />  else if (paramType == SqlDbType.VarChar)<br />   param.Value = Convert.ToString(value);<br />  else if (paramType == SqlDbType.Float)<br />   param.Value = (float)Convert.ToDecimal(value);<br /> }</pre><p>So what happens when the parameter does not belong to any of the types? It gets no value assigned, causing the exception. There is no "default" value. Easy to fix, but worth noting.</p>

 */ 

public const string content_10052010_b = ""; 
public const string content_10052010_r = ""; 

 /* 
<p>Following up my issue with running NUnit tests for the Windows Mobile application, I came across a couple of articles on using the unit testing framework integrated in Visual Studio 2008 which is now supposed to be user friendly.<br />The process starts with selecting the function name, right-clicking on it and selecting "Create Unit Tests"</p><a href=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SyJxNTvOi7I/AAAAAAAAAH8/sc_HvcveS9g/s1600-h/1.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 276px;\" src=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SyJxNTvOi7I/AAAAAAAAAH8/sc_HvcveS9g/s320/1.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5414014175503354802\" /></a><p>I can select the functions I want unit tests to be created for - I'll only choose one for now</p><a href=\"http://3.bp.blogspot.com/_Pk-5kPvf7Gs/SyJxVOs2zbI/AAAAAAAAAIE/VoXxT_P2ZlE/s1600-h/2.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 277px; height: 320px;\" src=\"http://3.bp.blogspot.com/_Pk-5kPvf7Gs/SyJxVOs2zbI/AAAAAAAAAIE/VoXxT_P2ZlE/s320/2.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5414014311590186418\" /></a><p>I am then prompted for the name of the project where my tests will be created. Visual Studio adds a new project to the solution and this is the code for the test method created for the function I chose.</p><pre class=\"brush:csharp\"><br />        /// <summary><br />        ///A test for CreateDatabase<br />        ///</summary><br />        [TestMethod()]<br />        public void CreateDatabaseTest()<br />        {<br />            DataBase target = new DataBase(); // TODO: Initialize to an appropriate value<br />            target.CreateDatabase();<br />            Assert.Inconclusive("A method that does not return a value cannot be verified.");<br />        }</pre><p>This is great, except that I want to test for the things I want to test. So, of course, I need to change that. That's probably closer to what I want to test in my method:</p><pre class=\"brush:csharp\"><br />        [TestMethod()]<br />        public void CheckDatabaseCreation()<br />        {<br />            DataBase target = new DataBase();<br />            target.SetFileName(@"\Program Files\TestDB\TTrack.sdf");<br />            target.SetConnectionString(@"Data Source=\Program Files\TestDB\TTrack.sdf");<br />            target.DeleteDatabase();<br />            target.CreateDatabase();<br />            target.RunNonQuery(target.qryInsertRecord);<br />            int count = target.RunScalar(target.qryCountUsers);<br />            Assert.AreEqual(count, 1);<br />        }</pre><p>This is not so much different from the way tests are created in NUnit. In fact, so far there is no difference at all. Now, to run the test. There is a menu item "Test" in the top menu where I can select Test->Windows->Test View and the "Test View" becomes visible.</p><a href=\"http://2.bp.blogspot.com/_Pk-5kPvf7Gs/SyJxcs77gnI/AAAAAAAAAIM/Wx1jYorgrl4/s1600-h/3.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 220px;\" src=\"http://2.bp.blogspot.com/_Pk-5kPvf7Gs/SyJxcs77gnI/AAAAAAAAAIM/Wx1jYorgrl4/s320/3.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5414014439965557362\" /></a><p>There I can see my tests - the auto generated one and the one I added myself.</p><a href=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SyJxlsR1iYI/AAAAAAAAAIU/JMnw4zWinMs/s1600-h/4.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 174px;\" src=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SyJxlsR1iYI/AAAAAAAAAIU/JMnw4zWinMs/s320/4.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5414014594407827842\" /></a><br /><p>I can run all tests or select any combination of tests I want to run from the Test View and choose either "Run Selection" or "Debug Selection" (I did not find out yet what the difference is - if I place a breakpoint inside the test method and choose "Debug Selection", the execution does not break at the breakpoint). After the test(s) finished running, I can see the result in the Test Results window.</p><a href=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/SyJxwDewCWI/AAAAAAAAAIc/16nI7bjqr4U/s1600-h/5.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 60px;\" src=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/SyJxwDewCWI/AAAAAAAAAIc/16nI7bjqr4U/s320/5.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5414014772434700642\" /></a>

 */ 

public const string content_11122009_b = ""; 
public const string content_11122009_r = ""; 

 /* 
<p>I have the idea of a small application I could write for the Windows Mobile. The application will only use its local SQL Server database, at least initially, and it is really simple to create a local database on the device. The only things I need are the physical location of the sdf file on the device and the connection string.</p><p>In my "DataBase" class I generate them</p><pre class=\"brush:csharp\">private string GetLocalDatabasePath()<br />{<br /> string applicationPath = Path.GetDirectoryName(this.GetType().Assembly.GetName().CodeBase);<br /> string localDatabasePath = applicationPath + Path.DirectorySeparatorChar +<br />   "TTrack.sdf";<br /> return localDatabasePath;<br />}<br /><br />private string GetLocalConnectionString()<br />{<br /> string localConnectionString = "Data Source=" +<br />   GetLocalDatabasePath();<br /><br /> return localConnectionString;<br />}</pre><p>To create a database I just check if the database file already exists, and if not - I create it. Also, for testing purposes, the delete database function is used.</p><pre class=\"brush:csharp\">internal void CreateDatabase()<br />{<br /> if (!File.Exists(localDatabasePath))<br /> {<br />  using (SqlCeEngine engine = new SqlCeEngine(localConnectionString))<br />  {<br />   engine.CreateDatabase();<br />  }<br /><br />  RunNonQuery(qryCreateTables);<br /> }<br />}<br /><br />internal void DeleteDatabase()<br />{<br /> string dbPath = GetLocalDatabasePath();<br /> if (File.Exists(dbPath))<br /> {<br />  File.Delete(dbPath);<br /> }<br />}</pre><p>The RunNonQuery bit is just the creation of tables in the database.</p><pre class=\"brush:csharp\">internal void RunNonQuery(string query)<br />{<br /> string connString = GetLocalConnectionString();<br /><br /> using (SqlCeConnection cn = new SqlCeConnection(connString))<br /> {<br />  cn.Open();<br />  SqlCeCommand cmd = cn.CreateCommand();<br />  cmd.CommandText = query;<br />  cmd.ExecuteNonQuery();<br /> }<br />}</pre><p>The query for now just creates the simplest possible "dummy" table</p><pre class=\"brush:csharp\">internal string qryCreateTables = "CREATE TABLE Users (" +<br /> "UserID uniqueidentifier PRIMARY KEY DEFAULT NEWID() NOT NULL, " +<br /> "Name NVARCHAR(50) NOT NULL )";</pre><p>The RunScalar, obviously, is used to run ExecuteScalar(). Some refactoring still required to improve the code.</p><pre class=\"brush:csharp\">internal int RunScalar(string query)<br />{<br /> string connString = GetLocalConnectionString();<br /><br /> using (SqlCeConnection cn = new SqlCeConnection(connString))<br /> {<br />  cn.Open();<br />  SqlCeCommand cmd = cn.CreateCommand();<br />  cmd.CommandText = query;<br />  return int.Parse(cmd.ExecuteScalar().ToString());<br /> }<br />}</pre><p>Now that I can create a database, I can run this simple bit of code to see if it is working.</p><pre class=\"brush:csharp\">DataBase db = new DataBase();<br /> db.CreateDatabase();<br /> db.RunNonQuery(db.qryInsertRecord);<br /> MessageBox.Show(db.RunScalar(db.qryCountUsers).ToString());</pre><p>Database gets created, a record gets inserted, a messagebox with "1" is shown. All is well.</p><p>Next, I decide to quickly create and run a simple test for database creation: If the database is present, I delete it, then create a new one, insert one record and test for the count of records indeed being one.</p><p>Here is the test I write in NUnit.</p><pre class=\"brush:csharp\">[Test]<br />public void CheckDatabaseCreation()<br />{<br /> DataBase db = new DataBase();<br /> db.SetFileName(@"\Program Files\TestDB\TTrack.sdf");<br /> db.SetConnectionString(@"Data Source=\Program Files\TestDB\TTrack.sdf");<br /> db.DeleteDatabase();<br /> db.CreateDatabase();<br /> db.RunNonQuery(db.qryInsertRecord);<br /> int count = db.RunScalar(db.qryCountUsers);<br /> Assert.AreEqual(count, 1);<br />}</pre><p>This does not go as well, however:</p><a href=\"http://3.bp.blogspot.com/_Pk-5kPvf7Gs/Swuzf6MCygI/AAAAAAAAAH0/34L7AU2bEDI/s1600/nunitfail.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 175px;\" src=\"http://3.bp.blogspot.com/_Pk-5kPvf7Gs/Swuzf6MCygI/AAAAAAAAAH0/34L7AU2bEDI/s320/nunitfail.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5407613138365499906\" /></a><p>What happened there? Oh, of course - the NUnit test runs on the desktop, but the code is supposed to run on the emulator (I don't use the actual device yet). So, it looks like I will have to work on the approach to testing ...</p>

 */ 

public const string content_24112009_b = ""; 
public const string content_24112009_r = ""; 

 /* 
<p>This was my first experience with the Microsoft Compact Framework. The application is developed in Visual Studio 2005 and is targeted to run on Pocket PC 2003 devices. Basically, I had to extend a simple application that had only one form to add some functionality and a few more forms. I understand that the forms in Compact Framework are treated a bit differently compared to a desktop application. What to use for navigation between forms, Show() or ShowDialog()? I decided to use Show() because I have only about 5 forms, most of those are very simple and also, my application will be the only one running on the device. So I thought, if I create each form once and keep them all in memory, just showing and hiding them, it may use more memory, which I do not care that much about, but be easier on the device battery. Okay, I may be saying total nonsense here - I have about 7 days Compact Framework development experience at this very moment.</p><p>So I have a dictionary where all existing forms are kept.</p><pre class=\"brush:csharp\">private static Dictionary<string, Form> _applicationForms = new Dictionary<string,Form>();</pre><p>And the function that gets the form from the dictionary by name.</p><pre class=\"brush:csharp\">internal static Form GetFormByName(string formName)<br />{<br /> if (_applicationForms.ContainsKey(formName))<br /> {<br />  return _applicationForms[formName];<br /> }<br /> else<br /> {<br />  Form newForm = CreateFormByName(formName);<br />  AddFormIfNotExists(newForm);<br />  return newForm;<br /> }<br />}</pre><p>And the function to create a form if it has not been yet created.</p><pre class=\"brush:csharp\">private static Form CreateFormByName(string name)<br />{<br /> Form form = new Form();<br /><br /> switch (name)<br /> { <br />  case Constants.frmFirst:<br />   form = new frmFirst();<br />   break;<br />   <br />   ...<br />   <br />  case Constants.frmLast:<br />   form = new frmLast();<br />   break;<br />  default:<br />   form = new frmLast();<br />   break;<br /> }<br /> return form;<br />}</pre><p>And the function to add the form to the dictionary if it is not there.</p><pre class=\"brush:csharp\">internal static void AddFormIfNotExists(Form frm)<br />{<br /> if (!_applicationForms.ContainsKey(frm.Name))<br /> {<br />  _applicationForms.Add(frm.Name, frm);<br /> }<br />}</pre><p>And when I need to show another form, I get it from the dictionary and show, and hide the current form.</p><pre class=\"brush:csharp\">internal static void ShowFromForm(Form source, string targetName)<br />{<br /> Form frm = GetFormByName(targetName);<br /> frm.Show();<br /> source.Hide();<br />}</pre><p>There's a bit more to it, sometimes I need to find which form is currently visible etc, but these are the core things. Stupid? Good enough? I don't know ...</p>

 */ 

public const string content_19112009_b = ""; 
public const string content_19112009_r = ""; 

 /* 
<p>This was my first experience with the Microsoft Compact Framework. The application is developed in Visual Studio 2005 and is targeted to run on Pocket PC 2003 devices. Basically, I had to extend a simple application that had only one form to add some functionality and a few more forms. I understand that the forms in Compact Framework are treated a bit differently compared to a desktop application. What to use for navigation between forms, Show() or ShowDialog()? I decided to use Show() because I have only about 5 forms, most of those are very simple and also, my application will be the only one running on the device. So I thought, if I create each form once and keep them all in memory, just showing and hiding them, it may use more memory, which I do not care that much about, but be easier on the device battery. Okay, I may be saying total nonsense here - I have about 7 days Compact Framework development experience at this very moment.</p><p>So I have a dictionary where all existing forms are kept.</p><pre class=\"brush:csharp\">private static Dictionary<string, Form> _applicationForms = new Dictionary<string,Form>();</pre><p>And the function that gets the form from the dictionary by name.</p><pre class=\"brush:csharp\">internal static Form GetFormByName(string formName)<br />{<br /> if (_applicationForms.ContainsKey(formName))<br /> {<br />  return _applicationForms[formName];<br /> }<br /> else<br /> {<br />  Form newForm = CreateFormByName(formName);<br />  AddFormIfNotExists(newForm);<br />  return newForm;<br /> }<br />}</pre><p>And the function to create a form if it has not been yet created.</p><pre class=\"brush:csharp\">private static Form CreateFormByName(string name)<br />{<br /> Form form = new Form();<br /><br /> switch (name)<br /> { <br />  case Constants.frmFirst:<br />   form = new frmFirst();<br />   break;<br />   <br />   ...<br />   <br />  case Constants.frmLast:<br />   form = new frmLast();<br />   break;<br />  default:<br />   form = new frmLast();<br />   break;<br /> }<br /> return form;<br />}</pre><p>And the function to add the form to the dictionary if it is not there.</p><pre class=\"brush:csharp\">internal static void AddFormIfNotExists(Form frm)<br />{<br /> if (!_applicationForms.ContainsKey(frm.Name))<br /> {<br />  _applicationForms.Add(frm.Name, frm);<br /> }<br />}</pre><p>And when I need to show another form, I get it from the dictionary and show, and hide the current form.</p><pre class=\"brush:csharp\">internal static void ShowFromForm(Form source, string targetName)<br />{<br /> Form frm = GetFormByName(targetName);<br /> frm.Show();<br /> source.Hide();<br />}</pre><p>There's a bit more to it, sometimes I need to find which form is currently visible etc, but these are the core things. Stupid? Good enough? I don't know ...</p>

 */ 

public const string content_03102009_b = ""; 
public const string content_03102009_r = ""; 

 /* 
<p>It is fairly easy to restart a service running on a remote computer. You only need to know two things - the name of a remote computer and the name of the service itself. No surprises.</p><pre class=\"brush:csharp\">private void RestartService(string MachineName, string ServiceName)<br />{<br /> using (ServiceController controller = new ServiceController())<br /> {<br />  controller.MachineName = MachineName;<br />  controller.ServiceName = ServiceName;<br />  controller.Stop();<br />  controller.Start();<br /> }<br />}</pre><p>Almost as easy is to monitor the printers on the remote computer using WMI. This time, only the remote computer name is required. Here's a small function that returns the list of CustomPrinterObjects. CustomPrinterObject can be defined like this, for example:</p><pre class=\"brush:csharp\">public class CustomPrinterObject<br />{<br /> private string _name;<br /><br /> public string Name<br /> {<br />  get { return _name; }<br />  set { _name = value; }<br /> }<br /><br /> //many other properties<br /> ....<br /> <br />    private string _status;<br /><br /> public string Status<br /> {<br />  get { return _status; }<br />  set { _status = value; }<br /> }<br />}</pre><p>Here's how I get the information about the printers on the remote computer:</p><pre class=\"brush:csharp\">public List<CustomPrinterObject> GetLocalPrinters(string serverName)<br />{<br /> string[] pStatus = {"Other","Unknown","Idle","Printing","WarmUp","Stopped Printing",<br />        "Offline"};<br /><br /> string[] pState = {"Paused","Error","Pending Deletion","Paper Jam","Paper Out",<br />           "Manual Feed","Paper Problem", "Offline","IO Active","Busy",<br />           "Printing","Output Bin Full","Not Available","Waiting", <br />           "Processing","Initialization","Warming Up","Toner Low",<br />           "No Toner","Page Punt", "User Intervention Required",<br />           "Out of Memory","Door Open","Server_Unknown","Power Save"};<br /><br /> List<CustomPrinterObject> printers = new List<CustomPrinterObject>();<br /><br /> string query = string.Format("SELECT * from Win32_Printer");<br /> ManagementObjectSearcher searcher = new ManagementObjectSearcher(query);<br /> searcher.Scope = new ManagementScope("\\\\" + serverName + "\\root\\CIMV2");<br /> ManagementObjectCollection coll = searcher.Get();<br /> <br /> System.Windows.Forms.MessageBox.Show(coll.Count.ToString());<br /><br /> foreach (ManagementObject printer in coll)<br /> {<br />  CustomPrinterObject prn = new CustomPrinterObject();<br /><br />  foreach (PropertyData property in printer.Properties)<br />  {<br />   if (property.Value != null)<br />   {<br />    switch (property.Name)<br />    {<br />     case "Name":<br />      prn.Name = property.Value.ToString();<br />      break;<br />     case "Comment":<br />      prn.Comment = property.Value.ToString();<br />      break;<br />     case "PrinterState":<br />      prn.PrinterState = pState[Convert.ToInt32(property.Value)];<br />      break;<br />     case "PrinterStatus":<br />      prn.PrinterStatus = pStatus[Convert.ToInt32(property.Value)];<br />      break;<br />     case "Location":<br />      prn.Location = property.Value.ToString();<br />      break;<br />     case "Type":<br />      prn.Type = property.Value.ToString();<br />      break;<br />     case "DriverName":<br />      prn.Model = property.Value.ToString();<br />      break;<br />     case "WorkOffline":<br />      prn.Status = property.Value.ToString().Equals("True") ? "Offline" : "Online";<br />      break;<br />     default:<br />      break;<br />    }<br />   }<br />  }<br />  printers.Add(prn);<br /> }<br /> return printers;<br />}</pre><p>Reading the registry contents on the remote machine is very easy again.</p><p>On the local computer I would open the key like this</p><pre class=\"brush:csharp\">RegistryKey rk = Registry.LocalMachine.OpenSubKey(subKey);</pre><p>And on the remote I would do it like this</p><pre class=\"brush:csharp\">RegistryKey hklm = RegistryKey.OpenRemoteBaseKey(RegistryHive.LocalMachine, "MyRemoteServer");<br />                RegistryKey rk = hklm.OpenSubKey(subKey);</pre><p>Obviously, all of the samples will work subject to permissions of the account that runs them. Errors will happen if the account does not have enough privileges to access the printers or services on the remote computer.</p>

 */ 

public const string content_01102009_b = ""; 
public const string content_01102009_r = ""; 

 /* 
<p>So communicating between two windows services on the same computer is easy. But then I was asked, what if we decide in the future that we want these services to run on the separate machines? Well, I guess we'll need to make changes to both of them ... and that's exactly what we want to avoid. Okay, the WCF offers a few ways to host a service - in a managed application, in a managed windows service, in IIS, in WAS ... (<a href=\"http://msdn.microsoft.com/en-us/library/ms730158.aspx">Hosting Options</a>) Since I already have windows services implemented, the choice is obvious. I looked up a couple of tutorials on the subject fairly quickly:<br /><a href=\"http://msdn.microsoft.com/en-us/library/ms733069.aspx">How to: Host a WCF Service in a Managed Windows Service</a>, <a href=\"http://www.switchonthecode.com/tutorials/wcf-tutorial-basic-interprocess-communication">WCF Tutorial - Basic Interprocess Communication</a></p><p>However, that was not quite enough for me because the first tutorial's problem was that it explained the configuration file a bit, but did not implement the "client", and the second tutorial implemented both server and client, but had no info on configuration at all. So I quickly got to the point where I could have a server and client running inside separate windows services on the same machine, but as soon as I tried taking one of the services away - to another computer on the network - different errors started to happen. Not enough time and space on explaining each error and what was the reason for it, just a few words on what I ended up with (which eventually worked).</p><p>Service implementation</p><p>To define and implement the function on the server:</p><pre class=\"brush:csharp\">[ServiceContract(Namespace="MyNamespace.IMyInterface")]<br />public interface IMyInterface<br />{<br /> [OperationContract]<br /> string ReturnMyString();<br />}<br /><br />public class MyInterfaceImplementation : IMyInterface<br />{<br /> public string ReturnMyString()<br /> {<br />  return "My String";<br /> }<br />}</pre><p>To create the instance of the host, first define the host</p><pre class=\"brush:csharp\">private ServiceHost host;</pre><p>In the service OnStart method</p><pre class=\"brush:csharp\">if (host != null)<br />{<br /> host.Close();<br />}<br /><br />host = new ServiceHost(typeof(MyInterfaceImplementation), new Uri[] { new Uri(http://MyServer:8080) });<br />host.AddServiceEndpoint(typeof(IMyInterface), new BasicHttpBinding(), "MyMethod");</pre><p>In the service OnStop method</p><pre class=\"brush:csharp\">if (host != null)<br />{<br /> host.Close();<br /> host = null;<br />}<br /></pre><p>This part was fairly easy.</p><p>Service configuration</p><p>This bit went into the app.config file inside the "configuration".</p><pre class=\"brush:xml\">&lt;system.serviceModel&gt;<br />    &lt;services&gt;<br />      &lt;service name="MyNamespace.MyService" behaviorConfiguration="MyServiceBehavior"&gt;<br />        &lt;host&gt;<br />          &lt;baseAddresses&gt;<br />            &lt;add baseAddress="http://MyServer:8000/MyMethod"/&gt;<br />          &lt;/baseAddresses&gt;<br />        &lt;/host&gt;<br />        &lt;!-- this endpoint is exposed at the base address provided by host--&gt;<br />        &lt;endpoint address="" binding="basicHttpBinding" contract="MyNamespace.IMyInterface" /&gt;<br />      &lt;/service&gt;<br />    &lt;/services&gt;<br />    &lt;behaviors&gt;<br />      &lt;serviceBehaviors&gt;<br />        &lt;behavior name="MyServiceBehavior"&gt;<br />          &lt;serviceMetadata httpGetEnabled="true"/&gt;<br />          &lt;serviceDebug includeExceptionDetailInFaults="False"/&gt;<br />        &lt;/behavior&gt;<br />      &lt;/serviceBehaviors&gt;<br />    &lt;/behaviors&gt;<br />&lt;/system.serviceModel&gt;</pre><p>Note the service name attribute "MyNamespace.MyService" which is the windows service names, and the endpoint contract attribute, which is the ServiceContract Namespace attribute. Some small things are easy to get wrong, and the error messages will not be very informative.</p><p>Client implementation</p><pre class=\"brush:csharp\">[ServiceContract(Namespace="MyNamespace.IMyInterface")]<br />public interface IMyInterface<br />{<br /> [OperationContract]<br /> string ReturnMyString();<br />}<br /><br />public string MyClientString()<br />{<br /> string result = string.Empty;<br /><br /> string endpoint = "http://MyServer:8000/MyMethod";<br /><br /> ChannelFactory<IMyInterface> httpFactory = new ChannelFactory<IMyInterface>(<br />  new BasicHttpBinding(), new EndpointAddress(endpoint));<br /><br /> IMyInterface httpProxy = httpFactory.CreateChannel();<br /><br /> while (true)<br /> {<br />  result = httpProxy.ReturnMyString();<br />  if (result != string.Empty)<br />  {<br />   return result;<br />  }<br /> }<br />}</pre><p>I missed the [ServiceContract(Namespace="MyNamespace.IMyInterface")] bit initially on the interface definition and the error message was really not helping. It went like that: "Exception: The message with Action 'http://tempuri.org/IMyInterface/ReturnMyString' cannot be processed at the receiver" and so on. What tempuri.org? I never pun any tempuri.org in my project! OK, turns out it is some default name that was used because I have not provided my own.</p><p>Client configuration</p><p>Just a small bit of configuration was required here (and I'm not even 100% sure that all of it is required)</p><pre class=\"brush:xml\">&lt;system.serviceModel&gt;<br />    &lt;bindings&gt;<br />      &lt;basicHttpBinding&gt;<br />        &lt;binding name="basicHttp"/&gt;<br />      &lt;/basicHttpBinding&gt;<br />    &lt;/bindings&gt;<br />    &lt;client&gt;<br />      &lt;!-- this endpoint is exposed at the base address provided by host--&gt;<br />      &lt;endpoint address="" binding="basicHttpBinding" contract="MyNamespace.IMyInterface" /&gt;<br />    &lt;/client&gt;<br />&lt;/system.serviceModel&gt;</pre><p>Overall, it's just a few dozen lines of code, but it took me almost a whole day to get it working properly through the network.</p>

 */ 

public const string content_16092009_b = ""; 
public const string content_16092009_r = ""; 

 /* 
<p>Since I started writing unit tests for my code, I had this question in mind. Let's say I have a project that is a class library. I have a class in that library and this class has some internal methods. Like this:</p><pre class=\"brush:csharp\">public class MyClass<br />{<br /> public void MyPublicMethod<br /> {<br />  int k    <br />  // do something ...    <br />  int z = MyInternalMethod(k);<br />  // do something else ...  <br /> }  <br /> <br /> internal int MyInternalMethod(int i)  <br /> {<br />  // do something ...  <br /> }<br />}</pre><p>Now I want to write unit tests for these methods. I would create a "UnitTests" project, reference the nunit.framework from it and write something like this:</p><pre class=\"brush:csharp\">[TestFixture]<br />public class UnitTests<br />{  <br /> private MyClass myClass;<br /> <br /> [SetUp]  <br /> public void SetupTest  <br /> {<br />  myClass = new MyClass();  <br /> }<br /><br /> [Test]<br /> public void TestMyInternalMethod  <br /> {<br />  int z = 100;<br />  int k = myClass.MyInternalMethod(z); //CAN NOT DO THIS!    <br />  Assert.AreEqual(k, 100000);  <br /> }<br /><br /> [TearDown]<br /> public void TearDown  <br /> {<br />  myClass = null;<br /> }<br />}</pre><p>Of course, I can not do this, because of the MyInternalMethod scope. Today the <a href=\"http://stackoverflow.com/questions/1365309/unit-testing-and-the-scope-of-objects-how-to-test-private-internal-methods-etc">StackOverflow guys</a> pointed me to this little gem which is very helpful.</p><p><a href=\"http://blog.theautomatedtester.co.uk/2008/10/net-gem-how-to-unit-test-internal.html">.Net Gem - How to Unit Test Internal Methods </a></p><p>Here's the short summary:<br /><br />Go to the project that contains MyClass. Locate the AssemblyInfo.cs file. Add the following line to it:</p><pre class=\"brush:csharp\">[assembly: InternalsVisibleTo("UnitTests")]</pre><p>Done!</p>

 */ 

public const string content_10092009_b = ""; 
public const string content_10092009_r = ""; 

 /* 
<p>I have to take care of multiple printers in my application. The "Print Manager" receives a list of jobs which is basically an XML file of a simple structure - a number of PrintJob nodes. Each print job has a printer assigned to it.</p><p>The Print Manager has to send each job to the appropriate printer, and also notify the sender of the XML of the completion or failure of each job. I'm sure tasks like these are common but somehow could not find good suggestions on implementing this one. I found a <a href=\"http://www.yoda.arachsys.com/csharp/miscutil/">Miscellaneous Utility Library</a> though (written by <a href=\"http://meta.stackoverflow.com/questions/9134/jon-skeet-facts/9212">Jon Skeet</a> himself by the way) which implemented a class called "CustomThreadPool", which allows creating multiple thread pools in a .NET application.</p><p>So, my approach so far is as follows: Get a print job. If a pool exists for this printer, place the job in a thread in the pool. Otherwise, create a pool and place the job in a thread in this pool. Get next job.</p><p>Here is how it looks like so far:</p><pre class=\"brush:csharp\">private List<CustomThreadPool> _printerThreads = new List<CustomThreadPool>();<br /><br />delegate Errors ThreadMethod(PrintJob job);<br /><br />private Errors InsertThread(PrintJob job)<br />{<br /> ProcessSinglePrintJob(job);<br />}<br /><br />// stuff ...<br /><br />public void ProcessPrintJobs()<br />{<br /> if (_printJobs != null)<br /> {<br />  foreach (PrintJob printJob in _printJobs)<br />  {<br />   if(String.IsNullOrEmpty(printJob.PrinterName))<br />   {<br />    printJob.JobResult = Errors.PrinterNameNotSpecified;<br />   }<br />   else if (String.IsNullOrEmpty(printJob.ReaderName) && printJob.IsEncodeSmartCard)<br />   {<br />    printJob.JobResult = Errors.SmartCardReaderNameNotSpecified;<br />   }<br />   else<br />   {<br />    CustomThreadPool pool = _printerThreads.Find(delegate(CustomThreadPool test)<br />    {<br />     return test.Name == printJob.PrinterName;<br />    });<br /><br />    if (pool == null)<br />    {<br />     pool = new CustomThreadPool(printJob.PrinterName);<br />    }<br /><br />    ThreadMethod method = new ThreadMethod(InsertThread);<br /><br />    pool.AddWorkItem(method, printJob);<br />   }<br />  }<br /> }<br />}</pre><p>I don't have extensive experience with multithreading so this solution might not even work or it may be too complex for the task. I'll run some tests soon anyway with the actual printers.</p>

 */ 

public const string content_01092009_b = ""; 
public const string content_01092009_r = ""; 

 /* 
<p>Today I had to solve a simple problem. Let's say there are two processes running on one computer. The first service polls a database for print jobs. As soon as a job is found, a second service has to send the job to the printer. So, effectively, I have to pass some data from one local service to another.</p><p>The first, "amateurish" solution that came to my mind was to write data to a text file by the "polling" service and read from that file by "printing" service. But I thought that the task like this should be a standard one and looked around. Here's one of the examples I found:</p><p><a href=\"http://www.switchonthecode.com/tutorials/dotnet-35-adds-named-pipes-support">.NET 3.5 Adds Named Pipes Support</a></p><p>Here's the probably the simplest working example: First, I need to create two windows services. I add a timer to each service. I also add an event log to each of the services to be able to check if they work. One of the services will be a "server". Here's what goes into it's timer_Elapsed:</p><pre class=\"brush:csharp\">using (NamedPipeServerStream pipeServer = new NamedPipeServerStream("testPipe", PipeDirection.Out))<br />{<br /> pipeServer.WaitForConnection();<br /><br /> try<br /> {<br />  using (StreamWriter sw = new StreamWriter(pipeServer))<br />  {<br />   sw.AutoFlush = true;<br />   string dt = DateTime.Now.ToString();<br />   sw.WriteLine(dt);<br />   pollingEventLog.WriteEntry(dt + " written by the server");<br />  }<br /> }<br /> catch (IOException ex)<br /> {<br />  pollingEventLog.WriteEntry(ex.Message);<br /> }<br />}</pre><p>The other service will be a "client". Here's what goes into it's timer_Elapsed:</p><pre class=\"brush:csharp\">using (NamedPipeClientStream pipeClient = new NamedPipeClientStream(".", "testPipe", PipeDirection.In))<br />{<br /> pipeClient.Connect();<br /> using (StreamReader sr = new StreamReader(pipeClient))<br /> {<br />  string temp;<br />  while ((temp = sr.ReadLine()) != null)<br />  {<br />   printManagerEventLog.WriteEntry(temp + " read by the client");<br />  }<br /> }<br />}</pre><p>This is it - after both services are compiled, installed and started, their cooperation can be observed through the Event Log. Total time including googling, understanding the concept and implementing the working example - under 30 minutes.</p>

 */ 

public const string content_24082009_b = ""; 
public const string content_24082009_r = ""; 

 /* 
<p>Looks like I've been a bit busy recently!<br />Anyway, just a little trick I used today to produce human readable messages for the event log, avoiding complex switches or if/else blocks.<br />First, I put all possible errors in the enum, including the "no error", like this:</p><pre class=\"brush:csharp\">public enum Errors<br />{<br /> ProcessingCompletedSuccessfully = 0,<br /> CouldNotEstablishConnectionToPrinter = 1,<br /> ...<br /> GlobalSystemShutdownPreventedCompletingTheTaskInATimelyFashion = 999<br />}</pre><p>The event log is created as usual</p><pre class=\"brush:csharp\">private System.Diagnostics.EventLog pollingEventLog;<br /><br />if (!EventLog.SourceExists("MyHumbleSource"))<br />{<br /> EventLog.CreateEventSource("MyHumbleSource", "MyHumbleService");<br />}<br />pollingEventLog.Source = "MyHumbleSource";<br />pollingEventLog.Log = "MyHumbleService";</pre><p>The function should return the error code and the error code should be written to the event log</p><pre class=\"brush:csharp\">Errors error = PerformMyVeryComplexProcessing(XmlDocument data);<br />WriteErrorToLogFile(error);</pre><p>Finally, a small function that does the important stuff:</p><pre class=\"brush:csharp\">private void WriteErrorToLogFile(Errors error)<br />{<br /> string inputstr = error.ToString();<br /> Regex reg = new Regex(@"([a-z])[A-Z]");<br /> MatchCollection col = reg.Matches(inputstr);<br /> int iStart = 0;<br /> string Final = string.Empty;<br /> foreach (Match m in col)<br /> {<br />  int i = m.Index;<br />  Final += inputstr.Substring(iStart, i - iStart + 1) + " ";<br />  iStart = i + 1;<br /> }<br /> string Last = inputstr.Substring(iStart, inputstr.Length - iStart);<br /> Final += Last;<br /><br /> pollingEventLog.WriteEntry(Final);<br />}</pre><p>I did not write the function myself - I got the solution from<br /><a href=\"http://xinyustudio.wordpress.com/2009/01/20/split-words-by-capital-letter-using-regex/">Split words by capital letter using Regex</a></p><p>It takes the error, converts its name to string and splits the string by capital letters.<br />If the error returned was CouldNotEstablishConnectionToPrinter, then "Could Not Establish Connection To Printer" will be written to the event log.</p>

 */ 

public const string content_30072009_b = "<p>So, what is WebOS development about? First thing is to learn some 'Web OS speak'. The application begins with creating a 'stage' which is more or less like a main page for a website. The webpages, or what we call 'Forms' in Windows Forms, are called 'scenes'. These are html files. There is also code-behing for the scenes, it is javascript and called 'assistants' in Web OS speak. <p>"; 
public const string content_30072009_r = "</p>The command to generate the application template is</p><p><b>palm-generate -p \"{title:'My Application Title', id:com.mystuff.myapp, version:'1.0.0'}\" MyAppVersionOne</b></p><p>More on application structure here</p><p><a href=\"http://developer.palm.com/index.php?option=com_content&view=article&id=1626\">Application Structure</a></p><p>So, my first app has two <s>pages</s> scenes. On the first one I can press a button and this will insert a record in a database table. Another button will take me to the second scene. On the second scene the database table records are displayed and the button that takes me back to the first scene. Pretty basic stuff. The scene markup is as simple as that</p><p><a href=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SnGaqDeg6HI/AAAAAAAAAG4/BmpO50dDGq8/s1600-h/scene.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 82px;\" src=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SnGaqDeg6HI/AAAAAAAAAG4/BmpO50dDGq8/s320/scene.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5364238678453446770\" /></a></p><p>The add_button adds the record, the display_button takes me to the next scene. Other divs I use for debugging - they just display text. Now to the <s>code-behind</s> assistant.</p><pre class=\"brush:js\">" + 
    @"function FirstAssistant() {<br /> /* this is the creator function for your scene assistant object. It will be passed all the <br />    additional parameters (after the scene name) that were passed to pushScene. The reference<br />    to the scene controller (this.controller) has not be established yet, so any initialization <br />    that needs the scene controller hould be done in the setup function below. */<br />    this.db = null;<br />}<br /><br />FirstAssistant.prototype.setup = function() {<br /> this.CreateDB();<br /> Mojo.Event.listen($('add_button'), Mojo.Event.tap, this.AddEntry.bind(this));<br /> Mojo.Event.listen($('display_button'), Mojo.Event.tap, this.DisplayEntries.bind(this));<br /> $('result2').update('debug comment');<br />}" + "</pre><p>Okay, you can read the comments. Define variables, subscribe to events, open or create the database - set to go! This is the CreateDB function by the way</p><pre class=\"brush:js\">" + 
    @"FirstAssistant.prototype.CreateDB = function(){<br /> try <br /> {<br />  this.db = openDatabase('SampleDB', '', 'Sample Data Store', 65536);<br />  if(!this.db)<br />  {<br />   $(result).update('error opening db');<br />  }<br />  else<br />  {<br />   $(result).update('opened db');<br />   <br />   var string = 'CREATE TABLE IF NOT EXISTS table1 (col1 TEXT NOT NULL DEFAULT ""nothing"", col2 TEXT NOT NULL DEFAULT ""nothing""); GO;';<br />    <br />   this.db.transaction( <br />    (function (transaction) { <br />    transaction.executeSql(string, [], this.createTableDataHandler.bind(this), this.errorHandler.bind(this)); <br />    }).bind(this) );<br />  }<br /> }<br /> catch (e)<br /> {<br />  $(result).update(e);<br /> }<br />}" + 
    "</pre><p>WebOS uses Sqlite as a database engine. This is how a record is inserted:</p><pre class=\"brush:js\">" + 
    @"FirstAssistant.prototype.AddEntry = function() {<br /> var string = 'INSERT INTO table1 (col1, col2) VALUES (""test"",""test""); GO;';<br /> <br /> this.db.transaction( <br />        (function (transaction) { <br />            transaction.executeSql(string, [], this.createRecordDataHandler.bind(this), this.errorHandler.bind(this)); <br />        }).bind(this) <br />    );  <br />}" + "</pre><p>This is how I move to the next scene:</p><pre class=\"brush:js\">" + 
    @"FirstAssistant.prototype.DisplayEntries = function() {<br /> this.controller.stageController.pushScene('second', this.db);<br />}" + 
    "</pre><p>I pass the name of the scene I want to 'push' and then the parameters. On the second scene I will grab these parameters and use them. Almost as the first scene, but now I have the database open already so I pass it to the second scene.</p><pre class=\"brush:js\">" + 
    @"function SecondAssistant(origdb) {<br />    this.db = origdb;<br />}</pre>" + 
    "<p>Okay, displaying the results and formatting them are outside of the scope of this brief post. Also, I copied the code from one of the samples on developer.palm.com, the application is called Data and the code can be found under Data\\app\\assistants\\storage\\sqlite and Data\\app\\views\\storage\\sqlite. Here is how the scenes look on the emulator</p><p><a href=\"http://2.bp.blogspot.com/_Pk-5kPvf7Gs/SnGU8c_12JI/AAAAAAAAAGw/iuvpRz360Xk/s1600-h/emulator.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 266px;\" src=\"http://2.bp.blogspot.com/_Pk-5kPvf7Gs/SnGU8c_12JI/AAAAAAAAAGw/iuvpRz360Xk/s320/emulator.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5364232397471996050\" /></a></p>"; 

public const string content_29072009_b = ""; 
public const string content_29072009_r = ""; 

 /* 

<p>Quite a while ago (around 8 years) I was doing some development for PalmOS devices. With the new Palm Pre soon to be released in Australia and the Mojo SDK now freely available to everyone I decided to have a look at WebOS development. There is no need to have a Palm Pre device to begin development, I only had to download and install the SDK, Java and the VirtualBox to run the emulator. There is also a possibility of using Eclipse with the WebOS plugin but since I'm just starting and not doing anything complex, I'm happy to use Notepad++ as the IDE.</p><p><a href=\"http://developer.palm.com/index.php?option=com_content&view=article&id=1661">Installing the Palm® Mojo™ SDK on Windows</a></p><p>The Hello World page gives an understanding of the steps required to create, compile and install a WebOS application. The "SDLC" is simple and takes a few seconds - generate the application, add some functionality, package, install on the emulator, have a look, improve/fix functionality, package, install on the emulator, have a look ...</p><p><a href=\"http://developer.palm.com/index.php?option=com_content&view=article&id=1758">Hello, World!</a></p><p>There are also sample applications available and in the first few hours that I spent I learned a few things about how the applications function - scenes, assistants etc. - and also a few basic things about how the databases are used.</p><p><a href=\"http://developer.palm.com/index.php?option=com_content&view=article&id=1688">Samples</a></p>
 */ 

public const string content_22072009_b = ""; 
public const string content_22072009_r = ""; 

 /* 
<p>To complete the task I'm working on and read/write to smart cards, I had to understand the memory structure of the Mifare Standard 1K card. This was no easy task for a weak and small brain of mine! I figured it out finally and here is a very short summary of my understanding:</p><p>The total memory of 1024 bytes is divided into 16 sectors of 64 bytes, each of the sectors is divided into 4 blocks of 16 bytes. Blocks 0, 1 and 2 of each sector can store data and block 3 is used to store keys and access bits (the exception is the ‘Manufacturer Block’ which can not store data).</p><p><a href=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/SmcD5XFW5EI/AAAAAAAAAGQ/Arl5A2vpZtM/s1600-h/mifare_memory.JPG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 259px;\" src=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/SmcD5XFW5EI/AAAAAAAAAGQ/Arl5A2vpZtM/s320/mifare_memory.JPG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5361258165391778882\" /></a></p><p>The data in any sector can be protected by either Key A or both Key A and Key B security keys. I do not need to use Key B, and in this case the bytes in the trailer can be used for data. If the sector is protected by the security key, this key has to be loaded before data can be accessed by using a special command.</p><p>Access bits define the way the data in the sector trailer and the data blocks can be accessed. Access bits are stored twice – inverted and non-inverted in the sector trailer as shown in the images.</p><p><a href=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SmcEtlcYe9I/AAAAAAAAAGo/1PmC7PnoLco/s1600-h/mifare_sector_trailer.JPG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 157px;\" src=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SmcEtlcYe9I/AAAAAAAAAGo/1PmC7PnoLco/s320/mifare_sector_trailer.JPG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5361259062599646162\" /></a></p><p><a href=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/SmcELw4oPzI/AAAAAAAAAGY/avCGeebWJpA/s1600-h/mifare_access_conditions.JPG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 90px;\" src=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/SmcELw4oPzI/AAAAAAAAAGY/avCGeebWJpA/s320/mifare_access_conditions.JPG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5361258481555357490\" /></a></p><p><a href=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SmcEUuzo42I/AAAAAAAAAGg/b-8QPxeK3eA/s1600-h/mifare_access_conditions_2.JPG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 186px;\" src=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SmcEUuzo42I/AAAAAAAAAGg/b-8QPxeK3eA/s320/mifare_access_conditions_2.JPG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5361258635616379746\" /></a></p><p>Some examples:<br /><br />Data stored in the sector trailer:<br />01 02 03 04 05 06 FF 07 80 69 11 12 13 14 15 16<br />01 02 03 04 05 06 – Key A<br />FF 07 80 69 – Access bits<br />11 12 13 14 15 16 – Key B (or data if Key B is not used)<br /><br />Bytes 6, 7, 8 are access data<br />FF 07 80<br /><br />Binary representation:<br /><b>1</b>111<b>1</b>111 = FF<br /><b><u>0</u></b>000<b>0</b>111 = 07<br /><b><u>1</u></b>000<b><u>0</u></b>000 = 80</p><p>The bits that are bolded and underscored are the ones that define access to keys (C13, C23, C33 in the image above) and they form the 001 sequence. The bits that are bolded and not underscored are the same bits inverted. They form, as expected, the sequence 110.</p><p>From the table above I can see that 001 means that Key A can not be read, but can be written and Key B may be read. This is the "transport configuration" and was read from the card that was never used.</p><p>A bit more on Mifare 1K commands next time.</p>

 */ 

public const string content_19072009_b = ""; 
public const string content_19072009_r = ""; 

 /* 
<p>Ah, the great mystery of talking to the smart card is solved. The tool that helped me to do it is called CHIPDRIVE Smartcard Commander. It is a free tool and can easily be found, downloaded and installed.</p><p>When I positioned the card in the reader and started the Smartcard Commander, I could immediately see that it knows a lot of stuff about the card.</p><p><a href=\"http://3.bp.blogspot.com/_Pk-5kPvf7Gs/SmLqKv-IFMI/AAAAAAAAAGA/UXNzQTSG7sQ/s1600-h/chipdrive1.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 224px; height: 320px;\" src=\"http://3.bp.blogspot.com/_Pk-5kPvf7Gs/SmLqKv-IFMI/AAAAAAAAAGA/UXNzQTSG7sQ/s320/chipdrive1.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5360103976920945858\" /></a></p><p>But what's more important, it has some sample scripts that can be loaded when I select "CPU Card" from the System tree and use the Load Script button. The sample script shows me how to construct commands that can be send to the card, I can also run them immediately and see the results.</p><p><a href=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SmLqTwwU4oI/AAAAAAAAAGI/ER2wKvLzfNY/s1600-h/chipdrive2.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 299px; height: 320px;\" src=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SmLqTwwU4oI/AAAAAAAAAGI/ER2wKvLzfNY/s320/chipdrive2.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5360104131750322818\" /></a></p><p>I only need to send the proper commands now...</p>

 */ 

public const string content_17072009_b = ""; 
public const string content_17072009_r = ""; 

 /* 
<p>Resolved the problem with the Smart Card reader. After everything else failed, I tried installing the pritner and reader on the clean PC. Surprisingly, it worked. Then I tried uninstalling all drivers from my PC, restarting and reinstalling again. Unsurprisingly, it did not work (I tried doing this before).</p><p>Next thing, I decided to compare the driver versions between my PC and clean PC. And here it was - my driver said "SCM Microsystems 4.35.00.01" and the one on the clean PC said "SCM Microsystems 5.15". And, of course, the S331DICL.sys files had different dates. So, I copied the S331DICL.sys and installed the drivers again. That did not quite help though, the driver version was now the proper one, but the device version itself was not.</p><p><a href=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/SmBBEeZZLzI/AAAAAAAAAF4/tA__RWDg-qs/s1600-h/scmdriver.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 192px;\" src=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/SmBBEeZZLzI/AAAAAAAAAF4/tA__RWDg-qs/s320/scmdriver.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5359355101705744178\" /></a></p><p>Why are the versions different? Only when I searched for S331DICL.sys on the whole computer I could figure out what was the most likely reason for my problem - looks like the old the driver version was installed by the 3M scanner installer. I found the old S331DICL.sys in one of the subfolders under its Program Files folder. Now, when I was installing the driver, it remembered the location and used the old file that came with the 3M scanner. So I uninstalled the 3M application, made sure that the S331DICL.sys file is deleted completely from my computer, copied over the new version and pointed to the new version of S331DICL.sys file when installing the smart card drivers. Now it finally worked.</p><p>Next thing is to actually implement communication to the smart card ...</p>

 */ 

public const string content_15072009_b = ""; 
public const string content_15072009_r = ""; 

 /* 

<p>I had some time to use while I was investigating the smart card issues, so I decided to do the right thing. Something I have never done before. To learn how to write and use unit tests. Since I had a very small application that was testing the capabilities of the printer, it looked like a perfect guinea pig for my experiment. It turned out that writing tests is not so hard as I expected it to be. Well, I can not promise that I did it right, of course, because no one writes them here anyway and there is no one to mentor me or point to my mistakes.</p><p>So first of all I downloaded and installed NUnit framework</p><a href=\"http://www.nunit.org/index.php?p=download">NUnit framework</a><p>Then I added a project of type class library to my solution and a single class called UnitTest to this solution. Here is the full code of the UnitTest class:</p><pre class=\"brush:csharp\">using System;<br />using NUnit.Framework;<br />using SmartCardTest;<br />using DataCardCP40;<br /><br />[TestFixture]<br />public class UnitTest<br />{<br />    public DataCardPrinter printer;<br />    ICE_API.DOCINFO di;<br /><br />    [Test]<br />    public void CreateObjects()<br />    {<br />        printer = new DataCardPrinter();<br />        di = DataCardPrinter.InitializeDI();<br />        printer.CreateHDC();<br />        Assert.AreNotEqual(printer.Hdc, 0);<br />        Assert.Greater(di.cbSize, 0);<br />    }<br /><br />    [Test]<br />    public void SetInteractiveMode()<br />    {<br />        int res = ICE_API.SetInteractiveMode(printer.Hdc, true);<br />        Assert.Greater(res, 0);<br />    }<br /><br />    [Test]<br />    public void StartDoc()<br />    {<br />        int res = ICE_API.StartDoc(printer.Hdc, ref di);<br />        Assert.Greater(res, 0);<br />    }<br /><br />    [Test]<br />    public void StartPage()<br />    {<br />        int res = ICE_API.StartPage(printer.Hdc);<br />        Assert.Greater(res, 0);<br />    }<br /><br />    [Test]<br />    public void RotateCardSide()<br />    {<br />        int res = ICE_API.RotateCardSide(printer.Hdc, 1);<br />        Assert.Greater(res, 0);<br />    }<br /><br />    [Test]<br />    public void FeedCard()<br />    {<br />        int res = ICE_API.FeedCard(printer.Hdc, ICE_API.ICE_SMARTCARD_FRONT + ICE_API.ICE_GRAPHICS_FRONT);<br />        Assert.Greater(res, 0);<br />    }<br /><br />    [Test]<br />    public void SmartCardContinue()<br />    {<br />        int res = ICE_API.SmartCardContinue(printer.Hdc, ICE_API.ICE_SMART_CARD_GOOD);<br />        Assert.Greater(res, 0);<br />    }<br /><br />    [Test]<br />    public void EndPage()<br />    {<br />        int res = ICE_API.EndPage(printer.Hdc);<br />        Assert.Greater(res, 0);<br />    }<br /><br />    [Test]<br />    public void EndDoc()<br />    {<br />        int res = ICE_API.EndDoc(printer.Hdc);<br />        Assert.Greater(res, 0);<br />    }<br />}</pre><p>There's not much to explain. First I create the objects required and verify that the device context was created and the DOCINFO struct was initialized. All the other tests just check the return codes of the printer functions. The error code is 0, so the check is for return value being greater than zero.</p><p>After compiling and fixing errors I realized that I have no way to set the sequence of the execution. Supposedly, as the theory teaches us, each test should be able to run alone and independent of whether the rest were passed, failed or run at all. Well, does not work so well in my case - if I want to test that the card can be ejected from the printer, I need to somehow insert it first! I found out, however, that the tests are executed in the alphabetic order of their names. Okay, that'll do for now. So I just renamed my tests like this A_CreateObjects(), B_SetInteractiveMode() etc. Then I compiled the solution, creating the "DataCardTest.dll". Next step is to run NUnit and open the dll. Wow! The smart thing can see all my tests now. When ready, just select Test->Run all from the menu and enjoy ...</p><p><a href=\"http://2.bp.blogspot.com/_Pk-5kPvf7Gs/Sl3KIRGxdoI/AAAAAAAAAFo/h1kkUw6rSdw/s1600-h/nunitpassed.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 135px;\" src=\"http://2.bp.blogspot.com/_Pk-5kPvf7Gs/Sl3KIRGxdoI/AAAAAAAAAFo/h1kkUw6rSdw/s320/nunitpassed.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5358661375020332674\" /></a></p><p>It does not alway end that well, however - it might be like this (see how it tells what was the line where the error happened and how the expected test result was different from the actual).</p><p><a href=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/Sl3KVb9QeJI/AAAAAAAAAFw/NwfR4_9w-g0/s1600-h/nunitfailed.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 158px;\" src=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/Sl3KVb9QeJI/AAAAAAAAAFw/NwfR4_9w-g0/s320/nunitfailed.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5358661601271511186\" /></a></p><p>What happened here? Took me some time to figure out ... the default printer was not set to my card printer.</p>
 */ 

public const string content_10072009_b = ""; 
public const string content_10072009_r = ""; 

 /* 
<p>Now, the slightly harder part is communicating with the Smart Card reader. Most, if not all, of the functionality resides within the winscard.dll. For functions reference, this MSDN page could be a start.</p><p><a href=\"http://msdn.microsoft.com/en-us/library/aa924246.aspx">Smart Card Functions</a></p><p>I also found a nice example using google code search which resides here</p><p><a href=\"http://chenguo.googlecode.com/svn/trunk/DriverTest/DriverTest/ACR120Driver.cs">ACR120Driver.cs</a></p><p>and using this code as a template, I used the following code to test the functionality of my SCM reader.</p><pre class=\"brush:csharp\">long retCode;<br />int hContext = 0;<br />int ReaderCount = 0;<br />int Protocol = 0;<br />int hCard = 0;<br />string defaultReader = null;<br />int SendLen, RecvLen;<br /><br />byte[] SendBuff = new byte[262];<br />byte[] RecvBuff = new byte[262];<br /><br />ModWinsCard.SCARD_IO_REQUEST ioRequest;<br /><br />retCode = ModWinsCard.SCardEstablishContext(ModWinsCard.SCARD_SCOPE_USER, 0, 0, ref hContext);<br />if (retCode != ModWinsCard.SCARD_S_SUCCESS)<br />{<br /> System.Diagnostics.Debug.WriteLine(ModWinsCard.GetScardErrMsg(retCode));<br />}<br /><br />retCode = ModWinsCard.SCardListReaders(hContext, null, null, ref ReaderCount);<br /><br />if (retCode != ModWinsCard.SCARD_S_SUCCESS)<br />{<br /> System.Diagnostics.Debug.WriteLine(ModWinsCard.GetScardErrMsg(retCode));<br />}<br /><br />byte[] retData = new byte[ReaderCount];<br />byte[] sReaderGroup = new byte[0];<br /><br />//Get the list of reader present again but this time add sReaderGroup, retData as 2rd & 3rd parameter respectively.<br />retCode = ModWinsCard.SCardListReaders(hContext, sReaderGroup, retData, ref ReaderCount);<br /><br />if (retCode != ModWinsCard.SCARD_S_SUCCESS)<br />{<br /> System.Diagnostics.Debug.WriteLine(ModWinsCard.GetScardErrMsg(retCode));<br />}<br /><br />//Convert retData(Hexadecimal) value to String <br />string readerStr = System.Text.ASCIIEncoding.ASCII.GetString(retData);<br />string[] rList = readerStr.Split('\0');<br /><br />foreach (string readerName in rList)<br />{<br /> if (readerName != null && readerName.Length > 1)<br /> {<br />  defaultReader = readerName;<br />  break;<br /> }<br />}<br /><br />if (defaultReader != null)<br />{<br /> retCode = ModWinsCard.SCardConnect(hContext, defaultReader, ModWinsCard.SCARD_SHARE_DIRECT,<br />       ModWinsCard.SCARD_PROTOCOL_UNDEFINED, ref hCard, ref Protocol);<br /> //Check if it connects successfully<br /> if (retCode != ModWinsCard.SCARD_S_SUCCESS)<br /> {<br />  string error = ModWinsCard.GetScardErrMsg(retCode);<br /> }<br /> else<br /> {<br />  int pcchReaderLen = 256;<br />  int state = 0;<br />  byte atr = 0;<br />  int atrLen = 255;<br /><br />  //get card status<br />  retCode = ModWinsCard.SCardStatus(hCard, defaultReader, ref pcchReaderLen, ref state, ref Protocol, ref atr, ref atrLen);<br /><br />  if (retCode != ModWinsCard.SCARD_S_SUCCESS)<br />  {<br />   return;<br />  }<br /><br />  //read/write data etc.<br />  <br />  .....<br /> }<br />}</pre><p>ModWinsCard.cs is, again, a wrapper for the winscard.dll functions, data structures, and declares all required constants.</p><p>Anyway, this code actually worked fine, except one little detail - the state variable that gets returned by the SCardStatus returned the value of 2. And the possible values are explained here:</p><p><a href=\"http://msdn.microsoft.com/en-us/library/aa924671.aspx">SCardStatus</a></p><p>"2" is SCARD_PRESENT, which means "A card is present in the card reader, but it is not in position for use". A better result would be something like SCARD_NEGOTIABLE which is "The card has been reset and is waiting for protocol negotiation".</p><p>Also, using SCardConnect with preferred protocol set to T0 or T1 returned SCARD_W_UNRESPONSIVE_CARD error.</p><p>Now this is the point where I had to consult with the printer manufacturer because there's a number of possible reasons for the errors - hardware, firmware, drivers or incompatible card. Work still in progress.</p>

 */ 

public const string content_07072009_b = "<p>So here's the new toy I've got to play with - the DataCard CP40 Plus card printer with the SCM SCR331-DI Smart Card reader.</p>"; 
public const string content_07072009_r = "<p><a href=\"http://www.datacard.com/id-card-printer-support-and-drivers/cp40-plus-card-printer\">Datacard CP40 Plus</a></p><p>Developing the application for the printer consists mostly of two parts - communicating with the printer and communicating with the smart card reader. You tell the printer to pick up the card, you tell the printer to position the card for smart card processing, you tell the smart card reader to write data to the smart card, you tell the printer to encode the magstripe and print something on the card, you tell the printer to finish with the print job.</p><p>It does not look so easy when you read the manual. This is how the programming flow looks like:</p><a href=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SlNIyWEhAfI/AAAAAAAAAFg/xjdzsP2OIqw/s1600-h/scard.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 250px; height: 320px;\" src=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SlNIyWEhAfI/AAAAAAAAAFg/xjdzsP2OIqw/s320/scard.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5355704411628831218\" /></a><p>In reality, though, the whole printer communication is mostly done by the following code:</p><pre class=\"brush:csharp\">" + 
    @"printer.Hdc = PrintDoc.PrinterSettings.CreateMeasurementGraphics().GetHdc().ToInt32();<br /><br />/* Set Interactive mode */<br />if (ICE_API.SetInteractiveMode(printer.Hdc, true) > 0)<br />{<br /> ICE_API.DOCINFO di = new ICE_API.DOCINFO();<br /> /* Initialize DOCINFO */<br /> di.cbSize = 16;<br /> di.lpszDocName = ""Card Printer SDK Test"";<br /> di.lpszDataType = string.Empty;<br /> di.lpszOutput = string.Empty;<br /><br /> /* Start document and page */<br /> if (ICE_API.StartDoc(printer.Hdc, ref di) > 0)<br /> {<br />  if (ICE_API.StartPage(printer.Hdc) > 0)<br />  {<br />   /* Set card rotation on */<br />   ICE_API.RotateCardSide(printer.Hdc, 1);<br />   /* Feed the card into the smart card reader */<br />   if (ICE_API.FeedCard(printer.Hdc, ICE_API.ICE_SMARTCARD_FRONT + ICE_API.ICE_GRAPHICS_FRONT) > 0)<br />   {<br />    /* Put any SmartCard processing/communication here */<br />    TalkToSmartCard();<br />   }<br />   /* Remove the card from the reader and continue printing */<br />   ICE_API.SmartCardContinue(printer.Hdc, ICE_API.ICE_SMART_CARD_GOOD);<br />   /* End the page */<br />   ICE_API.EndPage(printer.Hdc);<br />  }<br />  /* End job */<br />  ICE_API.EndDoc(printer.Hdc);<br /> }<br />}" + 
    "</pre><p>The ICE_API mostly contains wrappings for the functions from the ICE_API.dll which comes with the printer and defines some constants and data structures, like this</p><pre class=\"brush:csharp\">" + 
    @"[StructLayout(LayoutKind.Sequential)]<br />public struct DOCINFO<br />{ <br /> public int cbSize;<br /> public string lpszDocName;<br /> public string lpszOutput;<br /> public string lpszDataType;<br />}<br /><br />........<br /><br />[DllImport(""ICE_API.dll"")]<br />public static extern int FeedCard(int hdc, int dwCardData);<br /><br />[DllImport(""ICE_API.dll"")]<br />public static extern int GetCardId(int hdc, CARDIDTYPE pCardId);<br /><br />[DllImport(""ICE_API.dll"")]<br />public static extern int SmartCardContinue(int hdc, int dwCommand);<br /><br />.........<br /><br />public const int ICE_SMARTCARD_FRONT = 0x10;<br />public const int ICE_GRAPHICS_FRONT = 0x1;<br /><br />public const int ICE_SMART_CARD_GOOD = 0;<br />public const int ICE_SMART_CARD_ABORT = 1;</pre>" +
    "<p>Now that was the easy part.</p>"; 

public const string content_27062009_b = ""; 
public const string content_27062009_r = ""; 

 /* 
<p>Some members of our team, including myself, have attended a small, half-day workshop on Microsoft Embedded Technologies. Here's how the agenda looked like:</p><table border=1><tr><td width="20%">TIME</td><td>TOPIC</td></tr><br /><tr><td>12:30</td><td>Registration and light lunch</td></tr><br /><tr><td>13:00 – 13:05</td><td>Welcome speech</td></tr><br /><tr><td>13:10 – 13:30</td><td>Introduction: Why use Embedded? What are the benefits?</td></tr><br /><tr><td>13:30 to 15:00</td><td>Module 1: Windows Embedded Standard – Development Suite, Tools and Utilities.<br /><br />Module 2: Embedded Enabling Features.</td></tr><br /><tr><td>15:00</td><td>Tea/Coffee Break </td></tr><br /><tr><td>14:30 to 16:00</td><td>Module 3: Demo:<br />- Building an image using File Based Write Filter<br />Module 4: Componentization of 3rd Party Drivers.<br /><br />Module 5: Demo:<br />- Creating Custom Components in your image.</td></tr><br /><tr><td>16:00 - 16:30</td><td>Q & A </td></tr><br /><tr><td>16:30</td><td>Closing and thank you </td></tr><br /></table><p>It was held at the local Microsoft office (not Microsoft Office, but the actual place where like, people work). The office was pretty boring by the way - no huge Bill Gates portaits, no sacrifices etc ... maybe they clean up when they know strangers will be present.</p><p>Anyway, the topic was mostly about how to assemble your own embedded OS from parts of dismembered Windows XP or Windows Embedded Standard etc. Basically, if I know exactly what peripherial devices will my hardware use, I can only include drivers for these devices, hugely reducing the size of the OS. Also, I may choose to cut out other elements of the OS - I may get rid of the whole explorer shell altogether. They mentioned that the smallest OS they have actually seen used by one of the clients was about 8MB in size. Quite impressive compared to the standard XP footprint of about 1.9GB.</p><p>As they said, the goal of the workshop was to show the participants that the process of assembling your own OS is not as complicated as people usually think. Can't say they succeeded - looked fairly complex to me so far ...</p><p>P.S. I have no idea why blogger inserts so many empty lines before the table ... will try to fix it later.</p>

 */ 

public const string content_23062009_b = ""; 
public const string content_23062009_r = ""; 

 /* 
<p>After a bit of thought, I decided what would be the easiest and the most convinient way to run my small application that helps to convert projects from VSS to TFS.</p><p>I will start the command line tool passing them together with parameters to cmd.exe application, and run cmd.exe with the -k parameter to prevent the command window from closing after the tool exits. I will keep the ID of the process that runs cmd.exe. Next time I run the cmd.exe, I will check if there is ID present, and if yes, I will kill the process, and then start a new one. This way the user's computer will not be littered with command windows.</p><p>So, the small class that would take care of process management looks like this</p><pre class=\"brush:csharp\">public class ProcessFactory<br />{<br /> private static int _currentProcessID = -1;<br /><br /> private static Process _cmdProcess;<br /><br /> private static ProcessStartInfo _startInfo;<br /><br /> public static ProcessStartInfo StartInfo<br /> {<br />  get<br />  {<br />   if (_startInfo == null)<br />   {<br />    _startInfo = new ProcessStartInfo();<br />   }<br />   return _startInfo;<br />  }<br /> }<br /><br /> public static void RunProcess(string filename, string args, string workingdir)<br /> {<br />  try<br />  {<br />   if (_currentProcessID > 0)<br />   {<br />    Process processToClose = Process.GetProcessById(_currentProcessID);<br />    if (processToClose != null)<br />    {<br />     processToClose.Kill();<br />    }<br />    _currentProcessID = -1;<br />   }<br /><br />   StartInfo.FileName = filename;<br />   StartInfo.Arguments = args;<br />   StartInfo.WorkingDirectory = workingdir;<br /><br />   _cmdProcess = Process.Start(StartInfo);<br /><br />   if (_cmdProcess != null)<br />   {<br />    _currentProcessID = _cmdProcess.Id;<br />   }<br />  }<br />  catch (Exception ex)<br />  {<br />   Logger.LogInfo(ex);<br />  }<br /> }<br />}</pre><p>And then I just call the RunProcess as many times as I want, but the user will not be bothered with "leftover" command windows</p><pre class=\"brush:csharp\">string args = "/k ssarc.exe -d- -i -y" + SettingsManager.GetSetting(Constants.VSSLOGIN)<br /> + "," +<br /> SettingsManager.GetSetting(Constants.VSSPASSWORD) + " -s" +<br /> SettingsManager.GetSetting(Constants.VSSDBFOLDER) + " " +<br /> SettingsManager.GetSetting(Constants.VSSARCHIVEFILENAME)<br /> + ".ssa" + " \"" + SettingsManager.GetSetting(Constants.VSSPROJECTNAME) + "\"";<br /><br />ProcessFactory.RunProcess("cmd.exe", args, SettingsManager.GetSetting<br />(Constants.VSSINSTFOLDER));<br /><br />.....<br /><br />args = "/k ssrestor.exe \"-p" + SettingsManager.GetSetting(Constants.VSSPROJECTNAME)<br /> + "\"" + " -s" + SettingsManager.GetSetting(Constants.VSSARCHIVEFOLDER) +<br /> " -y" + SettingsManager.GetSetting(Constants.VSSLOGIN) + "," +<br /> SettingsManager.GetSetting(Constants.VSSPASSWORD) + " " +<br /> SettingsManager.GetSetting(Constants.VSSARCHIVEFILENAME) + ".ssa" +<br /> " \"" + SettingsManager.GetSetting(Constants.VSSPROJECTNAME) + "\"";<br /><br />ProcessFactory.RunProcess("cmd.exe", args, SettingsManager.GetSetting<br />(Constants.VSSINSTFOLDER));</pre><p>etc., until finished.</p>

 */ 

public const string content_16062009_b = ""; 
public const string content_16062009_r = ""; 

 /* 
<p>I was not too loaded with work recently so I decided to write a small application that would help to automate the process of converting existing Visual SourceSafe projects to Team Foundation Server. The idea is to get some information from the user first, and then spare him from some manual tasks - running tools like ssarc, ssrestor or VSSConverter, manually creating and editing XML files etc.</p><p>When the application starts, the user needs to provide (or just check) the following information:</p><ul><li>A folder where Visual SourceSafe is installed</li><li>A folder where Visual SourceSafe database is located</li><li>Visual SourceSafe database administrator login credentials</li><li>The name of the Visual SourceSafe project to be converted</li><li>A folder that will be used during conversion to restore VSS database, keep XML files etc.</li><li>SQL Server that will be used by the converter</li><li>A name of the TFS and the port number</li><li>A name of the project on the TFS where the converted files will go</li></ul><p>A significant chunk of the application functionality is just wrapping the calls to command line tools so that the user does not have to bother with manually locating them, typing the correct parameters etc.</p><p>For that purpose, the .NET class Process is quite handy.<br />Here is the example:<br />To archive the VSS project MyProject which is in the VSS database located on MyServer into the archive file called MyArchive.ssa I need to run the following from the command line:</p><p>>"C:\Program Files\Microsoft Visual SourceSafe\ssarc.exe" "-d- -i -yadmin,password -s\\MyServer\ MyArchive.ssa \$/MyProject\"</p><p>To run this command from the C# code I can use the following code:</p><pre class=\"brush:csharp\">ProcessStartInfo startInfo = new ProcessStartInfo();<br />startInfo.FileName = "ssarc.exe";<br />startInfo.Arguments = @"-d- -i -yadmin,password -s\\MyServer\ MyArchive.ssa \$/MyProject\";<br />startInfo.WorkingDirectory = @"C:\Program Files\Microsoft Visual SourceSafe";<br />Process process = Process.Start(startInfo);</pre><p>This is quite self-explanatory.</p><p>There are a couple of things that I had trouble with however. First thing is logging. It would be nice to log the errors and messages that the process generates. This is possible, according to the MSDN article.</p><p><a href=\"http://msdn.microsoft.com/en-us/library/system.diagnostics.processstartinfo.aspx">ProcessStartInfo Class</a></p><blockquote>Standard input is usually the keyboard, and standard output and standard error are usually the monitor screen. However, you can use the RedirectStandardInput, RedirectStandardOutput, and RedirectStandardError properties to cause the process to get input from or return output to a file or other device. If you use the StandardInput, StandardOutput, or StandardError properties on the Process component, you must first set the corresponding value on the ProcessStartInfo property. Otherwise, the system throws an exception when you read or write to the stream.</blockquote><p>However, if I redirect standard output to the text file, for example, the user is unable to see it. And some of the tools used required interaction with the user. So it looks like I either interact with the user, or log the messages somewhere.</p><p>Also, when the process completes, it closes the window where it was running. So, if there is a message shown by the process when it exits, the user does not have time to read it. It might be frustrating when the process exits with an error message and the user does not know what exactly the error was. And it can not be logged because the output can not be redirected somewhere - the user needs to see it on the screen.</p><p>I will still be looking for the 'elegant' solution for this, but so far I found a workaround: rather than starting the process itself, I can start the command line using the "cmd.exe" and pass the whole tool together with the parameters as a parameter to cmd.exe.</p><p><a href=\"http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/cmd.mspx?mfr=true">CMD</a></p><p>The trick is that specifying the /k parameter prevents the command window from closing after the process exits. Here is how the previous code will look like when changed according to my workaround:</p><pre class=\"brush:csharp\">ProcessStartInfo startInfo = new ProcessStartInfo();<br />startInfo.FileName = "cmd.exe";<br />startInfo.Arguments = @"/k "C:\Program Files\Microsoft Visual SourceSafe\ssarc.exe" "-d- -i -yadmin,password -s\\MyServer\ MyArchive.ssa \$/MyProject\"";<br />Process process = Process.Start(startInfo);</pre><p>I will be looking for a better solution when I have time to improve this application.</p>

 */ 

public const string content_09062009_b = ""; 
public const string content_09062009_r = ""; 

 /* 
<p>I had to write a small Windows Forms application today. It just gets some user input, creates an XML file, sends it to the webservice, gets the response, parces it and shows the results to the user. Good thing is that I had to remind myself how to use two simple things.</p><h3>1. Saving and retrieving values using the app.config file.</h3><p>If I want to get some values from the app.config file, I can keep them in the appSetting section and the whole app.config file for the small application can be as simple as that</p><pre class=\"brush:xml\"><?xml version="1.0" encoding="utf-8"?><br /><configuration><br /> <appSettings><br />  <add key="MYKEY1" value="myValue1" /><br />  <add key="MYKEY2" value="myValue2" /><br /> </appSettings><br /></configuration><br /></pre><p>To read the values I need to do just the following (after I add a reference to System.configuration to the project):</p><pre class=\"brush:csharp\">string myFirstValue = ConfigurationManager.AppSettings.Get("MYKEY1");</pre><p>To update the values I need to put a little bit more effort</p><pre class=\"brush:csharp\">Configuration config = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);<br />AppSettingsSection appSettings = config.AppSettings;<br /><br />appSettings.Settings["MYKEY1"].Value = myNewValue1;<br />appSettings.Settings["MYKEY2"].Value = myNewValue2;<br /><br />config.Save(ConfigurationSaveMode.Modified);<br />ConfigurationManager.RefreshSection("appSettings");</pre><p>It is useful to know that this would not work at debug time, though - it will not throw an exception, but the values would not be updated too. I spent a few minutes trying to find out why it does not work before I understood that this behaviour is expected.</p><h3>2. Creating the XML document.</h3><p>Of course, for the purposes of my application, where the whole XML is maybe 10 to 15 elements, I could go with the following:</p><pre class=\"brush:csharp\">string myXML = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><message><header SchemaVersion="2.0">";<br />myXML += "<someID>" + someID + "</someID>";<br />...<br />myXML += "</message>";<br />return myXML;</pre><p>The code would actually be shorter than the "proper" XML handling, take less time to write and maybe even will work faster (especially if I use a StringBuilder to concatenate strings). I did it the "proper" way, however - for practice.</p><p>To create a document</p><pre class=\"brush:csharp\">XmlDocument xmlDoc = new XmlDocument();</pre><p>To create a declaration</p><pre class=\"brush:csharp\">XmlDeclaration xDec = xmlDoc.CreateXmlDeclaration("1.0", "UTF-8", null);</pre><p>To create an element in a format of <pre class=\"brush:xml\"><MYKEY1>myValue1</MYKEY1></pre> I created a small helper function</p><pre class=\"brush:csharp\">private XmlElement CreateElementFromNameValue(string name, string value)<br />{<br /> XmlElement element = xmlDoc.CreateElement(name);<br /> element.InnerText = value;<br /> return element;<br />}</pre><p>To create an attribute to the element</p><pre class=\"brush:csharp\">XmlElement xmlHeader = xmlDoc.CreateElement("header");<br />XmlAttribute schema = xmlDoc.CreateAttribute("SchemaVersion");<br />schema.Value = "2.0";<br />xmlHeader.SetAttributeNode(schema);</pre><p>To bring it all together</p><pre class=\"brush:csharp\">XmlDocument xmlDoc = new XmlDocument();<br />XmlDeclaration xDec = xmlDoc.CreateXmlDeclaration("1.0", "UTF-8", null);<br /><br />XmlElement request = xmlDoc.CreateElement("request");<br />XmlAttribute schema = xmlDoc.CreateAttribute("SchemaVersion");<br />schema.Value = "2.0";<br />request.SetAttributeNode(schema);<br /><br />request.AppendChild(CreateElementFromNameValue("MYKEY1", "myValue1"));<br />request.AppendChild(CreateElementFromNameValue("MYKEY2", "myValue2"));<br /><br />xmlDoc.AppendChild(xDec);<br />xmlDoc.AppendChild(request);</pre><p>Expected InnerXml of the xmlDoc</p><pre class=\"brush:xml\"><?xml version="1.0" encoding="UTF-8"?><br /><request SchemaVersion="2.0"><br /> <MYKEY1>myValue1</MYKEY1><br /> <MYKEY2>myValue2</MYKEY2><br /></request></pre>

 */ 

public const string content_25052009_b = ""; 
public const string content_25052009_r = ""; 

 /* 

<p>Now that I have the TFS installed to play with, my next task is to come up with the process to transfer existing projects from Visual Source Save. Since the current VSS database is fairly huge, and we do not want to transfer the whole thing at once, I came up with the following process:</p><ul><br /><li>Select project(s) to be transferred from VSS database</li><br /><li>Back up project(s) and restore them to the new VSS database</li><br /><li>Fix the issues in the new VSS database with the Analyze tool</li><br /><li>Run the VSSConverter tool in analyse mode</li><br /><li>Get the TFS ready for migration</li><br /><li>Prepare the migration settings file</li><br /><li>Run the VSSConverter tool in migration mode</li><br /><li>Verify the results of the migration</li></ul><p>This may look rather lengthy and complex, but it makes sure that the current VSS database remains untouched, which is quite important for obvious reasons.</p><p>Here is how I migrated a small project from VSS to TFS in a few more detail:</p><p><h3>Select project(s) to be transferred from VSS database</h3></p><p>Let's say we want to transfer MySmallProject which is located in $/MyMiscProjects/MySmallProject in a large VSS database.</p><p><h3>Back up project(s) and restore them to the new VSS database</h3></p><p>Microsoft has two utilities for backing up and restoring VSS projects, SSARC and SSRESTOR. Their parameters are described in detail here:</p><p><a href=\"http://msdn.microsoft.com/en-us/library/t9d14fh1(VS.80).aspx">SSARC</a><a href=\"http://msdn.microsoft.com/en-us/library/b4ch74ts(VS.80).aspx">SSRESTOR</a></p><p>They usually can be found in the SourceSafe folder (i.e. C:\Program Files\Microsoft Visual SourceSafe)</p><p>First, I create a new VSS database (VSSTransfer) where I'm the admin. Next, I need to have admin rights in the initial VSS database and, of course, to know where it is located. Then I can run the SSARC command like that:</p><p><i><u>ssarc -d- -i -yadmin,password -s\\PathToVSSDB\MyHugeVSSDB CodeProject.ssa "$/MyMiscProjects/MySmallProject"</u></i></p><p>This backs up the MySmallProject with default parameters, without deleting files from the old database "MyHugeVSSDB", into the CodeProject.ssa archive file.</p><p>Next, I restore the project into the new empty database I created.</p><p><i><u>ssrestor "-p$/MySmallProject" -sC:\VSSTransfer -yadmin,password CodeProject.ssa "$/MyMiscProjects/MySmallProject"</u></i></p><p><h3>Fix the issues in the new VSS database with the Analyze tool</h3></p><p>This is just running the Analyze tool with the -F parameter to fix possible issues in the VSS.</p><p><h3>Run the VSSConverter tool in analyse mode</h3></p><p>The VSSConverter is a Microsoft tool that comes with the TFS and allows migrating data from VSS database into the TFS database. More info here:</p><p><a href=\"http://msdn.microsoft.com/en-us/library/ms253090(VS.80).aspx">VSSConverter Command-Line Utility for Source Control Migration</a></p><p>To run the VSSConverter, a settings file has to be prepared first. Here is the sample:</p><pre class=\"brush:xml\"><?xml version="1.0" encoding="utf-8"?><br /><SourceControlConverter><br />      <ConverterSpecificSetting><br />            <Source name="VSS"><br />                  <VSSDatabase name="C:\VSSTransfer"></VSSDatabase><br />            </Source><br />            <ProjectMap><br />            <Project Source="$/MySmallProject"></Project><br />            </ProjectMap><br />      </ConverterSpecificSetting><br />      <Settings><br />       <Output file="Analysis.xml"></Output><br />     </Settings><br /></SourceControlConverter></pre><p>(if we need to transfer multiple projects, there can be multiple 'Project' elements under 'ProjectMap')</p><p>Now I save the file as settings.xml and run the VSSConverter tool (which is located in drive:\Program Files\Microsoft Visual Studio 9.0\Common7\IDE ):</p><p><i><u>VSSConverter analyze settings.xml</u></i></p><p>(An important note, though - the VSSConverter should be the one that comes with TFS SP1. I tried to use the tool from the original TFS install and got troubles with history - it was not migrated at all).</p><p>Two files will be created, Analysis.xml and UserMap.xml</p><p><h3>Get the TFS ready for migration</h3></p><p>First of all, create the target project, i.e. MyTFSSmallProject. Then, look at the UserMap.xml. It lists all VSS users who performed action in the database. It looks like this:</p><pre class=\"brush:xml\"><?xml version="1.0" encoding="utf-8"?><br /><UserMappings xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"<br /> xmlns:xsd="http://www.w3.org/2001/XMLSchema"><br />  <UserMap From="Admin" To="" /><br />  <UserMap From="Bob" To="" /><br />  <UserMap From="Fred" To="" /><br />  <UserMap From="Jack" To="" /><br /></UserMappings></pre><p>To map users properly, we need to add them to TFS. If the user no longer exists, he can be mapped to any user - TFS admin or his team leader, for example. So the UserMap.xml will end up looking like this:</p><pre class=\"brush:xml\"><?xml version="1.0" encoding="utf-8"?><br /><UserMappings <br />xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" <br />xmlns:xsd="http://www.w3.org/2001/XMLSchema"><br />  <UserMap From="Admin" To="MYDOMAIN\TFSAdmin" /><br />  <UserMap From="Bob" To="MYDOMAIN\Bob" /><br />  <UserMap From="Fred" To="MYDOMAIN\Fred" /><br />  <UserMap From="Jack" To="MYDOMAIN\TFSAdmin" /><br /></UserMappings></pre><p><h3>Prepare the migration settings file</h3></p><p>Modify the settings.xml file to specify the SQL Server that is going to be used for the migration process and Team Foundation Server, the users map file and the destination project on the TFS as follows and save it as migration_settings.xml. The SQL server does not have to be the one where TFS database are located, and the user performing the migration need to have CREATE DATABASE permission in the SQL Server.</p><pre class=\"brush:xml\"><?xml version="1.0" encoding="utf-8"?><br /><SourceControlConverter><br />      <ConverterSpecificSetting><br />            <Source name="VSS"><br />              <VSSDatabase name="C:\VSSTransfer"></VSSDatabase><br />  <UserMap name="C:\VSSTransfer\Usermap.xml"></UserMap><br />  <SQL Server="MYLOCALSQL"></SQL><br />            </Source><br />            <ProjectMap><br />              <Project Source="$/MySmallProject" Destination="$/MyTFSSmallProject"><br /></Project><br />            </ProjectMap><br />      </ConverterSpecificSetting><br />      <Settings><br /> <TeamFoundationServer name="MYTFSSERVER" port="8080" protocol="http"><br /></TeamFoundationServer><br />     </Settings><br /></SourceControlConverter></pre><p><h3>Run the VSSConverter tool in migration mode</h3></p><p>Run the VSSConverter tool in migration mode as follows:</p><p><i><u>VSSConverter Migrate migration_setting.xml</u></i></p><p>A report file called VSSMigrationReport.xml will be created if the migration process runs successfully. A log file called VSSConverter.log will contain information messages about the migration process.</p><p><h3>Verify the results of the migration</h3></p><p>Log in to TFS, go to the project's Source Control Explorer, check the files, history etc. Get the latest version, build it. Have fun.</p>
 */ 

public const string content_15052009_b = ""; 
public const string content_15052009_r = ""; 

 /* 
<p>Okay, so today the TFS was finally installed. Unfortunately, I cannot tell for sure what the exact thing that fixed it was, because we changed more than one thing. Firstly, the reporting services were uninstalled completely from the data tier. Secondly, we found some information on slipstreaming the SP1 for TFS 2008 and applied it to the installation package.</p><a href=\"http://www.woodwardweb.com/vsts/creating_a_tfs.html">Creating a TFS 2008 with SP1 Slipstreamed ISO image</a><p>And lastly, we ran the installation from the beginning ... again. I personally think that removing the reporting services from the data tier did it. We'll need to have reporting services on the data tier later, we'll see if installing them back will break TFS or not. But for now, this weight is off my shoulders.</p>

 */ 

public const string content_14052009_b = ""; 
public const string content_14052009_r = ""; 

 /* 
<p>I got a response from the Microsoft support person, who have told me earlier that he was able to reporoduce our error.</p><p>So, according to what he told me, he looked up some internal documentation and found out that the particular configuration that we are trying to use (Windows Server 2003 on application tier, Windows Server 2008 on data tier) may not have been properly tested. So far, the recommendation is to install reporting services on the application tier. (Later, he said, we will be able to move them to the data tier).</p><p>There were a few issues because of the Sharepoint that was not completely removed from the application tier before we started the reinstallation of the TFS, but the most interesting was the "Error 29000.The Team Foundation databases could not be installed. For more information, see the Microsoft Windows Installer (MSI) log."</p><p>That was a bit tricky, because both admin and service account for the TFS had all possible permissions on the data tier. Some log file reading and some searching, and I found out that this is the issue with analysis services permissions.</p><a href=\"http://social.msdn.microsoft.com/Forums/en-US/tfssetup/thread/d8f5f035-680d-475e-9243-45457216362d">Problem in doing TFS2008 SP1 upgrade</a><p>The account should be a member of the “Server Role is used to grant server-wide security privileges to a user” under analysis services->properties->security option should be the TFS Service account. (There is no need to add the TFS Setup account or the TFS Report account here).</p><p>Now, the question was ... what error would come up next?</p><p>Next one was the Error 28805.The setup program cannot complete the request to the server that is running SQL Server Reporting Services. Verify that SQL Server Reporting Services is installed and running on the Team Foundation app tier and that you have sufficient permissions to access it. For more information, see the setup log.</p><p>OK, that was our mistake. The reporting services were removed from the data tier and installed on the app tier, but the databases were never created. Even the SQL Server was not installed yet on the application tier.</p><p>With that fixed, we moved forward just to finally hit the wall.</p><p>"Error 29112.Team Foundation Report Server Configuration: Either SQL Reporting Services is not properly configured, or the Reporting Services Web site could not be reached.  Use the Reporting Services Configuration tool to confirm that SQL Reporting Services is configured properly and that the Reporting Service Web site can be reached, and then run the installation again. For more information, see the Team Foundation Installation Guide."</p><p>And what happens here remains a mystery for me so far.</p><p>This is what I see in the installation log:</p><blockquote>"Setting database connection...<br /><br />Verifying the configuration of SQL Server Reporting Services...<br />SQL Server Reporting Services status Name: ReportServerVirtualDirectory        Status: Set     Severity: 1     Description:  A virtual directory is specified for this instance of report server.            <br />SQL Server Reporting Services status Name: ReportManagerVirtualDirectory       Status: Set     Severity: 1     Description:  A virtual directory is specified for this instance of report manager.           <br />SQL Server Reporting Services status Name: WindowsServiceIdentityStatus        Status: Set     Severity: 1     Description:  A Windows service identity is specified for this instance of report server.     <br />SQL Server Reporting Services status Name: WebServiceIdentityStatus            Status: Set     Severity: 1     Description:  A web service identity is specified for this instance of report server.         <br />SQL Server Reporting Services status Name: DatabaseConnection                  Status: Set     Severity: 1     Description:  A report server database is specified for this report server.                   <br />SQL Server Reporting Services status Name: EmailConfiguration                  Status: NotSet  Severity: 2     Description:  E-mail delivery settings are not specified for the report server. E-mail delivery is disabled until these settings are specified.<br />SQL Server Reporting Services status Name: ReportManagerIdentityStatus         Status: Set     Severity: 1     Description:  A report manager identity must be specified.                                    <br />SQL Server Reporting Services status Name: SharePointIntegratedStatus          Status: NotSet  Severity: 2     Description:  The report server instance supports SharePoint integration, but it currently runs in native mode. If you want to integrate this report server with a SharePoint product or technology, open the Database Setup page and create or select report server database that can be used with a SharePoint Web application.<br />SQL Server Reporting Services status Name: IsInitialized                       Status: OutOfSync Severity: 3     Description:  The report server is not initialized.                                           <br /><br />Verifying SQL Server Reporting Services configuration status failed.<br /><br />Error: ErrorCheckingReportServerStatus.<br /><br />Configuring SQL Server Reporting Services failed."</blockquote><p>But why? I have no idea. Here is what happens:</p><p>I open Reporting Service Configuration Manager, go to "Database Setup" and notice that the "Server Name" is pointing to the data tier, and the "Initialization" shows a grayed cross against it. So I point it to correct server, Press "Connect", "OK", "Apply" and enjoy a lot of green ticks in the "Task Status" and a grayed cross being changed to grayed tick.</p><p>Voila! Reporting Services configured properly and initialized. I can go to http://localhost/reports and see the proper "SQL Reporting Services Home Page".</p><p>So I switch back to my error and press "Retry". The installer thinks for a while, but then the error is displayed again.</p><p>So I start the Reporting Service Configuration Manager again, go to "Database Setup" and notice that the "Server Name" is pointing to the data tier, and the "Initialization" shows a grayed cross against it!</p><p>Why does the installed does it to me? I have no idea so far and could not find any good information.</p>

 */ 

public const string content_10052009_b = ""; 
public const string content_10052009_r = ""; 

 /* 
<p>(No, I didn't forget my blog. It's just that not much exciting have been happening to me in regards to development)</p><p>Visual Studio 2008 does not show Solution view when there is only one project in the Solution by default. I personally find this feature very annoying. Today I was going through one example from a book, and it involved creating a solution and adding a couple different projects to it. So I created the solution, added a new project to it, did whatever was required and came to the step where I had to add a second project to the solution. And here I am, completely puzzled - not only I don't see the solution in the Solution Explorer, but there is no menu which would 'intuitively' point me to the way to add a second project.</p><p>The fix was easy to find, but still - what's the point of having 'solutions' if you're hiding them from the users by default?</p><p><a href=\"http://blogs.msdn.com/sayanghosh/archive/2008/02/09/visual-studio-2008-does-not-show-solution-view-when-there-is-only-one-project-in-the-solution-by-default.aspx">Visual Studio 2008 does not show Solution view when there is only one project in the Solution (by default)</a></p><p>The solution is to go to Tools>Options>Projects and Solutions and check "Always Show Solution" (which is unchecked by default).</p>

 */ 

public const string content_23042009_b = ""; 
public const string content_23042009_r = ""; 

 /* 

Microsoft has been able to reproduce our issue on their testing machines. I guess that places the ball into their court now. Makes me feel a little bit less dumb, I was quite sure that we're missing some important security configuration setting or anything like that. Also, for the company, I guess, that means that we do not have to pay for support hours spent on the issue by Microsoft. Let's see what they will come up with ...
 */ 

public const string content_21042009_b = ""; 
public const string content_21042009_r = ""; 

 /* 

<p>I got a response from Microsoft, which is actually more of an information request. They wanted to know if I can connect to the IIS on the data tier using the 'Connect As' checkbox on the 'Connect to Computer' dialog, like this:</p><a href=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/Se2s6jV_uII/AAAAAAAAADM/BA0z8AOrNns/s1600-h/connect.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 180px;\" src=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/Se2s6jV_uII/AAAAAAAAADM/BA0z8AOrNns/s320/connect.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5327104056169052290\" /></a><p>Apparently, I can not. This did not come as a surprise. However, I decided to do an experiment and use the service account credentials in the 'Connect As' dialog box. Strangely enough, that worked. Very strange - both account are administrators on both machines, but only one of them can connect to IIS on data tier remotely. I started looking for a possible reason and noticed that the service account was a member of the IIS_WPG on the app tier, and the TFS admin account was not. Aha! So, I added the admin account to the group.</p><p>Now, the really strange thing is happening. I logon to the app tier as the TFS admin account, start IIS Manager, right-click 'Internted Information Services' and click 'Connect'. From here, I try 2 different approaches:</p><p>1. Connect without providing credentials. Which, I assume, is connecting as a current user - the TFS admin user.</p><a href=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/Se2tEHnpBzI/AAAAAAAAADU/jOERWM2qJ28/s1600-h/connect1_1.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 170px;\" src=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/Se2tEHnpBzI/AAAAAAAAADU/jOERWM2qJ28/s320/connect1_1.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5327104220525561650\" /></a><p>and this is what I get for my efforts.</p><a href=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/Se2tORDYdNI/AAAAAAAAADc/JBq2G2l64KE/s1600-h/connect1_2.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 197px;\" src=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/Se2tORDYdNI/AAAAAAAAADc/JBq2G2l64KE/s320/connect1_2.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5327104394856527058\" /></a><p>2. Connect specifying the credentials explicitly. Which are, of course, the credentials of the TFS admin user.</p><a href=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/Se2tYpga1QI/AAAAAAAAADk/uSFP_b9UUlc/s1600-h/connect2_1.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 187px;\" src=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/Se2tYpga1QI/AAAAAAAAADk/uSFP_b9UUlc/s320/connect2_1.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5327104573219460354\" /></a><p>and voila</p><a href=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/Se2th2kKMvI/AAAAAAAAADs/X5brLVLkwjo/s1600-h/connect2_2.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 168px;\" src=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/Se2th2kKMvI/AAAAAAAAADs/X5brLVLkwjo/s320/connect2_2.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5327104731343631090\" /></a><p>Suddenly I have all the access I need. Unfortunately, that does not help much because the TFS installation still fails - I assume it tries to login to the data tier using the first approach.</p><p>Which obviously means ... which means ... ugh, I have no idea what that means. I do not have enough knowledge on the subject. Somehow the remote (data tier) IIS treats these logins differently, even though it is the same domain account that tries to login. Something should be configured in a different way somewhere. I tried to play with authentication settings on both servers, but did not succeed yet. I forwarded my new findings to Microsoft support. Stay tuned ...</p>
 */ 

public const string content_17042009_b = ""; 
public const string content_17042009_r = ""; 

 /* 
<p>I had a support session with a Microsoft technical support representative yesterday. They use a program which is called <a href=\"http://support.microsoft.com/easyassist">Easy Assist</a> which needs to be installed on the client's computer and then you can share your desktop with the support person in the remote location and give him control etc. Nothing special, except that it works pretty fast.</p><p>Anyway, the issue was identified during the session. Basically, there are two computers, the application tier and data tier. There is a domain account that is a member of the Administrators group on both tiers. When logged on locally, this account can perform any administrative tasks. However, when the account is logged on the application tier and tries to connect to the IIS on the data tier, the access is denied and the following message is shown.</p><a href=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/Seheh8OybsI/AAAAAAAAAC8/cckYIZe7wmA/s1600-h/tfsdisaster1.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 225px;\" src=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/Seheh8OybsI/AAAAAAAAAC8/cckYIZe7wmA/s320/tfsdisaster1.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5325610496562458306\" /></a><br /><p>When the account tries to configure the Reporting Services on the data tier, the following message is displayed:</p><a href=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/SehezqfMO-I/AAAAAAAAADE/x8oPtomnbPg/s1600-h/tfsdisaster2.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 122px;\" src=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/SehezqfMO-I/AAAAAAAAADE/x8oPtomnbPg/s320/tfsdisaster2.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5325610801037065186\" /></a><br /><p>This seems to be the reason why the TFS cannot be installed - the account does not have proper permissions on the data tier to configure the Reporting Services.</p><p>So, the TFS Disaster can now be officially renamed to the IIS disaster. Microsoft promised to get their IIS team on this issue. I checked the possible solutions myself, but it appears that all suggestions are already configured properly on both computers. And so the saga unfolds ...</p>

 */ 

public const string content_15042009_b = ""; 
public const string content_15042009_r = ""; 

 /* 
<p>Got a responce from Microsoft today.</p><p>They suggest that the Reporting Services should be installed on the application tier, quoting the Installation Guide for the TFS:</p><blockquote><p><b>Application Tier</b></p><p>The Team Foundation application tier is composed of Web-based, front-end applications that are integrated with Internet Information Services (IIS). These applications include SQL Server Reporting Services, Team Foundation Core Services, and SharePoint Products and Technologies. In addition, the application tier hosts Team Foundation Windows services.</p></blockquote><p>To which I reply, quoting the Installation Guide for the TFS:</p><blockquote><p><b>How to Deploy Team Foundation Server with SQL Server Reporting Services on a Remote Server</b></p><p>You can deploy SQL Server Reporting Services on a remote server, which is a server other than the application-tier server for Team Foundation. In this scenario, you can deploy Team Foundation Server and run SQL Server Reporting Services on any of the following types of servers: <p><p>The data-tier server for Team Foundation. <br />The same server on which SharePoint Products and Technologies is running. <br />A remote server anywhere on the network.<p></blockquote><p>Stay tuned as the epic saga unfolds!</p>

 */ 

public const string content_14042009_b = ""; 
public const string content_14042009_r = ""; 

 /* 
<p>Stumbled upon a problem today and understood that I was not implementing the copy constructor properly.<br />Actually, in my post "Copy Constructor" I wrote:</p><p>For the List type, for example, the following approach would work:</p><pre class=\"brush:csharp\">class Customer  <br />{  <br />    private List<STRING> names;  <br />  <br />    // Copy constructor.  <br />    public Customer(Customer previousCustomer)  <br />    {  <br />        names = new List<STRING>(previousCustomer.names.ToArray());  <br />    }  <br />  <br />    ...  <br />}</pre><p>This is not true for the list of reference type objects.</p><p>The workaround I use now is to implement a copy constructor in the reference type and create a copy of the list in the following manner:</p><pre class=\"brush:csharp\">class Customer  <br />{  <br />    private List<ID> customerIDs;  <br />  <br />    // Copy constructor.  <br />    public Customer(Customer previousCustomer)  <br />    {  <br />       customerIDs = new List<ID>();<br />       foreach(ID id in previousCustomer.customerIDs)<br />       {<br />         customerIDs.Add(new ID(id));<br />       }<br />    }  <br />  <br />    ...  <br />}</pre><p>The syntax could be a lot more elegant in 3.5, but this application uses the 2.0 framework.</p>

 */ 

public const string content_10042009_b = ""; 
public const string content_10042009_r = ""; 

 /* 
<p>The decision was made to log an issue with Microsoft with a low priority as the TFS is not in our production environment yet. The first response we received just in about 2 hours after logging the issue.<br />They were interested in the following information:</p><p>1.     The installation log file;</p><p>2.     Accounts used for the installation: the setup /TFS service/reports /SQL Service account. Please describe briefly about them and make sure they meet the requirements listed in the installation guide;</p><p>3.     Did you follow the “prerequisites for Team Foundation Server” section to prepare for the installation? The "install SQL Server Reporting Service" section documents how to prepare reporting service. Per this doc one should not configure reporting service before TFS installation. Do you confirm this is consistent with your installation?</p><br /><p>After that they promised to get back to us ASAP and still did not, a full business day after I provided all the required information. It's the Thursday before the Easter Friday though, so I did not hold my breath.</p>

 */ 

public const string content_08042009_b = ""; 
public const string content_08042009_r = ""; 

 /* 
<p>Today I was performing a 'pre-production' install of the TFS, which is different from the install I've done before. The first install had application and data tiers on the same computer, this one was supposed to have two tiers on different computers. Should be nice and easy since I have some TFS installation experience and a competent database admin to work together with.</p><p>And the first issue that I came across was that .Net Framework 2.0 is required by the TFS, but it was not installed. But how could I not list it under the prerequisites when I was writing the installation procedure document? Well, the first installation had both the SQL Server and TFS on the same computer. And the .Net Framework is a prerequisite for the SQL Server, so by the time TFS had to be installed it was present.</p><p>That was the easy part.</p><p>To be able to place Reporting Services on the same machine as the data tier, we used the advice from this article</p><p><a href=\"http://blogs.msdn.com/sudhir/archive/2007/09/10/reporting-services-flexibility-orcas-rtm-only.aspx">Reporting Services Flexibility (Orcas RTM Only)</a></p><p>and edited the msiproperty.ini according to that advice.</p><p>Next problem we came across happened during the system health check. The following message was generated:</p><p>"The System Health Check has detected a problem that may cause Setup to fail. <br /><br />Description<br />SQL Server Analysis Services is not installed."</p><p>We used the workaround and happily proceeded further. That was the easy part too.</p><p>"Workaround / Remedy<br />SQL Server Analysis Services is a prerequisite for Visual Studio Team Foundation Server 2008. Install a supported version of SQL Server Analysis Services. For more information about supported versions of SQL Server and Team Foundation Server prerequisites, download the most recent version of the Team Foundation Installation Guide, which is available from the Microsoft Web site. <br /><br />More information<br />For additional information and help please refer to: http://go.microsoft.com/fwlink/?LinkId=79226"</p><p>The next error came up during the actual Team Foundation Server installation process.</p><p><br />---------------------------<br />Microsoft Visual Studio 2008 Team Foundation Server Setup<br />---------------------------<br />Error 29109.Team Foundation Report Server Configuration: SQL Reporting Services configuration encountered an unknown error. Verify that you have sufficient permissions to configure SQL Reporting Services, and try again.<br />---------------------------<br />Retry   Cancel   <br />---------------------------</p><p>And the entry in the installation log was the following</p><p><br />TFRSConfig - Team Foundation Server Reporting Services Configuration Tool<br />Copyright (c) Microsoft Corporation.  All rights reserved.<br /><br />Connecting to SQL Server Reporting Services. Please wait...<br />Invalid namespace <br />Querying the following Windows Management Instrumentation (WMI) path: IIS://DATASERVERNAME/W3SVC.<br />System.Runtime.InteropServices.COMException (0x80070005): Access is denied.<br /><br />   at System.DirectoryServices.DirectoryEntry.Bind(Boolean throwIfFail)<br />   at System.DirectoryServices.DirectoryEntry.Bind()<br />   at System.DirectoryServices.DirectoryEntry.get_IsContainer()<br />   at System.DirectoryServices.DirectoryEntries.ChildEnumerator..ctor(DirectoryEntry container)<br />   at System.DirectoryServices.DirectoryEntries.GetEnumerator()<br />   at Microsoft.TeamFoundation.Admin.ReportingServices.WebSiteFinder.FindBestMatch(Uri searchUri)<br />   at Microsoft.TeamFoundation.Admin.ReportingServices.InputArgs.EnsureIISSettings()<br />   at Microsoft.TeamFoundation.Admin.ReportingServices.ReportingServicesConfigurator.Run()<br />   at Microsoft.TeamFoundation.Admin.ReportingServices.Program.Main(String args)<br /><br />Configuring SQL Server Reporting Services failed.<br /><br />04/07/09 16:56:06 DDSet_Status: Process returned 2519<br />04/07/09 16:56:06 DDSet_Status: Found the matching error code  for return value '2519' and it is: '29109'<br />04/07/09 16:56:06 DDSet_Error:  2519<br />MSI (s) (A4!B8) [08:44:23:998]: Product: Microsoft Visual Studio 2008 Team Foundation Server - ENU -- Error 29109.Team Foundation Report Server Configuration: SQL Reporting Services configuration encountered an unknown error. Verify that you have sufficient permissions to configure SQL Reporting Services, and try again.<br /><br />04/08/09 08:44:23 DDSet_Status: Commandline: "d:\Program Files\Microsoft Visual Studio 2008 Team Foundation Server\Tools\TFRSConfig.exe" /setup /install /s "DATASERVERNAME" /u "NT Authority\NetworkService" /buildInIdentity /l "1033" /verify /ignoreExistingIISArtifacts /instancename "MSSQLSERVER" /appPoolName "Classic .NET AppPool" /reportServerUri "http://DATASERVERNAME/ReportServer" /reportManagerUri "http://DATASERVERNAME/Reports" /h "DATASERVERNAME"</p><p>And this is where we got stuck. We tried pretty much every solution we could find. Every possible account was given every possible permission on the data tier machine, the reporting services were perfectly accessible from the application tier machine, I could log on to the data tier machine from every account used in the TFS installation and configure Reporting Services if I wished to, but the error still did not go away.</p><p>I have to say that we are now stuck at this point.<br />There's couple options I can see - first, completely rebuild the application tier machine. Make sure everything is configured before we even start the installation, everything has access and permissions. Then try installing again. Second option could be to try and install the reporting services on the application tier. This would probably slow it down a bit. And another option is to try and make Microsoft fix the problem for us. We'll make a decision tomorrow.</p>

 */ 

public const string content_07042009_b = ""; 
public const string content_07042009_r = ""; 

 /* 
<p>Now the full process of scanning the document and extracting data from it is mostly finished. It does not look too complicated now, unlike it was just a few weeks earlier.</p><p>First, I create the instances of a class that will keep the extracted data (AIT3MDocument) and the class that will communicate with the scanner (AIT3MDocumentScanner) through a ReaderClass object. I explained it in some more detail in one of the earlier blog entries.</p><pre class=\"brush:csharp\">AIT3MDocument document = new AIT3MDocument();<br />AIT3MDocumentScanner docScanner = new AIT3MDocumentScanner();<br />document = docScanner.ScanDocument(_Filepath, useOCRCheckBox.Checked);<br /><br />documentReader = new ReaderClass();<br />documentItem = new DocumentItemClass();</pre><p>Next, I will extract some data that lets me identify what kind of document is in the scanner.</p><pre class=\"brush:csharp\">string documentID = documentReader.RetrieveTextItem(DOCUMENT_ID);<br />string documentSpecific = documentReader.RetrieveTextItem(DOCUMENT_SPECIFIC);<br />string mrzDocumentType = documentReader.RetrieveTextItem(MRZ_DOCUMENT_TYPE);</pre><p><br /><a href=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SdsebMwGo2I/AAAAAAAAACU/A10CmjP8B1I/s1600-h/ocr1.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 45px;\" src=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SdsebMwGo2I/AAAAAAAAACU/A10CmjP8B1I/s320/ocr1.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5321880837296661346\" /></a></p><p>I can extract data such as the english spelling of the person's name through the ReaderClass object.</p><pre class=\"brush:csharp\">string name = documentReader.RetrieveTextItem(NAME);</pre><p><a href=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/SdsebdfCwpI/AAAAAAAAACc/QTP7yVaVV_s/s1600-h/ocr2.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 29px;\" src=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/SdsebdfCwpI/AAAAAAAAACc/QTP7yVaVV_s/s320/ocr2.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5321880841788506770\" /></a></p><p>If, for example, the document was identified as a Hong Kong ID, I know that it has a special sequence of digits on it which can be extracted too.</p><pre class=\"brush:csharp\">string nameAsNum = documentReader.RetrieveTextItem(MRZ_NAME_AS_NUMBER_1);</pre><p><a href=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SdsebZRFhCI/AAAAAAAAACk/lA4xOrTaooY/s1600-h/ocr3.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 21px;\" src=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SdsebZRFhCI/AAAAAAAAACk/lA4xOrTaooY/s320/ocr3.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5321880840656225314\" /></a></p><p>This sequence of digits encodes the chinese spelling of the person's name. To be able to extract that spelling was the only reason I spent all that time and effort writing my glorious wrapper for the unmanaged dll.</p><p>So, after I found out the type of the document and the sequence of digits that encodes the name, I can call the proper function:</p><pre class=\"brush:csharp\">if (!String.IsNullOrEmpty(nameAsNum))<br />{<br /> TSSLWrapper.RECO_DATA recoData = new TSSLWrapper.RECO_DATA();<br /> IntPtr ptr = TSSLWrapper.SDKCreate();<br /> bool res = TSSLWrapper.CcnOCRsdk_HKID(ptr, nameAsNum, out recoData);<br /><br /> if (res)<br /> {<br />  document.FirstNameExtended = recoData.FirstName;<br />  document.LastNameExtended = recoData.Surname;<br /> }<br /> TSSLWrapper.SDKDelete(ptr);<br />}</pre><p>and observe the result.</p><p><a href=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/SdsebaOOriI/AAAAAAAAACs/DhCMav5BSI0/s1600-h/ocr4.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 56px;\" src=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/SdsebaOOriI/AAAAAAAAACs/DhCMav5BSI0/s320/ocr4.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5321880840912678434\" /></a></p><p>Now I just populate the names into the proper fields and my job is done.</p><p>This is the simplest example. Some other types of documents I work with do not contain a sequence of digits, but rather operate with the image directly. In this case a path to the saved image has to be provided, but the output is more or less similar anyway, so there is not much difference from the development point of view.</p>

 */ 

public const string content_01042009_b = ""; 
public const string content_01042009_r = ""; 

 /* 
<p>I finished the task of calling the unmanaged dll functions from the C# application today. After I found out that my solution described before does not work, I spent almost two days on the task. Looking at what I've done, I can see that the whole solution takes maybe 2-3 dozen lines of code. And while I understand that lines of code is not the best way to measure productivity, I could have done it in half a day if I always chose the right way to do things. Why did it take me that long? Well, there are some reasons.</p><ul><li>I have not touched C++ in the last 8 years, so every little complaint from the linker or compiler was a challenge.</li><li>I could not find a complete solution for my case, so I had to compile a few together: learn how to write a dll in C++, learn how to write a wrapper class, learn how to call the wrapper class from the managed code etc.</li><li>There are numerous solutions on the internet, but choosing the right one is the problem. Some of the approaches I tried led me nowhere but took some time.</li></ul><p>Now, when I'm done with this bucket of excuses, here is how I solved my particular case:</p><p>First of all, I had to understand that the straightforward DllImport solution does not work. I came across a comment that suggested that when a class member has to be called from a dll, a managed wrapper dll has to be written to allow access to the class members. From the C++ sample code I had I could see that yes, a class member is called.</p><pre class=\"brush:csharp\">CcnOCRsdk *ocr;<br />CString code;<br />RECO_DATA data;<br />GetDlgItemText(IDC_CODE,code);<br />char _code[200];<br />WideCharToMultiByte(CP_UTF8, 0, code, -1, (char *)_code, 200, NULL, NULL);<br />ocr->convertHKID_Name(_code,&data)</pre><p>So, I looked at this example of creating a C++ dll</p><p><a href=\"http://msdn.microsoft.com/en-us/library/ms235636(VS.80).aspx">Walkthrough: Creating and Using a Dynamic Link Library</a></p><p>and at this example of writing a wrapper class</p><p><a href=\"http://www.codeproject.com/KB/mcpp/unmanaged_to_managed.aspx">Calling Managed Code from Unmanaged Code and vice-versa</a></p><p>and made my first attempt at writing a wrapper. The wrapper in my initial solution exported the member function of a wrapped class. It worked to the point where the function was being called, and then threw the 'AccessViolationException'. Here I got stuck again.</p><p>Next thing to understand was that I have to export the whole class, including the constructor. To get access to the member of the class, I would have to return a pointer to the instance of the unmanaged class, and then pass this pointer to the function, that exports the member of the unmanaged class (I hope I'm describing it properly, but I'm not completely sure). The answers to this question pointed me to the right direction.</p><p><a href=\"http://stackoverflow.com/questions/315051/using-a-class-defined-in-a-c-dll-in-c-code">using a class defined in a c++ dll in c# code</a></p><p>After that, it was really simple, because I only had to apply my DllImport skills. So here we go:</p><p><u>First step, create a C++ DLL project in Visual Studio 2005.</u></p><ul><li>Start Visual Studio</li><li>From the File menu, select New and then Project….</li><li>From the Project types pane, under Visual C++, select Win32.</li><li>From the Templates pane, select Win32 Console Application.</li><li>Choose a name for the project and enter it in the Name field. Choose a name for the solution, and enter it in the Solution Name field.</li><li>Press OK to start the Win32 application wizard. From the Overview page of the Win32 Application Wizard dialog, press Next.</li><li>From the Application Settings page of the Win32 Application Wizard, under Application type, select DLL if it is available or Console application if DLL is not available.</li><li>From the Application Settings page of the Win32 Application Wizard, under Additional options, select Empty project.</li><li>Press Finish to create the project.</li></ul><p>There were some setting I had to change for my project in Project->Properties:</p><ul><li>Under General->Project Defaults, set Use of MFC to 'Use MFC in a Shared DLL' as the unmanaged code was using MFC</li><li>Under General->Project Defaults set Common Language Runtime support to 'Common Language Runtime Supportj(/clr)'</li><li>Under Linker->Input->Additional Dependencies enter the name of the lib file for the unmanaged dll.</li></ul><p><u>Second step, write a wrapper class for the unmanaged dll.</u></p><p>This is how the unmanaged class looks like:</p><pre class=\"brush:csharp\">class CNOCRSDK_API CcnOCRsdk {<br />public:<br /> CcnOCRsdk(void);<br /> bool convertHKID_Name(char *code,RECO_DATA *o_data); //hkid <br /> //more member functions<br /> ~CcnOCRsdk();<br />private:<br /> RECT *regionList;<br /> RECT *chRect,*enRect;<br /> //more member functions<br />};</pre><p>This is the wrapper class I wrote, that exports the class constructor and one of the member functions:</p><pre class=\"brush:csharp\">include "stdafx.h"<br />#using <mscorlib.dll><br />#include "cnOCRsdk.h"<br /><br />using namespace System::Runtime::InteropServices;<br />using namespace System;<br /><br />namespace TSSL<br />{<br /> public class __declspec(dllexport) Wrapper<br /> {<br /> public:<br />  CcnOCRsdk* SDKCreate()<br />  {<br />   return new CcnOCRsdk();<br />  }<br /><br />  bool CcnOCRsdk_HKID(CcnOCRsdk* pSDK, char *code, RECO_DATA *o_data)<br />  {<br />   return pSDK->convertHKID_Name(code, o_data);<br />  }<br /><br />  void SDKDelete(CcnOCRsdk* pSDK)<br />  {<br />   delete pSDK; <br />  }<br /> };<br />}</pre><p>The __declspec(dllexport) at the class level exports all public class member in the dll. If it was applied on the member level, it would only export the member it was applied to.</p><p><u>Third step, run the Dumpbin utility and find out what are the 'mangled' names of the functions exported by the dll.</u></p><pre>          1    0 00001240 ??4Wrapper@TSSL@@QAEAAV01@ABV01@@Z = __t2m@??4Wrapper@TSSL@@QAEAAV01@ABV01@@Z ([T2M] public: class TSSL::Wrapper & __thiscall TSSL::Wrapper::operator=(class TSSL::Wrapper const &))<br />          2    1 00001220 ?CcnOCRsdk_HKID@Wrapper@TSSL@@QAE_NPAVCcnOCRsdk@@PADPAURECO_DATA@@@Z = __t2m@?CcnOCRsdk_HKID@Wrapper@TSSL@@QAE_NPAVCcnOCRsdk@@PADPAURECO_DATA@@@Z ([T2M] public: bool __thiscall TSSL::Wrapper::CcnOCRsdk_HKID(class CcnOCRsdk *,char *,struct RECO_DATA *))<br />          3    2 00001200 ?SDKCreate@Wrapper@TSSL@@QAEPAVCcnOCRsdk@@XZ = ?SDKCreate@Wrapper@TSSL@@QAEPAVCcnOCRsdk@@XZ (public: class CcnOCRsdk * __thiscall TSSL::Wrapper::SDKCreate(void))<br />          4    3 00001410 ?SDKDelete@Wrapper@TSSL@@QAEXPAVCcnOCRsdk@@@Z = ?SDKDelete@Wrapper@TSSL@@QAEXPAVCcnOCRsdk@@@Z (public: void __thiscall TSSL::Wrapper::SDKDelete(class CcnOCRsdk *))</pre><p><u>Fourth step, write another wrapper, now in C#, which will define the DllImports for the unmanaged functions and the structures required to call them</u></p><pre class=\"brush:csharp\">public class TSSLWrapper<br />    {<br />        [StructLayoutAttribute(LayoutKind.Sequential, CharSet = CharSet.Unicode)]<br />        public struct RECO_DATA<br />        {<br />            /// wchar_t[200]    <br />            [MarshalAsAttribute(UnmanagedType.ByValTStr, SizeConst = 200)]<br />            public string FirstName;<br />            /// wchar_t[200]    <br />            [MarshalAsAttribute(UnmanagedType.ByValTStr, SizeConst = 200)]<br />            public string Surname;<br />        }<br /><br />        [DllImport(@"TSSL.dll", EntryPoint = "?SDKCreate@Wrapper@TSSL@@QAEPAVCcnOCRsdk@@XZ")]<br />        public static extern IntPtr SDKCreate();<br />        [DllImport(@"TSSL.dll", EntryPoint = "?CcnOCRsdk_HKID@Wrapper@TSSL@@QAE_NPAVCcnOCRsdk@@PADPAURECO_DATA@@@Z")]<br />        public static extern bool CcnOCRsdk_HKID(IntPtr ptr, string num, out RECO_DATA o_data);<br />    }</pre><p>RECO_DATA is the structure I have to send from C# to C++. Note how the SDKCreate returns the IntPtr which is, in my understanding, a pointer to the instance of the unmanaged class. To call a member function of this class, I pass this pointer to the function.</p><p><u>And fifth and last step, is to call the C# wrapper class from the C# application and enjoy the results.</u></p><pre class=\"brush:csharp\">TSSLWrapper.RECO_DATA recoData = new TSSLWrapper.RECO_DATA();<br />string num = "262125355174";<br />IntPtr ptr = TSSLWrapper.SDKCreate();<br />bool res = TSSLWrapper.CcnOCRsdk_HKID(ptr, num, out recoData);</pre><p>(To make the solution complete, I should also wrap the destructor and call it after I don't need the class any more, I'll do it soon)</p><p>Here we go, my longest post ever has arrived.</p>

 */ 

public const string content_22032009_b = ""; 
public const string content_22032009_r = ""; 

 /* 
<p>It's strange, but I did not have to deal with copy constructors in C# until today. Here is the problem: in the application I'm working on, a user can retrieve customer's details from the database, change some values on several separate tabs, and then choose to save or discard changes. Now, discarding did not work properly till today. The problem is that the old values were not saved anywhere, so no way to access them was implemented.</p><p>Two approaches came to my mind: First, to reload data from the database, and second, to keep a 'backup' copy of the customer. Since an extra trip to the database takes several seconds, the 'backup' approach was chosen.</p><p>Now, when the customer details are retrieved from the database, they are immediately copied into the 'backup' customer object. Obviously, if you try to create a copy like this</p><pre class=\"brush:csharp\">Customer cust = SelectCustomerFromDB(id);<br />Customer cust2 = cust;<br /></pre><p>You will end up with two references to the same object. Now, if you change anything in 'cust' object, your 'cust2' is useless, cause it references the same object and will reflect the changes. This MSDN page gives a brief idea of the proper way to create a copy of the object</p><p><a href=\"http://msdn.microsoft.com/en-us/library/ms173116(VS.80).aspx">How to: Write a Copy Constructor (C# Programming Guide)</a></p><p>The above sample would now look more like this</p><pre class=\"brush:csharp\">class Customer<br />{<br />    private string name;<br /><br />    // Copy constructor.<br />    public Customer(Customer previousCustomer)<br />    {<br />        name = previousCustomer.name;<br />    }<br /><br />    ...<br />}<br /><br />...<br /><br />Customer cust = SelectCustomerFromDB(id);<br />Customer cust2 = new Customer(cust);</pre><p>What if your customer has a list of names though?</p><pre class=\"brush:csharp\">class Customer<br />{<br />    private List<string> names;<br /><br />    // Copy constructor.<br />    public Customer(Customer previousCustomer)<br />    {<br />        names = previousCustomer.names;<br />    }<br /><br />    ...<br />}<br /><br />...<br /><br />Customer cust = SelectCustomerFromDB(id);<br />Customer cust2 = new Customer(cust);</pre><p>Now try changing something in cust.names. Ooops, the cust2.names reflected the changes. Unfortunately, the article linked above only shows the approach to copy the object with members of value types. Now, if you have members of reference types in your class, you would have to copy each one properly.</p><p>For the List type, for example, the following approach would work:</p><pre class=\"brush:csharp\">class Customer<br />{<br />    private List<string> names;<br /><br />    // Copy constructor.<br />    public Customer(Customer previousCustomer)<br />    {<br />        names = new List<string>(previousCustomer.names.ToArray());<br />    }<br /><br />    ...<br />}</pre><p>I came across a few smart ways to implement the copy constructor so that you would not have to specify each class field separately, like in this exapmle</p><p><a href=\"http://www.johnsadventures.com/archives/2006/07/an_intelligent_copy_constructor_in_c_usi/">An Intelligent Copy Constructor In C# Using Reflection</a></p><pre class=\"brush:csharp\">public MyClass( MyClass rhs )<br />{<br /> // get all the fields in the class<br /> FieldInfo[] fields_of_class = this.GetType().GetFields( <br />   BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance );<br /><br /> // copy each value over to 'this'<br /> foreach( FieldInfo fi in fields_of_class )<br /> {<br />  fi.SetValue( this, fi.GetValue( rhs ) );<br /> }<br />}</pre><p>This is great, because if you add a new field to the class and forget to add it to a copy constructor, your code will compile without warnings but you will get troubles sooner or later.</p><p>Unfortunately, this approach also works for value type fields only so I could not benefit from it. I could not quickly find a way to use this approach to reference type class members so I'll leave it for myself as a TODO task.</p>

 */ 

public const string content_19032009_b = ""; 
public const string content_19032009_r = ""; 

 /* 
<p>More fun with the scanner. Now we want to get the first name and last name in chinese from the certain types of passports. There is a dll written in C++ which supposedly provides this functionality. The function in this dll takes a path to an image as a parameter and returns a structure that contains first name and last name.</p><p>Here is the C++ signature of the function</p><pre class=\"brush:csharp\"><br />bool recoCHN_P_Name(char *imgPath,RECO_DATA *o_data);</pre><p>Here is the RECO_DATA struct</p><pre class=\"brush:csharp\">struct RECO_DATA{<br /> wchar_t FirstName[200];<br /> wchar_t Surname[200];<br />};</pre><p>Now I have to call the C++ method from my C# code. The 'DllImport' thingy comes to mind. There are heaps of tutorials on that, for example</p><p><a href=\"http://www.csharphelp.com/archives/archive52.html">Call Unmanaged Code. Part 1 - Simple DLLImport</a></p><p>So I quickly come up with the first version:</p><p>This is the 'wrapper' class</p><pre class=\"brush:csharp\">public class cnOCRsdk<br />{<br /> [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]<br /> public struct RECO_DATA{<br />  [MarshalAs(UnmanagedType.ByValTStr, SizeConst=200)]<br />  public string FirstName;<br />  [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 200)]<br />  public string Surname;<br />  }<br /><br /> [DllImport(@"cnOCRsdk.dll", EntryPoint="recoCHN_P_Name")]<br /> public static extern bool recoCHN_P_Name(byte[] imgPath, RECO_DATA o_data);<br />}</pre> <p>This is the call to the function in the wrapper class</p><pre class=\"brush:csharp\">cnOCRsdk.RECO_DATA recoData = new cnOCRsdk.RECO_DATA();<br /><br />string path = @"C:\WINDOWS\twain_32\twainrgb.bmp";<br /><br />System.Text.ASCIIEncoding encoding = new System.Text.ASCIIEncoding();<br />byte[] bytes = encoding.GetBytes(path);<br /><br />bool res = cnOCRsdk.recoCHN_P_Name(bytes, recoData);</pre><p>Unfortunately, this gives me a "Unable to find an entry point named 'recoCHN_P_Name' in DLL 'cnOCRsdk.dll'." error. My first guess was that I am converting types from C++ to C# incorrectly. I asked for some help</p><p><a href=\"http://stackoverflow.com/questions/653178/unable-to-find-an-entry-point-named-function-in-dll-c-to-c-type-conversion">Unable to find an entry point named [function] in dll</a></p><p>I got a suggestion to use the 'dumpbin' tool</p><p><a href=\"http://support.microsoft.com/kb/177429">DUMPBIN</a></p><p>and also a link to the page that explained C++ name mangling</p><p><a href=\"http://www.kegel.com/mangle.html">C++ Name Mangling/Demangling</a></p><p>my function had a mangled name of '?recoCHN_P_Name@CcnOCRsdk@@QAE_NPADPAURECO_DATA@@@Z', but how did that help me?</p><p>Anyway, I came across another article on calling C++ from C#</p><p><a href=\"http://blogs.msdn.com/vcblog/archive/2008/12/08/inheriting-from-a-native-c-class-in-c.aspx">Inheriting From a Native C++ Class in C#</a></p><p>and noticed an interesting thing in it:</p><pre class=\"brush:csharp\">[DllImport("cppexp.dll", EntryPoint = "?M1@CSimpleClass@@QAEXXZ", CallingConvention = CallingConvention.ThisCall)]<br />    private static extern void _M1(__CSimpleClass* ths);</pre><p>this guy is using the mangled function name as an entry point! Why shouldn't I try this approach?</p><p>Long story short, the 'unable to find entry point' error went away and after a few more tweaks I made this work. Unfortunately, the function always returns me false so far, which is probably because all the images I try are 'bad', but at least it does not break anymore.</p><pre class=\"brush:csharp\">public class cnOCRsdk<br />{<br /> [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]<br /> public struct RECO_DATA<br /> {<br />  [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 200)]<br />  public string FirstName;<br />  [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 200)]<br />  public string Surname;<br /> }<br /><br /> [DllImport(@"cnOCRsdk.dll", EntryPoint="?recoCHN_P_Name@CcnOCRsdk@@QAE_NPADPAURECO_DATA@@@Z")]<br /> public static extern bool recoCHN_P_Name(ref string imgPath, ref RECO_DATA o_data);<br />}</pre><pre class=\"brush:csharp\">cnOCRsdk.RECO_DATA recoData = new cnOCRsdk.RECO_DATA();<br />recoData.FirstName = new string(new char[200]);<br />recoData.Surname = new string(new char[200]);<br /><br />string path = @"C:\WINDOWS\twain_32\twainrgb.bmp";<br /><br />bool res = cnOCRsdk.recoCHN_P_Name(ref path, ref recoData);</pre>

 */ 

public const string content_15032009_b = ""; 
public const string content_15032009_r = ""; 

 /* 

<p>Today I had an issue with not being able to delete a file programmatically.<br />While looking for the reason the file was 'locked' (the actual error message was "The process cannot access the file 'file.jpg' because it is being used by another process") I discovered a tool which can help finding out the process which is locking the file.</p><p><a href=\"http://technet.microsoft.com/en-us/sysinternals/bb896653.aspx">Process Explorer</a></p><p>Anyway, here is how the image was processed by the application:</p><pre class=\"brush:csharp\">Bitmap b = (Bitmap)Image.FromFile(_Filepath);<br />pictureBox1.Image = b;<br /><br />// later in the code<br /><br />System.IO.MemoryStream ms = new System.IO.MemoryStream();<br />pictureBox1.Image.Save(ms, System.Drawing.Imaging.ImageFormat.Gif);<br /><br />// even later in the code<br /><br />File.Delete(_Filepath);</pre><p>At the point where File.Delete() was called, the handle to the file existed (under some circumstances).</p><p>Here is how I implemented the fix initially:</p><pre class=\"brush:csharp\">public Bitmap getBitmapFromFile(string filename)<br />{<br /> Image i = null;<br /> using (Stream s = new FileStream(filename, FileMode.Open))<br /> {<br />  i = Image.FromStream(s);<br />  s.Close();<br /> }<br /> return (Bitmap)i;<br />}<br /><br />pictureBox1.Image = getBitmapFromFile(_Filepath);<br /><br />// later in the code<br /><br />System.IO.MemoryStream ms = new System.IO.MemoryStream();<br />pictureBox1.Image.Save(ms, System.Drawing.Imaging.ImageFormat.Gif);<br /><br />// even later in the code<br /><br />File.Delete(_Filepath);</pre><p>The approach did not work, however, this time returning me the error "A generic error occurred in GDI+" at the line where I tried to save the image.</p><p>Here is the reason why this happened:</p><p><a href=\"http://support.microsoft.com/?id=814675">Bitmap and Image constructor dependencies</a></p><p>In my case, obviously, "Additionally, if the stream was destroyed during the life of the Bitmap object, you cannot successfully access an image that was based on a stream" - see how I tried to close a stream, trying to release a handle to the file this way?</p><p>The possible solutions can be found here:</p><p><a href=\"http://www.kerrywong.com/2007/11/15/understanding-a-generic-error-occurred-in-gdi-error/">Understanding "A generic error occurred in GDI+." Error</a></p><p>That's how I fixed my problem eventually:</p><pre class=\"brush:csharp\">public Bitmap getBitmapFromFile(string filePath)<br />{<br /> Image img = Image.FromFile(filePath);<br /> Bitmap bmp = img as Bitmap;<br /> Graphics g = Graphics.FromImage(bmp);<br /> Bitmap bmpNew = new Bitmap(bmp);<br /> g.DrawImage(bmpNew, new Point(0, 0));<br /> g.Dispose();<br /> bmp.Dispose();<br /> img.Dispose();<br /> return bmpNew;<br />}<br /><br />pictureBox1.Image = Syco.Common.Util.getBitmapFromFile(_Filepath);<br /><br />// later in the code<br /><br />System.IO.MemoryStream ms = new System.IO.MemoryStream();<br />pictureBox1.Image.Save(ms, System.Drawing.Imaging.ImageFormat.Gif);<br /><br />// even later in the code<br /><br />File.Delete(_Filepath);</pre><p>Now the image is saved properly and no handle is held against the file, so it is deleted properly too.</p>
 */ 

public const string content_14032009_b = ""; 
public const string content_14032009_r = ""; 

 /* 
<p>Remember that Windows Service I wrote not long ago? Well, today it was time to install it into actual testing environment. That did not work exactly as expected. The first thing I get when trying to run the setup project was this error message</p><br /><a href=\"http://2.bp.blogspot.com/_Pk-5kPvf7Gs/ScIeoJDtBmI/AAAAAAAAACM/LK9AXBJiBVY/s1600-h/1.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 114px;\" src=\"http://2.bp.blogspot.com/_Pk-5kPvf7Gs/ScIeoJDtBmI/AAAAAAAAACM/LK9AXBJiBVY/s320/1.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5314844185225660002\" /></a><br /><p>Did not take long to find out that the service was developed in VS.NET 2008 and required .NET Framework 3.5 to run. Now, what do you think would take longer in a large company, to rebuild the application in the previous version of VS.NET or obtaining the permission to install .NET Framework on a server? That's what I did ...</p><p>Therefore, moving fast and using the 'latest tools' might actually get you into some trouble...</p>

 */ 

public const string content_06032009_b = ""; 
public const string content_06032009_r = ""; 

 /* 
<p>The application is able to save images for an ID. When the changes are being saved, the comma-separated list of file names has to be inserted into the XML file. Easy. This small snippet have been sitting in the production code for about two years, until someone had to attach more than 2 images to a single ID.</p><p>(Easy to see that the logic works for one or two files, forming a string of '1.jpg,2.jpg'. If more files are to be saved, the string will look like 1.jpg,2.jpg3.jpg4.jpg' and all images except the first one will be lost).</p><pre class=\"brush:csharp\">id += "<Filenames>";<br /><br />bool firstImage = true;<br />foreach (IDImage image in idType.IDImages)<br />{<br /> id += image.ImageFilename;<br /> if (firstImage)<br /> {<br />  firstImage = false;<br />  id += ",";<br /> }<br />}<br />id += "</Filenames>";</pre><p>I like bugs that are easy to fix and it looks like magic to a unsuspecting observer that a bug is fixed in a with a few keystrokes. How did the original developer come up with the idea, though, and why did it pass testing ...</p><pre class=\"brush:csharp\">id += "<Filenames>";<br /><br />foreach (IDImage image in idType.IDImages)<br />{<br /> id += image.ImageFilename;<br /><br /> //if not last image, add ','<br /> if (idType.IDImages.IndexOf(image) < idType.IDImages.Count - 1)<br /> {<br />  id += ",";<br /> }<br />}<br />id += "</Filenames>";</pre>

 */ 

public const string content_02032009_b = ""; 
public const string content_02032009_r = ""; 

 /* 
<p>Almost no day passes without one of those "WHAT is happening?" moments. Yesterday there were 3 that happened to me. One required to delete temporary Internet Explorer files. Of course, I was stupid enough to require a colleague's advice on that. Another one, ironically, was caused by that same colleague adding a line of code in the wrong place. This one I fixed myself.</p><p>Now the third one was a bit more interesting and looks like a classic "worked on my machine!" situatuion.<br />Remember the application that uses the sophisticated scanner? Well, now it also uses a webcam. I was preparing the new version to ship. I build the installation package and installed the application on the test computer. When I try to use the webcam, I get our 'generic' error message, that can be caused by almost anything. But it worked on my machine, I swear!</p><a href=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SbDk84tiGGI/AAAAAAAAABs/6R7IYjb-mmA/s1600-h/err0.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 51px;\" src=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SbDk84tiGGI/AAAAAAAAABs/6R7IYjb-mmA/s320/err0.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5309995695336462434\" /></a><p>Anyway, there is a way to find out what really happened - Event Log.</p><a href=\"http://2.bp.blogspot.com/_Pk-5kPvf7Gs/SbDlGuiN_bI/AAAAAAAAAB0/FxpZunXMSyE/s1600-h/err1.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 258px;\" src=\"http://2.bp.blogspot.com/_Pk-5kPvf7Gs/SbDlGuiN_bI/AAAAAAAAAB0/FxpZunXMSyE/s320/err1.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5309995864403344818\" /></a><p>So, something is wrong with the webcam library QuickCamLib.dll. First thing that comes to mind - somehow not registered during installation process? Possible or not? Go go, regsvr32</p><a href=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SbDlQu77kVI/AAAAAAAAAB8/POmCrF_FfpQ/s1600-h/err2.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 50px;\" src=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SbDlQu77kVI/AAAAAAAAAB8/POmCrF_FfpQ/s320/err2.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5309996036309881170\" /></a><p>Oh well, this is not my application problem. But what is wrong? The webcam drivers were installed and I can actually make webcam work (outside of the application).<br />Fortunately, I'm not the first one to have this problem.<br /><a href=\"http://social.msdn.microsoft.com/Forums/en-US/vcgeneral/thread/36971526-95f3-4a9f-a601-1843c86332c1/#page:1">This application has failed to start because the application configuration is incorrect</a></p><p>The thread suggests to look in the System part of the Event Log for a 'side by side' error - and there it is!</p><a href=\"http://3.bp.blogspot.com/_Pk-5kPvf7Gs/SbDmAuqOcyI/AAAAAAAAACE/Y-vGZebVejw/s1600-h/err3.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 178px;\" src=\"http://3.bp.blogspot.com/_Pk-5kPvf7Gs/SbDmAuqOcyI/AAAAAAAAACE/Y-vGZebVejw/s320/err3.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5309996860869341986\" /></a><p>The thread also contains the solution, which is somewhat complicated but precise, except in my case I have '90' instead of '80'.</p><p>"You need to copy CRT DLL into your application local folder together with the manifest. Please take a look on this post on my blog, http://blogs.msdn.com/nikolad/archive/2005/03/18/398720.aspx. Basically go to windows\winsxs folder. Find a folder like x86_Microsoft.VC80.CRT and copy DLL from there to your application local folder. From what I see in your code you need msvcrt80.dll and msvcp80.dll (perhaps msvcrt80d.dll and msvcp80d.dll if this is Debug mode application). Then go to windows\winsxs\manifests folder and copy x86_*_Microsoft.VC80.CRT*.manifest to Microsoft.VC80.CRT.manifest to your application local folder."</p><p>I copy the 4 files msvcm90.dll, msvcp90.dll, msvcr90.dll and Microsoft.VC90.CRT.manifest into my application folder on the test computer, and it works like a charm. I add these files to the installation package, reinstall the application and it works again. All is well that ends well I guess.</p>

 */ 

public const string content_23022009_b = ""; 
public const string content_23022009_r = ""; 

 /* 
<p>Although the "bootstrapper" solution worked fine, the decision was made to scrap it completely and do things in a different way.</p><p>There are a few valid reasons for that:<br />- The application comes together with a few other device driver packages<br />- Currently, these packages are bundled into the .msi package and installed on the client computer, and from there they have to be installed manually<br />- This brings the current .msi package size to over 100MB in size<br />- Not every client computer would use all of the device drivers<br />- If the application will need to support other hardware in the future, using the same approach will keep the .msi package bloating more and more.</p><p>So, the task was changed. The requirement now is to have an application in a separate package, and all the device drivers in separate packages, but the installation process will let users select which device drivers they want to install.</p><p>After some investigation I came to the conclusion that this can not be done using the Visual Studio Setup and Deployment project. The main limiting issue here is the fact that an .msi installer can not be started from withing another .msi installer. Therefore, I can not launch my application installer, show the dialog with options, and proceed to installing these optional drivers.</p><p>A simple solution I came up with was to write a small 'wrapper' Windows Forms application. The application would present the user with multiple checkboxes - one for each optional component.</p><p>After the user makes the choices and presses the 'Install' button, the application would first read the xml file which lists all available components</p><pre class=\"brush:xml\"><br /><?xml version='1.0'?><br /><setuppackages><br /> <package name="DriverPackage1" path="\DP1\DriverPackage1.exe"></package><br /> <package name="DriverPackage2" path="\DP2\DriverPackage2.exe"></package><br /> ...<br /> <package name="MainAppPackage" path="\App\MainSetup.exe"></package><br /></setuppackages><br /></pre><p>The name/path pairs would be added to the </p><pre class=\"brush:csharp\">Dictionary<string, string> packages;</pre><p>DriverPackage1, ..., MainAppPackage will be set up as tags for the checkboxes at design time to simplify the functionality.</p><p>The application will then loop through all checkboxes and, if the checkbox is checked, will add the setup file path to the list.</p><pre class=\"brush:csharp\"><br />string startupPath = Application.StartupPath;<br /><br />string path;<br />List<string> components = new List<string>();<br /><br />foreach (Control control in this.Controls)<br />{<br /> CheckBox checkBox = control as CheckBox;<br /><br /> if (checkBox != null && checkBox.Checked)<br /> {<br />  if (packages.TryGetValue(checkBox.Tag.ToString(), out path))<br />  {<br />   components.Add(path);<br />  }<br /> }<br />}<br /></pre><p>Finally, the application will loop through the list of setup files, executing the installation process for each file and waiting for it to finish before launching next one.</p><pre class=\"brush:csharp\"><br />foreach (string componentPath in components)<br />{<br /> InstallComponent(startupPath + componentPath);<br />}<br /><br />// ..........<br /><br />private void InstallComponent(string filePath)<br />{<br /> System.Diagnostics.Process installerProcess;<br /><br /> installerProcess = System.Diagnostics.Process.Start(filePath);<br /><br /> while (installerProcess.HasExited == false)<br /> {<br />  //indicate progress to user<br />  Application.DoEvents();<br />  System.Threading.Thread.Sleep(250);<br /> }<br />}</pre><p>Other small details include a progress bar, success messages etc., but the main idea should be clear.</p>

 */ 

public const string content_22022009_b = ""; 
public const string content_22022009_r = ""; 

 /* 

<p>I'm now at the stage of creating a setup package for the application that is going to use that magnificent 3M scanner. It has a setup and deployment project already, so I just rebuild it and try installing on the test desktop. However, during the setup process I end up with an error message.</p><a href=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/SaHtt3cibwI/AAAAAAAAAA8/l3djXI2pFyk/s1600-h/1.PNG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 320px; height: 114px;\" src=\"http://1.bp.blogspot.com/_Pk-5kPvf7Gs/SaHtt3cibwI/AAAAAAAAAA8/l3djXI2pFyk/s320/1.PNG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5305783208252698370\" /></a><p>After some research, I find out that there is some driver package that needs to be installed before my application install. If I install it manually first, the installation runs smoothly. So I have to include it in the installation somehow. How hard can that be? I have no experience with installation packages, but I get a hint that a custom action can help.</p><p>I do some research and soon enough I find out that</p><a href=\"http://msdn.microsoft.com/en-us/library/bbd7cck3.aspx">Custom Actions Management in Deployment</a><br /><p>Actions can only be run at the end of an installation.</p><p>That is not what I need, the drivers absolutely have to be installed prior to the application installation. I research more and find a couple of links, which teach me how to use Orca and how to execute my Custom Actions whenever I like.</p><a href=\"http://www.codeproject.com/KB/install/msicustomaction.aspx?df=100&forumid=3159&exp=0&select=1757791">MSI Custom Action DLL</a><a href=\"http://www.appdeploy.com/messageboards/tm.asp?m=4012&mpage=1&key=&">Custom Action Run EXE</a><p>Great! Problem solved. I edit my  place my Custom Action before the installation process starts. This time, however, I encounter a '2731' error. I'm not the first one to ever get this error, of course.</p><a href=\"http://n2.nabble.com/Problem-when-trying-to-install-.NET-framwork-2.0-during-MSI-install-,-plz-any-idea-td708807.html">Problem when trying to install .NET framwork 2.0 during MSI install</a><p>"It is probably failing because you are trying to invoke an installer when an installer is already running.  You need to install separate installers sequentially, not from within one another.  You would need a bootstrapper to do that. "</p><p>Well, that's what I should have known in the very beginning. OK then, now to create a bootstrapper. (And what is the bootstrapper, by the way?)</p><a href=\"http://msdn.microsoft.com/en-us/magazine/cc163899.aspx">Use the Visual Studio 2005 Bootstrapper to Kick-Start Your Installation</a><a href=\"http://www.clariusconsulting.net/blogs/pga/comments/42831.aspx">Creating a bootstrapper for a VS Shell application</a><p>These 2 pages give me some ideas. I locate my C:\Program Files\Microsoft Visual Studio 8\SDK\v2.0\BootStrapper\Packages folder, create product.xml and package.xml to be as simple as possible, and now I can choose my package from MySetupProject->Properties->Prerequisites.</p><p>The application now can be installed smoothly, but there is still one thing I am not happy about. The package consists of setup.exe, the .msi package, and a subfolder with my driver package. I do not want the subfolder, that might be confusing for the user or the subfolder may get 'lost' somewhere in the process of application distribution. I'm looking for the soluton:</p><a href=\"http://stackoverflow.com/questions/567592/bootstrapper-how-to-compile-the-application-and-prerequisite-in-single-msi-pack">Bootstrapper: How to compile the application and prerequisite in single .msi package?</a><br/><a href=\"http://babek.info/libertybasicfiles/lbnews/nl134/iexpress.htm">IExpress Installer</a><p>And the IExpress seems to work fine for me. I create the single-file installation package, copy it to the test desktop and run ... just to be presented with another error. After examining the installation log, I realise that the IExpress did not extract my driver to the subfolder, but the installer expected to find it in the subfolder. Apparently, IExpress does not support the subfolders. I need another trick. A google search returns me to the page I have seen already and I read it again, carefully ... to the end.</p><a href=\"http://www.clariusconsulting.net/blogs/pga/comments/42831.aspx">Creating a bootstrapper for a VS Shell application</a><p>There it is, my solution:</p><blockquote>Unfortunately, the MSBuild task doesn't provide the option to have the configuration resource use prerequisite installers found in the target directory, so you must manually update the appropriate resource file to remove the hard-coded path that looks for prerequisites in a sub-directory of the same name. <br /><br />- Open the Setup.exe program in Visual Studio's resource editor <br />- Double-click the resource named, SETUPCFG in the 41 folder <br />- Search for the "Vs Shell\" string and delete the two occurrences that appear <br />- Save the resource file and the Setup.exe executable will be updated automatically <br />- Run iexpress <br />- Create a new package by following the IExpress wizard's steps and make sure to include the following files ...</blockquote><p>Some careful setup.exe editing follows (first attempt was unsuccessful, I spoiled the .exe and had to rebuild my project again) and I have the complete solution - my single-file installation package, that has a prerequisite that is installed before the installation of the main application.</p><p>However, that was not the end ...</p>
 */ 

public const string content_18022009_b = ""; 
public const string content_18022009_r = ""; 

 /* 
<p>Making changes to some application and having some problems with validation, I came across this validation function:</p><pre class=\"brush:csharp\">public new bool Validate(bool someParameter)<br />{<br /> bool blnResult = true;<br /><br /> if (name != null)<br /> {<br />  if (!name.Validate())<br />   blnResult = false;<br /> }<br /><br /> if (address != null)<br /> {<br />  if (!address.Validate(someParameter))<br />   blnResult = false;<br /> }<br /><br /> if (somethingElse != null)<br /> {<br />  if (!somethingElse.Validate())<br />   blnResult = false;<br /> }<br /> <br /> if (someMore != null)<br /> {<br />  if (!someMore.Validate())<br />   blnResult = false;<br /> }<br /><br /> return blnResult;<br />}</pre><p>So I asked myself, why would this function go through all validations each time even if it knows after the very first one that the blnResult is false and that will not change?</p><p>After some thought and investigation, the most likely answer is that the application was growing little by little. So, whenever its functionality was extended, say, from just keeping names to keeping names and addresses, the person currently in charge of the application would just copy and paste this bit</p><pre class=\"brush:csharp\">if (name != null)<br />{<br /> if (!name.Validate())<br />  return false;<br />}</pre><p>replace name with address and move on.</p><p>After I made some small change, the function does not look much different, but I have much less troubles with validation now.</p><pre class=\"brush:csharp\">public new bool Validate(bool someParameter)<br />{<br /> if (name != null)<br /> {<br />  if (!name.Validate())<br />   return false;<br /> }<br /><br /> if (address != null)<br /> {<br />  if (!address.Validate(someParameter))<br />   return false;<br /> }<br /><br /> if (somethingElse != null)<br /> {<br />  if (!somethingElse.Validate())<br />   return false;<br /> }<br /> <br /> if (someMore != null)<br /> {<br />  if (!someMore.Validate())<br />   return false;<br /> }<br /><br /> return true;<br />}</pre>

 */ 

public const string content_16022009_b = ""; 
public const string content_16022009_r = ""; 

 /* 
<p>Here's what can happen when a small functionality change is required in a fairly complex application. In this case, there are a few TabPages that are generated dynamically. Some of the TabPages have a 'Save Details' button.</p><p>The change: one of the TabPages now should NOT have a 'Save Details' button if the object is a 'new' object (not yet saved in the database). Easy!</p><p>Solution:</p><pre class=\"brush:csharp\">this.tabControl.Controls.Add(this.mySomethingTabPage);<br /><br />HideOrShowSaveButton(this.mySomethingTabPage); // solution<br /><br />...<br /><br />public void HideOrShowSaveButton(TabPage tabPage)<br />{<br /> //'save details' should not appear on the 'MySomething' tab page if <br /> //the object is a new object<br /><br /> //find 'save details' button<br /><br /> ToolStripButton mySmallSaveButton = null;<br /><br /> foreach (Control c in this.mySomethingTabPage.Controls)<br /> {<br />  SomeDetails.SomeDetailsHeadingView pdhv = c as SomeDetails.SomeDetailsHeadingView;<br /><br />  if (pdhv != null)<br />  {<br />   foreach (Control c1 in pdhv.Controls)<br />   {<br />    ToolStrip headingToolStrip = c1 as ToolStrip;<br /><br />    if (headingToolStrip != null)<br />    {<br />     foreach (ToolStripItem item in headingToolStrip.Items)<br />     {<br />      if (item.Name == "SaveButton")<br />      {<br />       mySmallSaveButton = item as ToolStripButton;<br /><br />       //hide button on the 'someDetails' tab if new object<br />       if (mySmallSaveButton != null)<br />       {<br />        if (Global.currentObject.IsNewObject)<br />        {<br />         mySmallSaveButton.Visible = false;<br />         mySmallSaveButton.Enabled = false;<br />        }<br />        else<br />        {<br />         mySmallSaveButton.Visible = true;<br />         mySmallSaveButton.Enabled = true;<br />        }<br />        return;<br />       }<br />      }<br />     }<br />    }<br />   }<br />  }<br /> }<br />}</pre><p>Had to hardcode the 'SaveButton' name which I would really want to avoid, but did not want to spend more time on that.</p><p>Thoughts: this application could have been designed a little better to make future changes not so painful.</p>

 */ 

public const string content_12022009_b = ""; 
public const string content_12022009_r = ""; 

 /* 

<p>Figured out how to call a WebService asynchronously using a Callback in .NET. The process is fairly easy and straightforward.</p><p>This article <a href=\"http://www.stardeveloper.com/articles/display.html?article=2001121901&page=1">Professional ASP.NET Web Services : Asynchronous Programming</a> provided me with most of the information that I needed, and even had a few solutions discussed, of which I chose the one which suits me best</p><p>First of all, of course, I need a WebService</p><pre class=\"brush:csharp\">namespace AsyncService<br />{<br />    /// <summary><br />    /// Summary description for Service1<br />    /// </summary><br />    [WebService(Namespace = "http://tempuri.org/")]<br />    [WebServiceBinding(ConformsTo = WsiProfiles.BasicProfile1_1)]<br />    [ToolboxItem(false)]<br />    // To allow this Web Service to be called from script, using ASP.NET AJAX,<br />    // uncomment the following line. <br />    // [System.Web.Script.Services.ScriptService]<br />    public class AsyncService : System.Web.Services.WebService<br />    {<br /><br />        [WebMethod(Description="Returna a random value under 1000")]<br />        public int[] GetRandomValue(int id, int delay)<br />        {<br />            Random random = new Random();<br />            int randomValue = random.Next(1000);<br />            int[] returnValue = new int[] { id, randomValue };<br />            Thread.Sleep(delay);<br />            return returnValue;<br />        }<br />    }<br />}</pre><p>This service only returns a random number. It also returns the number after some delay to imitate that it is actually does something useful.</p><p>A Web Service proxy class provides a wrapper that lets me communicate to a WebService.</p><pre class=\"brush:csharp\">namespace AsyncCaller<br />{<br />    [WebServiceBindingAttribute(Name = "AsyncRequestSoap", Namespace<br />        = "http://tempuri.org/")]<br />    public class AsyncCallerProxy : SoapHttpClientProtocol<br />    {<br />        public AsyncCallerProxy()<br />        {<br />            this.Url = "http://localhost/MyAsyncService/AsyncService.asmx";<br />        }<br /><br />        [SoapDocumentMethodAttribute("http://tempuri.org/GetRandomValue",<br />         Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Wrapped)]<br />        public int[] GetRandomValue(int id, int delay)<br />        {<br />            object[] results = this.Invoke("GetRandomValue", new object[]<br />               { id, delay });<br />            return ((int[])results[0]);<br />        }<br /><br />        public IAsyncResult BeginGetRandomValue(int id, int delay,<br />            AsyncCallback callback, object asyncState)<br />        {<br />            return this.BeginInvoke("GetRandomValue", new object[] {<br />            id, delay}, callback, asyncState);<br />        }<br /><br />        public int[] EndGetRandomValue(IAsyncResult asyncResult)<br />        {<br />            object[] results = this.EndInvoke(asyncResult);<br />            return ((int[])(results[0]));<br />        }<br />    }<br />}</pre><p>Now I want to make a small demonstration of asynchronous communication to the WebService.</p><p>Before that I would need a very simple helper class to make it easy.</p><pre class=\"brush:csharp\">public class AsyncHelper<br />    {<br />        public AsyncHelper(int id)<br />        {<br />            this.HelperID = id;<br />            Random random = new Random();<br />            this.RandomDelay = random.Next(10000);<br />        }<br /><br />        int _helperID = 0;<br /><br />        public int HelperID<br />        {<br />            get { return _helperID; }<br />            set { _helperID = value; }<br />        }<br /><br />        int _randomDelay = 0;<br /><br />        public int RandomDelay<br />        {<br />            get { return _randomDelay; }<br />            set { _randomDelay = value; }<br />        }<br /><br />        int _randomResult = 0;<br /><br />        public int RandomResult<br />        {<br />            get { return _randomResult; }<br />            set { _randomResult = value; }<br />        }<br />    }</pre><p>When an instatnce of the class is created, it is assigned a random delay value. I will pass it to the WebService and will get a response after a number of milliseconds defined by RandomDelay value.</p><p>On my demo application form I have a button and two DataGridViews.</p><a href=\"http://3.bp.blogspot.com/_Pk-5kPvf7Gs/SZSbYL8wCWI/AAAAAAAAAA0/b86tuPcv_2Q/s1600-h/entry2.JPG\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 156px; height: 200px;\" src=\"http://3.bp.blogspot.com/_Pk-5kPvf7Gs/SZSbYL8wCWI/AAAAAAAAAA0/b86tuPcv_2Q/s200/entry2.JPG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5302033501148678498\" /></a><p>When a button is pressed, an instance of the AsyncHelper class is created and added to the list of currently running requests, which is bound to the first DataGridView. The ID of the class instance and the delay value are passed to the WebService.</p><p>After the delay, the WebService returns the ID and the random ‘Result’. An instance of the AsyncHelper is found by ID, the result is assigned and the instance is removed from the current requests list and added to the processed requests list. If the button is pressed multiple times, a user can see multiple requests being added to the list and being returned by the WebService after the delays specified.</p><pre class=\"brush:csharp\">public partial class Form1 : Form<br />    {<br />        AsyncCallerProxy objWebService = new AsyncCallerProxy();<br /><br />        //counter for number of requests sent<br />        private int _requestCounter = 0;<br />        private List<AsyncHelper> _asyncRequests = new List<AsyncHelper>();<br />        private List<AsyncHelper> _asyncRequestsProcessed = <br />             new List<AsyncHelper>();<br /><br />        public Form1()<br />        {<br />            InitializeComponent();<br />            bindingSourceRequests.DataSource = _asyncRequests;<br />            dataGridViewRequests.DataSource = bindingSourceRequests;<br /><br />            bindingSourceRequestsProcessed.DataSource = _asyncRequestsProcessed;<br />            dataGridViewRequestsProcessed.DataSource =<br />                bindingSourceRequestsProcessed;<br />            <br />            dataGridViewRequests.Columns[0].DataPropertyName = "HelperID";<br />            dataGridViewRequests.Columns[1].DataPropertyName = "RandomDelay";<br /><br />            dataGridViewRequestsProcessed.Columns[0].DataPropertyName =<br />              "HelperID";<br />            dataGridViewRequestsProcessed.Columns[1].DataPropertyName = <br />              "RandomDelay";<br />            dataGridViewRequestsProcessed.Columns[2].DataPropertyName = <br />              "RandomResult";<br />        }<br /><br />        private void buttonRequest_Click(object sender, EventArgs e)<br />        {<br />            //create a new request and add it to request queue<br />            AsyncHelper newRequest = new AsyncHelper(_requestCounter);<br />            _requestCounter++;<br /><br />            _asyncRequests.Add(newRequest);<br /><br />            AsyncCallback asyncCallback = new AsyncCallback(MyCallBack);<br /><br />            IAsyncResult asyncResult;<br /><br />            asyncResult = objWebService.BeginGetRandomValue<br />              (newRequest.HelperID, newRequest.RandomDelay, asyncCallback, null);<br /><br />            UpdateRequestQueueDisplay();<br />        }<br /><br />        private void MyCallBack(IAsyncResult asyncResult)<br />        {<br />            int[] returnValue = objWebService.EndGetRandomValue(asyncResult);<br />            int id = returnValue[0];<br />            int result = returnValue[1];<br /><br />            AsyncHelper currentRequest = <br />                _asyncRequests.Find(delegate(AsyncHelper testRequest)<br />                {return testRequest.HelperID == id;});<br /><br />            //request is processed, remove it from the queue and add to processed<br />            //requests list<br />            if (currentRequest != null)<br />            {<br />                currentRequest.RandomResult = result;<br />                _asyncRequestsProcessed.Add(currentRequest);<br />                _asyncRequests.Remove(currentRequest);<br /><br />                UpdateRequestQueueDisplay();<br />            }<br />        }<br /><br />        private void UpdateRequestQueueDisplay()<br />        {<br />            //fixes the cross-thread issue while accessing the form controls<br />            this.BeginInvoke(new MethodInvoker(delegate()<br />            {<br />                this.bindingSourceRequests.ResetBindings(false);<br />                this.bindingSourceRequestsProcessed.ResetBindings(false);<br />            }));<br /><br />        }<br />    }</pre>
 */ 

public const string content_11022009_b = ""; 
public const string content_11022009_r = ""; 

 /* 

<p>Found a good article on exception handling. <a href=\"http://richnewman.wordpress.com/2007/04/08/top-level-exception-handling-in-windows-forms-applications-part-1/">Top-level Exception Handling in Windows Forms Applications</a> and followed some advice from it.</p><p>What it meant for me, basically, is that I changed the Program.cs file of my application from this</p><pre class=\"brush:csharp\">using System;<br />using System.Collections.Generic;<br />using System.Linq;<br />using System.Windows.Forms;<br /><br />namespace MyNameSpace<br />{<br />    static class Program<br />    {<br />        /// <summary><br />        /// The main entry point for the application.<br />        /// </summary><br />        [STAThread]<br />        static void Main()<br />        {<br />            Application.EnableVisualStyles();<br />            Application.SetCompatibleTextRenderingDefault(false);<br />            Application.Run(new FormUpdater());<br />        }<br />    }<br />}</pre><p>to this</p><pre class=\"brush:csharp\">using System;<br />using System.Collections.Generic;<br />using System.Linq;<br />using System.Windows.Forms;<br />using System.Threading;<br /><br />namespace MyNameSpace<br />{<br />    static class Program<br />    {<br />        /// <summary><br />        /// The main entry point for the application.<br />        /// </summary><br />        [STAThread]<br />        static void Main()<br />        {<br />            Application.ThreadException += <br />                new ThreadExceptionEventHandler(new <br />                  ThreadExceptionHandler().ApplicationThreadException);<br /><br />            Application.EnableVisualStyles();<br />            Application.SetCompatibleTextRenderingDefault(false);<br />            Application.Run(new FormUpdater());<br />        }<br /><br />        public class ThreadExceptionHandler<br />        {<br />            public void ApplicationThreadException<br />                  (object sender, ThreadExceptionEventArgs e)<br />            {<br />                MessageBox.Show(e.Exception.Message, "Error", <br />                      MessageBoxButtons.OK, MessageBoxIcon.Error);<br />            }<br />        }<br />    }<br />}</pre><p>and that allowed me to get rid of a couple of dozens try/catch blocks in the application code without losing any exception handling functionality. Quite handy.</p>
 */ 

public const string content_10022009_b = ""; 
public const string content_10022009_r = ""; 

 /* 
<p>I tried the solution suggested in this thread. <a href=\"http://social.microsoft.com/Forums/en-US/netfxbcl/thread/4b350704-d9b3-4920-a68a-802f5f4e8a6a">HOW TO RETRIEVE INSTALLED SCANNER</a></p><p>I did the following:</p><p><li>Downloaded wiaaut.dll</li> <br /><li>Copied it to system32</li> <br /><li>Registered it with "regsvr32 wiaaut.dll" (successfully)</li><br /><li>Added a reference to wiaaut.dll to my project in Visual Studio.NET</li><br /><li>Checked that the Windows Image Acquisition (WIA) service is running</li></p><p>Next, I added and debugged the following code:</p><pre class=\"brush:csharp\">WIA.DeviceManager manager = new WIA.DeviceManagerClass();<br />WIA.DeviceManagerClass managerClass = new WIA.DeviceManagerClass();<br /><br />string wdeviceName = "";<br />foreach (WIA.DeviceInfo info in manager.DeviceInfos)<br />{<br /> if (info.Type == WIA.WiaDeviceType.ScannerDeviceType)<br /> {<br />  foreach (WIA.Property p in info.Properties)<br />  {<br />   if (p.Name == "Name")<br />   {<br />    wdeviceName = ((WIA.IProperty)p).get_Value().ToString();<br />    Console.WriteLine(wdeviceName);<br />   }<br />  }<br /> }<br />}</pre><p>However, the manager.DeviceInfos is always empty. I have 2 scanners attached, one of them shows in Control Panel->Scanners and Cameras, one doesn't, and both show under "Imaging Devices" in Device manager.</p><p>At this point, the only idea I have is that the scanner drivers just do not support WIA. As long as I have no way to check if this is true or not, I'll have to stick to the yesterday's solution.</p>

 */ 

public const string content_09022009_b = "<p>I need to find out what scanners are attached to the computer. I also need to give the user of my application an option to select the default scanner, and to change this selection at any time. Fortunately, the scanner can only be one of a few models. Therefore, this is the solution I came up with so far:</p>"; 
public const string content_09022009_r = "<pre class=\"brush:csharp\">" + @"ArrayList scanners = new ArrayList();<br />            <br />ManagementObjectSearcher search = new System.Management.ManagementObjectSearcher<br />(""SELECT * From Win32_PnPEntity"");<br /><br />ManagementObjectCollection deviceCollection = search.Get();<br /><br />foreach (ManagementObject info in deviceCollection)<br />{<br />    string deviceName = Convert.ToString(info[""Caption""]);<br /><br />    if (/* check deviceName for certain substrings */)<br />    {<br />        scanners.Add(deviceName);<br />    }<br />}" + 
    "</pre><p>However, there are at least two things that can be improved, though I don't know if they're possible.</p><p>First, I would like to get only those devices that are under \"Imaging devices\" in Device Manager. That would be a huge improvement as I currently have almost 200 entries in the deviceCollection, and only 2 of them are under \"Imaging Devices\".</p><p>Also, I would like to find a way to check if the device is a scanner. That would help to provide a \"general\" solution where the scanner attached may be of any model.</p>"; 

public const string content_05022009_b = ""; 
public const string content_05022009_r = ""; 

 /* 

<p>Wrote my first windows service today. Was not hard at all, I mostly followed the guide</p><a href=\"http://www.codeproject.com/KB/dotnet/simplewindowsservice.aspx"> Simple Windows Service Sample</a><p>However, the way the service in the sample is logging events was not suitable for me. I needed to log the events into the Application log of the Event Viewer. I also needed to catch exceptions and log them as errors in the Application log. So I used the powers of Enterprise Library event logging and exception handling. Firstly, I added references to EnterpriseLibrary and the corresponding 'usings' to the windows service</p><pre class=\"brush:csharp\"><br />using Microsoft.Practices.EnterpriseLibrary.ExceptionHandling;<br />using Microsoft.Practices.EnterpriseLibrary.Logging;<br /></pre><p>Then, I added the loggingConfiguration and exceptionHandling sections to the appConfig file, that looked like this:</p><pre class=\"brush:xml\"><br /> &lt;configSections&gt;<br />  &lt;section name="loggingConfiguration" <br />type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings,<br />Microsoft.Practices.EnterpriseLibrary.Logging, Version=2.0.0.0, Culture=neutral,<br />PublicKeyToken=null" /&gt;<br />  &lt;section name="exceptionHandling" type=<br />"Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.<br />ExceptionHandlingSettings,<br />Microsoft.Practices.EnterpriseLibrary.ExceptionHandling,<br />Version=2.0.0.0, Culture=neutral, PublicKeyToken=null" /&gt;<br /> &lt;/configSections&gt;<br /> <br /> ...<br /> <br />  &lt;loggingConfiguration name="Logging Application Block" tracingEnabled="true"<br />  defaultCategory="" logWarningsWhenNoCategoriesMatch="true"&gt;<br />  &lt;listeners&gt;<br />   &lt;add source=" " formatter="Text Formatter" log="Application"<br />     machineName="" listenerDataType=<br />"Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.<br />FormattedEventLogTraceListenerData,<br />Microsoft.Practices.EnterpriseLibrary.Logging, Version=2.0.0.0, Culture=neutral,<br />PublicKeyToken=null"<br />     traceOutputOptions="None" type="Microsoft.Practices.EnterpriseLibrary.Logging.<br />TraceListeners.FormattedEventLogTraceListener,<br />Microsoft.Practices.EnterpriseLibrary.Logging, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null"<br />     name="MyService EventLog TraceListener" /&gt;<br />  &lt;/listeners&gt;<br />  &lt;formatters&gt;<br />   &lt;add template="Timestamp: {timestamp}&#xD;&#xA;Message: {message}&#xD;&#xA;Category: {category}&#xD;"<br />     type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter,<br />Microsoft.Practices.EnterpriseLibrary.Logging, Version=2.0.0.0, Culture=neutral,<br />PublicKeyToken=null" name="Text Formatter" /&gt;<br />  &lt;/formatters&gt;<br />  &lt;categorySources&gt;<br />   &lt;add switchValue="All" name="MyService"&gt;<br />    &lt;listeners&gt;<br />     &lt;add name="MyService EventLog TraceListener" /&gt;<br />    &lt;/listeners&gt;<br />   &lt;/add&gt;<br />  &lt;/categorySources&gt;<br />  &lt;specialSources&gt;<br />   &lt;allEvents switchValue="All" name="All Events" /&gt;<br />   &lt;notProcessed switchValue="All" name="Unprocessed Category" /&gt;<br />   &lt;errors switchValue="All" name="Logging Errors &amp; Warnings"&gt;<br />    &lt;listeners&gt;<br />     &lt;add name="MyService EventLog TraceListener" /&gt;<br />    &lt;/listeners&gt;<br />   &lt;/errors&gt;<br />  &lt;/specialSources&gt;<br /> &lt;/loggingConfiguration&gt;<br /><br /> &lt;exceptionHandling&gt;<br />  &lt;exceptionPolicies&gt;<br />   &lt;add name="PagingPolicy"&gt;<br />    &lt;exceptionTypes&gt;<br />     &lt;add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral,<br />PublicKeyToken=b77a5c561934e089"<br />       postHandlingAction="None" name="Exception"&gt;<br />      &lt;exceptionHandlers&gt;<br />       &lt;add logCategory="MyService" eventId="100" severity="Error"<br />         title="MyService Exception Handling" formatterType=<br />"Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter,<br />Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=2.0.0.0, Culture=neutral,<br />PublicKeyToken=null" priority="0" type=<br />"Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, <br />Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging,<br />Version=2.0.0.0, Culture=neutral, <br />PublicKeyToken=null"<br />         name="MyService Logging Handler" /&gt;<br />      &lt;/exceptionHandlers&gt;<br />     &lt;/add&gt;<br />    &lt;/exceptionTypes&gt;<br />   &lt;/add&gt;<br />  &lt;/exceptionPolicies&gt;<br /> &lt;/exceptionHandling&gt;<br /> </pre><p>I'll be honest, I would not be able to explain every single line in this XML snippet. I just know that it works that way, and when I try removing some parts of it which seem to be unnecessary to me, the whole application usually starts failing.</p><p>Next, I put the following into the OnStart method of the service:</p><pre class=\"brush:csharp\"><br />            try<br />            {<br />                Logger.Write("MyService Process Started: " + getNow(), "MyService");<br />                timer.Elapsed += new ElapsedEventHandler(timer_Elapsed);<br />                timer.Interval = 10000;<br />                timer.Enabled = true;<br />            }<br />            catch (Exception ex)<br />            {<br />                ExceptionPolicy.HandleException(ex, "MyService");<br />                errorCount++;<br />            }<br />   </pre><p>and into the OnStop method</p><pre class=\"brush:csharp\"><br />            Logger.Write("MyService Process Stopped: " + getNow(), "MyService");<br />            timer.Enabled = false;<br />   </pre><p>and into the timer_Elapsed method</p><pre name="code" class="c#"><br />   Logger.Write("running MyService process at " + getNow(), "MyService");<br />   RunMainFunction();<br />   </pre><p>(getNow() simply returns DateTime stamp in the required format)</p><p>and I started getting events written into the Application log.</p><p>Actually, logging events into the event log seems to be faster and easier than trying to debug the service. At least with my little service, where the whole cycle of stopping service -> uninstallation -> building a service + installation package -> installation -> starting a new version of a service can be done in under one minute.</p>
 */ 

public const string content_04022009_b = ""; 
public const string content_04022009_r = ""; 

 /* 
<a href=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SYp8JH3rkoI/AAAAAAAAAAk/JCgT45BLSic/s1600-h/error1.JPG"><img style="float:right; margin:0 0 10px 10px;cursor:pointer; cursor:hand;width: 200px; height: 116px;\" src=\"http://4.bp.blogspot.com/_Pk-5kPvf7Gs/SYp8JH3rkoI/AAAAAAAAAAk/JCgT45BLSic/s200/error1.JPG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5299184407728067202\" /></a><p>I’m playing with the Team Foundation Server 2008 these days. After I mastered the installation process, time has come to play around with security settings, group memberships and things like that.The first real issue I came across was having a problem with adding a Windows Group to TFS Licensed Users group. This is done through Team->Team Foundation Server Settings -> Group Memberships. The error message I got was very uninspiring and unhelpful.</p><a href=\"http://3.bp.blogspot.com/_Pk-5kPvf7Gs/SYp8JI2CIaI/AAAAAAAAAAs/LUVs7D9fNL8/s1600-h/error2.JPG"><img style="float:right; margin:0 0 10px 10px;cursor:pointer; cursor:hand;width: 200px; height: 56px;\" src=\"http://3.bp.blogspot.com/_Pk-5kPvf7Gs/SYp8JI2CIaI/AAAAAAAAAAs/LUVs7D9fNL8/s200/error2.JPG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5299184407989592482\" /></a><p>At the same time I could add single users from the same group without any problems. So my next step was to try to add every user from the group individually one by one. This way, after adding five users, I got the more helpful error message</p><p>Aha! There is an error code this time. Now I can find out why. Turns out that the 5 user limitation is specific to the TFS – Workgroup edition. Ok, I do not even know for sure what is the edition I have installed and it does not say on the Help->About.</p><p>This page comes very handy</p><a href=\"http://blogs.msdn.com/robcaron/archive/2006/08/15/701843.aspx">Which Version of Team Foundation Server Do I Have?</a><p>So, I check the value of the registry key under <b>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\9.0\TeamFoundation\Registration\Edition_CT</b> And it is ‘Workgroup’ indeed. Confirmed!</p><p>Now I need to upgrade to the Standard Edition. I have the key, but when I go to Add and Remove programs, run Change/Remove and select the option to Upgrade, the boxes where I’m supposed to enter the license key are grayed out! I’m stuck!</p><p>Luckily, I find some help.<p><a href=\"http://social.msdn.microsoft.com/Forums/en-US/tfssetup/thread/2a13ec88-e199-48e6-8312-de9602cf7577/">Upgrading TFS 2008 Workgroup to Std. Edition</a><p>Here is what the wise guys from Microsoft advise:</p><p>1. Find a Setup.sdb file at the folder</p><p><ProgramPath>\Microsoft Visual Studio 2008 Team Foundation Server\Microsoft Visual Studio 2008 Team Foundation Server - ENU\</p><p>2. Open the Setup.sdb file with text editor; you can back up the file before editing it.</p><p>3. Remove the “[Product Key]” line and the PID line after it in the file.</p><p>Try to upgrade again.</p><p>And this works. I re-check the registry key value and, indeed, it has changed to “Full” which means Standard Edition. Hooray! However, when I try to add a 6th user to the TFS Licensed users, I still come up with the same error. Now I consider reinstalling from scratch! Next, I come across this discussion.</p><a href=\"http://social.msdn.microsoft.com/Forums/en-US/tfssetup/thread/21eb519c-7871-4e4b-ade8-3614b3a1d2a3/">Upgrading from limited version</a><p>And the last bit of advice seems to be my case</p><p>“If you are using the full RTM version (not the workgroup version) do not use the Licensed Users Group.  It is not used by the full version but is still limited to 5 users.  Just add the users to the project groups.”</p><p>And it works too. I can add Windows Users and Groups to project groups.</p><p>Finally, a few words about deleting projects.<br />A simple way to delete the project forever is explained here</p><a href=\"http://aspadvice.com/blogs/ssmith/archive/2006/03/10/Team-System-Delete-Project.aspx">Team System Delete Project</a><p>“If you need to delete a Team System Project you need to do it through a command line utility that is installed with Team Explorer.  There is no way to delete a project from Team System except through the command line tool, TFSDeleteProject.exe.  This utility is in the c:\program files\Microsoft Visual Studio 8\Common7\IDE\ folder by default.  To delete a project, use the following syntax:</p><p>TFSDeleteProject /server:ServerName ProjectName”</p><p>However, if you are getting the TF30063 error, it might be worth looking at this post, it worked like a charm in my situation:</p><a href=\"http://vsts-fu.blogspot.com/2008/10/tf30063-you-are-not-authorized-to.html">TF30063: You are not authorized to access...</a><p>“Ever try to delete a team project and get the above message? Are you in the Team Foundation Administrators group and scratching your head?”</p>

 */ 

public const string content_26012009_b = ""; 
public const string content_26012009_r = ""; 

 /* 

<p>I started getting a very unexpected error today in the application I’m working on. I did a quick search on google and resorted to asking a question on the StackOverflow website</p><a href=\"http://stackoverflow.com/questions/427007/the-key-userid-does-not-exist-in-the-appsettings-configuration-section">The key ‘UserID’ does not exist in the appSettings configuration section.</a><p>Basically, I started getting this error while trying to open 2 of some 10+ forms in my Window Forms application in designer.</p><pre class=\"brush:js\">To prevent possible data loss before loading the designer, the following errors must be <br />resolved: <br />The key 'UserID' does not exist in the appSettings configuration section.</pre><p>While waiting for a kind soul to reply to my question, I continued searching through Call Stacks, trying to find the cause of a problem. And I found it eventually. What the VS designer was really complaining about, was the fact that I was calling a stored procedure from the user control’s InitializeComponent.</p><p>Well, I have a couple of comboboxes on the user control which a populated from the database, so I decided to choose the simplest way to make sure they were populated by the time the user control was shown. Looks like it was not such a good idea. I ended up moving the calls into a separate function, and calling that function from a hosting form after the user control is shown in the hosting form. This appears to work for me. Took me a whopping 58 minutes to fix an error I introduced by being careless and ignorant, hope it’s not project-breaking thing.</p>
 */ 

public const string content_20012009_b = ""; 
public const string content_20012009_r = ""; 

 /* 

<p>Inspired by this blog entry I found</p><p><a href=\"http://developertips.blogspot.com:80/2007/08/syntaxhighlighter-on-blogger.html">Using SyntaxHighlighter on BLOGGER</a></p><p>I spent some time updating my blog and posts to use the SyntaxHighlighter. I think it looks a little better now, so I'll keep it this way.</p>
 */ 

public const string content_16122008_b = ""; 
public const string content_16122008_r = ""; 

 /* 

OK, here’s my small puzzle I came across today.<br /><br />Start Visual Studio 2008. Select New Project -> Visual C# -> Windows -> Windows Forms Application. WindowsFormsApplication1 seems to be a good enough name. Hit OK.<br /><br />Now, go to Solution Explorer, right-click WindowsFormsApplication1 and select ‘add Class’. Class1 seems to be a good enough name. Hit OK.<br /><br />Now, make this class inherit from SoapHttpClientProtocol. For this purpose, add a reference to ‘System.Web.Services’ to References.<br /><br />Now, decorate this new Class1 with the WebServiceBindingAttribute.<br />You’ll end up with code as simple as this:<br /><pre class=\"brush:csharp\"><br />using System;<br />using System.Collections.Generic;<br />using System.Linq;<br />using System.Text;<br />using System.Web.Services.Protocols;<br />using System.Web.Services;<br /><br />namespace WindowsFormsApplication1<br />{<br />    [WebServiceBindingAttribute(Name = "AsyncRequestSoap", <br />        Namespace = "http://tempuri.org/")]<br />    class Class1 : SoapHttpClientProtocol<br />    {<br />    }<br />}<br /></pre><br />The project builds without errors and, if actual code is added to Class1, it will execute without errors. However, if I double-click 'Class1.cs' in Solution Explorer, I would be presented with an error screen like this one:<br /><br /><a href=\"http://3.bp.blogspot.com/_Pk-5kPvf7Gs/SUeL5h_bI9I/AAAAAAAAAAc/PVUqR-muDus/s1600-h/WSBindingAttr.JPG"><img style="float:right; margin:0 0 10px 10px;cursor:pointer; cursor:hand;width: 200px; height: 86px;\" src=\"http://3.bp.blogspot.com/_Pk-5kPvf7Gs/SUeL5h_bI9I/AAAAAAAAAAc/PVUqR-muDus/s200/WSBindingAttr.JPG\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5280342908608390098\" /></a><br /><br />This seems to be a bug in Visual Studio since it’s obvious that WebServiceBindingAttribute attribute is added to the class and the application will compile and execute regardless of the error screen. Seems to be safe to ignore. However, I did not find clarification on that yet.
 */ 

public const string content_15122008_b = ""; 
public const string content_15122008_r = ""; 

 /* 
<p>I spent a couple of days investigating what this device can do:</p><a href=”http://adria-scan.com/downloads/broshure/3M/3M%20Full%20Page%20Reader.pdf”>3M Full Page Scanner</a><a href=\"http://3.bp.blogspot.com/_Pk-5kPvf7Gs/ST-U51T2l8I/AAAAAAAAAAU/V1BxybkdxZU/s1600-h/3mscanner.jpg"><img style="float:right; margin:0 0 10px 10px;cursor:pointer; cursor:hand;width: 200px; height: 185px;\" src=\"http://3.bp.blogspot.com/_Pk-5kPvf7Gs/ST-U51T2l8I/AAAAAAAAAAU/V1BxybkdxZU/s200/3mscanner.jpg\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5278101009585313730\" /></a><p>This smart device is supposed to be able to scan all sorts of passports and other identification documents and retrieve values like names, date of birth, document expiry dates and such. The documentation is not very straightforward and the code samples are in C++ only so it took me a bit of time to figure out how to operate this device programmatically.</p><p>First of all, a DocAuth.dll has to be referenced. (There is a bunch of development resources on the CD that comes with the device, and the dll’s are there too). After that, an object of a ReaderClass can be created.</p><pre class=\"brush:csharp\">using DOCAUTHLib;<br />...<br />r = new ReaderClass();</pre><p>then the connection to the device has to be established</p><pre class=\"brush:csharp\">r.Connect("D72086", "Scanner", "ProcessingDone");</pre><p>"ProcessingDone" is the comma-separated string that specifies which events will be captured. Other events are “NewDocument ”, “DocumentIdentified ”, etc. After the connection is established, you can subscribe to the scanner events.</p><pre class=\"brush:csharp\">r._IReaderEvents_Event_ReaderEvent += new _IReaderEvents_ReaderEventEventHandler(r__IReaderEvents_Event_ReaderEvent);<br />void r__IReaderEvents_Event_ReaderEvent(string @event){}</pre><p>In this case, for example, if subscription is made to “ProcessingDone” event only, then whenever a new document is placed into the scanner, it will be automatically scaneed and after that the event will be fired and captured by the function. This might not always be very handy, so I chose to run scans manually. This is done by simply calling</p><pre class=\"brush:csharp\">r.DoScan();</pre><p>To use the device as a simple image scanner, you can instruct it to process the image as a generic image.</p><pre class=\"brush:csharp\">r.ForceDocumentProcessing("Generic Image Capture", "");</pre><p>The image, for some reason, is returned as a string.</p><pre class=\"brush:csharp\">string s = r.RetrieveImageItem("Visible", “BMP”); // or JPG, etc.</pre><p>Alternatively, the image can be saved to disk straight away.</p><pre class=\"brush:csharp\">r.RetrieveImageItemAndSave("Visible", “JPG”, @"C:\scan.jpg");</pre><p>Now, when you want to use this device for automatic retrieval of data from various documents, things become more interesting. Apparently, the list of documents that can be recognised, is stored on the device somewhere. Here is how this can be accessed:</p><pre class=\"brush:csharp\">r.RetrieveDatabaseList("");<br />string dv = string.Empty;<br />for (int i = 0; i < r.DatabaseListCount; i++)<br />{<br /> dv = r.get_DatabaseListValue(i);  <br />}</pre><p>The “database list” is the list of types of documents that are available for recognition. It contains values like “2Line44” or “3Line30”. After the type has been selected, you can access the list of more particular documents belonging to this type in a similar way:</p><pre class=\"brush:csharp\">r.RetrieveDocumentItemList(“2Line44”);<br />string lv = string.Empty;<br />for (int i = 0; i < r.DocumentItemListCount; i++)<br />{    <br /> lv = r.get_DocumentItemListValue(i);<br />}</pre><p>The ‘document item list’ contains values like “Hungarian_Passport”, “Netherlands_Old_Passport” etc. – a lot of them.</p><p>Now, after a particular document that we are going to try to read is chosen, we can go and access all the information that the scanner is trying to extract from it.</p><pre class=\"brush:csharp\">r.Connect("D72086", "Scanner", "ProcessingDone");<br />r.ForceDocumentProcessing("2Line44", "Australia_Passport");<br />r.DoScan();<br />string fName = r.RetrieveTextItem("@mrz_surname");<br />string lName = r.RetrieveTextItem("@mrz_givname");</pre><p>If we’re lucky, the strings will contain proper name of the passport owner.</p><p>Now I can go and write a small application that can be used, for example, to add clients to a company database. It will scan the client’s passport and automatically populate fields like name, sex, DOB and a few others.</p><p>Overall, it's a fun device to work with. :-) </p>

 */ 

public const string content_10122008_b = ""; 
public const string content_10122008_r = ""; 

 /* 
<p>Only today I realized that it's easy to add my own stylesheet to the blog's template so I don't have to format each post which contains code by adding styles to it.</p><p>Oh well, I guess you should refer to the blog title, that explains it. Just in case you're a bit like me, though:</p><li>Simply copy the CSS you want to use to the clipboard</li><li>In Blogger, go to Template: Edit HTML. In the large textbox in the middle of the page, scroll down to the beginning of the CSS area (it starts with body { ). Just before that line, paste in the CSS you copied</li><li>Click Save Template</li><p>(courtesty of <a href=\"http://forkd.com/help/blogging_styling">How do style my recipe on my blog?</a>)</p>

 */ 

public const string content_13112008_b = ""; 
public const string content_13112008_r = ""; 

 /* 
<p>Let's say I have some data regarding the buildings and people who built them - one building obviously can have multiple builders.</p><pre class=\"brush:sql\">BuildingID  BuilderName<br />----------- ----------------<br />1           Paul<br />2           John<br />3           Bob<br />1           George<br />2           Sam<br />3           Fred<br />1           Joe<br />2           Phil</pre><p>What I need here, is a report in the following format:</p><pre class=\"brush:sql\">BuildingID  builder_list<br />----------- --------------------------<br />1           George, Joe, Paul<br />2           John, Phil, Sam<br />3           Bob, Fred</pre><p>I found a very good guide on the problem:</p><a href=\"http://www.projectdmx.com/tsql/rowconcatenate.aspx">Concatenating row values in Transact-SQL</a><p>This is the solution I chose from the suggested ones:</p><pre class=\"brush:sql\">WITH CTE (BuildingID, builder_list, builder_name, length)<br /> AS(SELECT BuildingID, CAST( '' AS VARCHAR(8000) ), CAST( '' AS VARCHAR(8000) ), 0<br />    FROM tblBuildings<br />    GROUP BY BuildingID<br />       UNION ALL<br />    SELECT p.BuildingID, CAST(builder_list +<br />    CASE WHEN length = 0 THEN '' ELSE ', ' END + BuilderName AS VARCHAR(8000) ), <br />    CAST(BuilderName AS VARCHAR(8000)), length + 1<br />    FROM CTE c<br />    INNER JOIN tblBuilders p<br />    ON c.BuildingID = p.BuildingID<br />    WHERE p.BuilderName > c.builder_name)<br />  <br />SELECT BuildingID, builder_list<br />FROM (SELECT BuildingID, builder_list,<br /> RANK() OVER (PARTITION BY BuildingID ORDER BY length DESC)<br />FROM CTE) D (BuildingID, builder_list, rank)<br />WHERE rank = 1;</pre><p>It looks a bit complex to understand, but does exactly what I need!</p>

 */ 

public const string content_05112008_b = "<p>You can actually assign default values to stored procedure parameters. I suspect I knew that sometime, but totally forgotter. All I need to do is declare them like this</p>"; 
public const string content_05112008_r = "<pre class=\"brush:sql\">" + 
    @"CREATE PROCEDURE [dbo].[prSP_MyStoredProcWithDefaultParameters]<br />(@someID int,@someParam1 int = -1,@someParam2 int = -1,@someParam3 int = -1,<br />@someParam4 int = -1,//...@someParam999 int = -1)" + 
    "</pre><p>Now if I have less than 999 'someParameters', I can still call the stored procedure. I don't really care how many parameters are in the list, as long as there is no more than 999 of them.</p><pre class=\"brush:sql\">" + 
    @"List<DbParameter> myParams = new List<DbParameter>();<br />List<int> paramList = new List<int>();<br />// add some values to the list<br />foreach (int myInt in paramList)<br />{ <br /> if (paramList.IndexOf(myInt) > 998) <br /> {<br />  break;<br /> }<br /> else<br /> {<br />  myParams.Add(DbManager.CreateInParameter(""someParam"" +<br /> (paramList.IndexOf(myInt) + 1).ToString(), DbType.Int32, myInt)); <br /> }<br />}" + 
    "</pre><p>Well, I guess I have to take care to assign the really important parameters of course.</p><p>I can have default values in SQL Server functions too, but, unfortunately I have to specify the keyword 'default' while calling them.</p><p>So, if a function is defined as</p><pre class=\"brush:sql\">" + 
    @"CREATE FUNCTION [dbo].[fn_MyFunctionWithDefaultParameters](@someID int,<br />@someParam1 int = -1,@someParam2 int = -1,<br />@someParam3 int = -1,@someParam4 int = -1,<br />//...<br />@someParam999 int = -1)" + 
    "</pre><p>I need to call it this way:</p><pre class=\"brush:sql\">" + 
    @"dbo.fn_MyFunctionWithDefaultParameters(1, 2, 3, default, default, <br />/* snip a few hundred more*/ <br />default)" + 
    "</pre><p>Still quite useful, but I wish I could call it just like this</p><pre class=\"brush:sql\">" + 
    @"dbo.fn_MyFunctionWithDefaultParameters(1, 2, 3)" + "</pre><p>or this</p><pre class=\"brush:sql\">" + 
    @"dbo.fn_MyFunctionWithDefaultParameters(1, 2, 3, default, 5, 6)</pre>"; 

public const string content_28102008_b = ""; 
public const string content_28102008_r = ""; 

 /* 

<p>Finally got an offer from that company I mentioned before - the one that everyone knows about. And accepted, too. Looking forward to it. The company is huge, though it is not a software development or a consulting company. The development team is about 30 people and only develops software for company's internal needs. I start in 4 weeks.</p><p>Oh well, enough about it for now I guess.</p>
 */ 

public const string content_25102008_b = ""; 
public const string content_25102008_r = ""; 

 /* 

<p>Cause it's Friday.</p><p>I came across a very good list of tips and tricks that every developer who uses Visual Studio 2008 should know:</p><p><a href=\"http://weblogs.asp.net/stephenwalther/archive/2008/10/21/essential-visual-studio-tips-amp-tricks-that-every-developer-should-know.aspx">Essential Visual Studio Tips & Tricks that Every Developer Should Know</A>.</p><p>Ones I did not know are: 1, 4, 7, 10.</p>
 */ 

public const string content_23102008_b = ""; 
public const string content_23102008_r = ""; 

 /* 
<p>I needed to hide some of the rows of a databound DataGridView at runtime. However, when I added a piece of code to do that,</p><pre class=\"brush:csharp\">foreach (DataGridViewRow row in myDataGridView.Rows)<br />{ <br />   if (someCondition) <br />   {<br />      row.Visible = false; <br />   }<br />}</pre><p>I was getting an exception sometimes:</p><p>'Row associated with the currency manager's position cannot be made invisible.'</p><p>I found out that the exception was happening when the row I was trying to set invisible was selected. The solution to this little problem is to change the code the following way:</p><pre class=\"brush:csharp\">CurrencyManager currencyManager1 = (CurrencyManager)<br />BindingContext[myDataGridView.DataSource];<br />currencyManager1.SuspendBinding();<br />foreach (DataGridViewRow row in myDataGridView.Rows)<br />{ <br />   if (someCondition) <br />   {<br />      row.Visible = false; <br />   }<br />}<br />myBindingSource.ResumeBinding();  // this is myDataGridView's binding source</pre>

 */ 

public const string content_20102008_b = "<p>So I needed to show a type name in the textbox today. Like 'DateTime', or 'Integer' etc. I decided to create a binding source and bind to System.Type.Name like this:</p>"; 
public const string content_20102008_r = "<pre class=\"brush:csharp\">" + 
    @"this.propertyTypeBindingSource.DataSource = typeof(System.Type);<br />/* snip */<br />this.nameTextBox.DataBindings.Add(new System.Windows.Forms.Binding<br />(""Text"", this.propertyTypeBindingSource, ""Name"", true));<br />/* snip */<br />Type PropertyType = typeof(DateTime);<br />this.propertyTypeBindingSource.DataSource = PropertyType;" + 
    "</pre><p>However, when I try to run the application, I get an exception<p><p>\"Cannot bind to the property or column Name on the DataSource. Parameter name: dataMember\"</p><p>So, looks like I'm not allowed to bind directly to System.Type. Maybe I have to do some simple trick ... I create a class</p><pre class=\"brush:csharp\">" + 
    @"public class StubPropertyType<br />{ <br /> public StubPropertyType(Type type) <br /> {<br />  this.StubPropertyTypeName = type.Name;<br /> }<br /> private string _stubPropertyTypeName = string.Empty;<br /> public string StubPropertyTypeName <br /> {<br />  get { return _stubPropertyTypeName; }  <br />  set { _stubPropertyTypeName = value; } <br /> }<br />}" + 
    "</pre><p>and my binding now looks along these lines:</p><pre class=\"brush:csharp\">" + 
    @"this.propertyStubBindingSource.DataSource = typeof(StubPropertyType);<br />/* snip */<br />this.nameTextBox.DataBindings.Add(new System.Windows.Forms.Binding<br />(""Text"", this.propertyStubBindingSource, ""StubPropertyTypeName"", true));<br />/* snip */<br />Type PropertyType = typeof(DateTime);<br />StubPropertyType stub = new StubPropertyType(PropertyType);<br />this.propertyStubBindingSource.DataSource = stub;" + 
    "</pre><p>And it works like a charm!</p>"; 

public const string content_15102008_b = ""; 
public const string content_15102008_r = ""; 

 /* 
<p>In SQL Server 2005, if I need to know what are the columns and data types of the certain table, I can run a simple query to know it:</p><pre class=\"brush:csharp\">select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME='MyTable'</pre><p>What's especially good for me is that it not only works with tables, but with views too. My current task is to create an interface for users which would allow them to generate custom reports through a set of views. They need to be able to apply criteria to the reports so that if the column's data type is datetime, they can use 'Is Before' or 'Is After', but on integer columns they can use 'Larger Than' etc.<p>

 */ 

public const string content_14102008_b = ""; 
public const string content_14102008_r = ""; 

 /* 
<p>On Friday I will have to go for an 'online test'. That's it, no more details. I've been for a 'first round' interview, and after about a week or so I got a call and was invited to this testing. I have no idea what the testing will be about, but I studied everything relevant on <a href=\"http://www.techinterviews.com"> Tech Interviews</a> and even registered with <a href=\"http://www.brainbench.com">Brainbench</a> cause they have a free C# test there. It's a bit hard to prepare when you don't know what you're preparing for. Well it's a C# development position, so this gives me sort of an idea.</p>

 */ 

public const string content_09102008_b = ""; 
public const string content_09102008_r = ""; 

 /* 
<p><a href=\"http://stackoverflow.com/">This site</a></p><p>seems to be very useful for those seeking answers for their computer-related questions. I fould a link to it <a href=\"http://www.joelonsoftware.com/items/2008/09/15.html">here</a>.</p><p>This is how it works:</p><blockquote><br />Every question in Stack Overflow is like the Wikipedia article for some extremely narrow, specific programming question. How do I enlarge a fizzbar without overwriting the user’s snibbit? This question should only appear once in the site. Duplicates should be cleaned up quickly and redirected to the original question. <br /><br />Some people propose answers. Others vote on those answers. If you see the right answer, vote it up. If an answer is obviously wrong (or inferior in some way), you vote it down. Very quickly, the best answers bubble to the top. The person who asked the question in the first place also has the ability to designate one answer as the “accepted” answer, but this isn’t required. The accepted answer floats above all the other answers.</blockquote><br /><p><a href=\"http://www.joelonsoftware.com/items/2008/09/15.html">Read more</a>.</p>

 */ 

public const string content_07102008_b = ""; 
public const string content_07102008_r = ""; 

 /* 
<p>Is there even such thing as a 'Junior Project Manager'? The title caught my eye as I never seen anything like this before. And the salary on offer is even significantly less than I have as a developer at the moment ...</p>

 */ 

public const string content_06102008_b = ""; 
public const string content_06102008_r = ""; 

 /* 

<p>You know how in Visual Studio you can type 'mbox', press Tab twice and Visual Studio will convert it into</p><pre class=\"brush:csharp\">MessageBox.Show("Test");</pre><p>Or, you can type 'ctor', press Tab twice and the constructor for the class will be generated? </p><p>This can be customised. Have a look at the following file:</p><pre class=\"brush:csharp\">&lt;?xml version="1.0" encoding="utf-8" ?&gt;<br />&lt;CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet"&gt;<br /> &lt;CodeSnippet Format="1.0.0"&gt;<br />  &lt;Header&gt;<br />  &lt;Title&gt;props&lt;/Title&gt;<br />  &lt;Shortcut&gt;props&lt;/Shortcut&gt;<br />  &lt;Description&gt;Code snippet that checks for a null property&lt;/Description&gt;<br />  &lt;SnippetTypes&gt;<br />   &lt;SnippetType&gt;Expansion&lt;/SnippetType&gt;<br />  &lt;/SnippetTypes&gt;<br />  &lt;/Header&gt;<br />  &lt;Snippet&gt;<br />   &lt;Declarations&gt;<br />    &lt;Literal&gt;<br />     &lt;ID&gt;field&lt;/ID&gt;<br />     &lt;ToolTip&gt;backing store&lt;/ToolTip&gt;<br />     &lt;Default&gt;mProp&lt;/Default&gt;<br />    &lt;/Literal&gt;    <br />    &lt;Literal&gt;<br />     &lt;ID&gt;type&lt;/ID&gt;<br />     &lt;ToolTip&gt;Property type&lt;/ToolTip&gt;<br />     &lt;Default&gt;int&lt;/Default&gt;<br />    &lt;/Literal&gt;<br />    &lt;Literal&gt;<br />     &lt;ID&gt;property&lt;/ID&gt;<br />     &lt;ToolTip&gt;Property name&lt;/ToolTip&gt;<br />     &lt;Default&gt;MyProperty&lt;/Default&gt;<br />    &lt;/Literal&gt;<br />   &lt;/Declarations&gt;<br />   &lt;Code Language="csharp"&gt;<br />   &lt;![CDATA[private $type$ $field$;   <br />   public $type$ $property$    <br />   {     <br />    get<br />    {<br />     if (this.$field$ == null)     <br />     {      <br />      this.$field$ = new $type$();<br />     }     <br />     return this.$field$;    <br />    }<br />    set {this.$field$ = value;}    <br />   }<br />   $end$]]&gt;   <br />   &lt;/Code&gt;<br />  &lt;/Snippet&gt; <br /> &lt;/CodeSnippet&gt;<br />&lt;/CodeSnippets&gt;<br /></pre><p>You can now save it with any name you like, and then press Ctrl-K, B (or choose Tools -> Code snippets manager), press 'Import', navigate to this file and select it.</p><p>Now, if you type 'props' and press Tab twice, the system will convert it into the following little pattern for getting a private member through a property, with checking if it is null:</p><pre class=\"brush:csharp\">private int mProp;<br />public int MyProperty <br />{<br /> get  <br /> {<br />  if (this.mProp == null)  <br />  {   <br />   this.mProp = new int();   <br />  }<br />  return this.mProp; <br /> }<br /> set {this.mProp = value;} <br />}</pre><p>From here it's easy to understand how to make 'snippets' that do anything you want.</p>
 */ 

public const string content_05102008_b = ""; 
public const string content_05102008_r = ""; 

 /* 
<p>The easiest of those I did not answer today was 'What is the difference between a class and a struct?'.</p><p>Yes, everyone should know it. For explanation why I did not, refer to the title of this blog. Later I found quite a detailed answer here:</p><p><a href=\"http://www.dotnetspider.com/resources/740-Difference-between-class-struct-C.aspx">Difference between class and struct in C#</a></p><p>I knew some of these, but did not realize there are that many. Some can be combined though, for example "When you instantiate a class, it will be allocated on the heap.When you instantiate a struct, it gets created on the stack" is obvious if you already know that "Classes are reference types and structs are value types".</p>

 */ 

public const string content_04102008_b = ""; 
public const string content_04102008_r = ""; 

 /* 

<p>Everyone knows this one. You should research the company you're going to for an interview - what it does, what are their goals, who their main competitors are etc.</p><p>Sometimes, however, you have a luxury of skipping this step. If a company is so huge or well-known that literally EVERYONE knows it, I think it's pretty safe to skip it.</p><p>I was at such company last week, maybe for the first time in my life. No, they didn't ask me 'so, what do you know about us?' :)</p>
 */ 

public const string content_02102008_b = ""; 
public const string content_02102008_r = ""; 

 /* 
<p>Implementing permissions in the application.The database structure is there. There is "Permissions" table, there is "Roles" table, there is "RolesPermissions" table. There is an interface that allows to create additional roles and add different permissions to them. So, what is the exciting thing that's not yet implemented?</p><p>I have to go through the code and insert pieces of code that actually check user's permissions and look like this:</p><pre class=\"brush:csharp\">if (CurrentUser.IsAllowed(Permissions.MyPermissionToSeeSomeHighlySensitiveData))<br />{ <br /> //existing code remains here<br />}<br />else<br />{ <br /> MessageBox("GoAway", "You have no permission to do that");<br />}</pre><p>There are about 130 separate permissions and about 190 places in the application where permissions are checked ... what an exciting way to spend Friday.</p>

 */ 

public const string content_01102008_b = ""; 
public const string content_01102008_r = ""; 

 /* 

 <p><a href=\"http://www.amazon.com/Peopleware-Productive-Projects-Teams-Second/dp/0932633439/ref=sr_1_1?ie=UTF8&s=books&qid=1232267243&sr=1-1">"Peopleware: Productive Projects and Teams (Second Edition)"</a></p><p>Great book. I won't try writing a review since there's plenty of them on the Internet. It's probably the most interesting book on managing software projects since</p><p><a href=\"http://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959/ref=sr_1_1?ie=UTF8&s=books&qid=1232267258&sr=1-1">"The Mythical Man-Month: Essays on Software Engineering"</a></p><p>(I don't read much on the subject anyway, so I could have missed a few dozens of good books).</p><p>Well after doing some reading, I learned a couple of things: my workspace is designed in the most counter-productive way possible and the project I am currently working on has all chances of joining those 25% of software products that are never actually used.</p><p style="color:#666666;">Mood: insanely optimistic.</p>

 */ 

public const string content_30092008_b = ""; 
public const string content_30092008_r = ""; 

 /* 
<p>Just to test out the editing capabilities here, I'll display a bit of code I use often.<br />Let's say I have a business entity class to keep some data.</p><pre class=\"brush:csharp\"><br />public class MyBusinessEntity <br />{<br />     public string MyProperty = string.Empty; <br />}</pre><p>I keep these business entities in a List</p><pre class=\"brush:csharp\"><br />List listToSearch = new List();<br />// fill the list with actual data</pre><p>I need to select all business entities that satisfy to a certain criteria.</p><pre class=\"brush:csharp\">List listIFound = <br />listToSearch.FindAll(delegate(MyBusinessEntity entity)<br />{<br />     return (entity.MyProperty == "myTestString"); <br />});</pre><p>listIFound will now contain all instances of MyBusinessEntity from listToSearch where MyProperty equals "myTestString".</p>

 */ 

public const string content_29092008_b = ""; 
public const string content_29092008_r = ""; 

 /* 
<div class="separator" style="clear: both; text-align: center;">
<a href=\"http://4.bp.blogspot.com/-LmtstprHOvM/UKLi1MIncdI/AAAAAAAABQo/rP8vTt04lVE/s1600/3.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="187" width="320" src=\"http://4.bp.blogspot.com/-LmtstprHOvM/UKLi1MIncdI/AAAAAAAABQo/rP8vTt04lVE/s320/3.png\" /></a></div>


 */ 
    }
}